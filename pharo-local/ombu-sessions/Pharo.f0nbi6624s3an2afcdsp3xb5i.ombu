OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T16:46:18.455412-03:00' ],		#prior : OmReference [ 'Pharo.dcjll45m939mvyt92hyl27rhq', '22858' ],		#self : OmReference [ '1' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LRPAbstractBridge_GeneratedVars\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-InterpreterGenerated\''			},			#name : #LRPAbstractBridge_GeneratedVars,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPAbstractBridge_GeneratedVars class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPAbstractBridge_GeneratedVars class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPAbstractBridge_GeneratedVars,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-InterpreterGenerated,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LRPAbstractBridge_GeneratedVars\r\tinstanceVariableNames: \'__lrpBridge\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-InterpreterGenerated\''			},			#name : #LRPAbstractBridge_GeneratedVars,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPAbstractBridge_GeneratedVars,						#isMetaSide : false					},					#name : #__lrpBridge,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPAbstractBridge_GeneratedVars class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPAbstractBridge_GeneratedVars class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPAbstractBridge_GeneratedVars,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-InterpreterGenerated,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T16:46:18.669668-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPAbstractBridge_GeneratedVars,				#isMetaSide : false			},			#name : #__lrpBridge,			#protocol : #accessing,			#sourceCode : '__lrpBridge\r\t^ __lrpBridge',			#stamp : 'RodrigoDelgado 9/20/2017 16:46',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T16:46:18.673615-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPAbstractBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'__lrpBridge:',			#protocol : #accessing,			#sourceCode : '__lrpBridge: anObject\r\t__lrpBridge := anObject',			#stamp : 'RodrigoDelgado 9/20/2017 16:46',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T16:46:19.480903-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpCategoryAddition {		#classCategoryName : #PetitCompiler-Generated,		#affectedPackageName : #PetitCompiler-Generated	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T16:46:19.483626-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'PPCompiledParser',				#traitCompositionSource : '{}',				#definitionSource : 'PPCompiledParser subclass: #LRPCompiledParser\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'character character_2 firstCharGuard_12 firstCharGuard_14 firstCharGuard_17 firstCharGuard_18 firstCharGuard_2 firstCharGuard_3 firstCharGuard_7 guard guard_10 guard_15 guard_16 guard_17 guard_18 guard_20 guard_22 guard_24 guard_25 guard_3 guard_32 guard_37 guard_38 guard_39 guard_40 guard_41 guard_42 guard_44 guard_45 guard_46 guard_47 guard_48 guard_5 guard_6 guard_7 guard_8 guard_9 parser parser_2 parser_3 predicate_10 predicate_12 predicate_2 predicate_6 predicate_7 smalltalk_ws\'\r\tpoolDictionaries: \'\'\r\tcategory: \'PetitCompiler-Generated\''			},			#name : #LRPCompiledParser,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPCompiledParser class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPCompiledParser class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPCompiledParser,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #character,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #character_2,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #firstCharGuard_12,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #firstCharGuard_14,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #firstCharGuard_17,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #firstCharGuard_18,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #firstCharGuard_2,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #firstCharGuard_3,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #firstCharGuard_7,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_10,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_15,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_16,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_17,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_18,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_20,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_22,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_24,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_25,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_3,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_32,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_37,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_38,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_39,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_40,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_41,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_42,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_44,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_45,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_46,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_47,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_48,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_5,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_6,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_7,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_8,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #guard_9,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #parser,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #parser_2,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #parser_3,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #predicate_10,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #predicate_12,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #predicate_2,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #predicate_6,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #predicate_7,					#parent : @7				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPCompiledParser,						#isMetaSide : false					},					#name : #smalltalk_ws,					#parent : @7				}			],			#category : #PetitCompiler-Generated,			#package : #PetitCompiler-Generated,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T16:46:21.621429-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LRPAbstractBridge_GeneratedVars\r\tinstanceVariableNames: \'__lrpBridge\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'LiveRobotics-InterpreterGenerated\''			},			#name : #LRPAbstractBridge_GeneratedVars,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteLRPAbstractBridge_GeneratedVars,						#isMetaSide : false					},					#name : #__lrpBridge,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPAbstractBridge_GeneratedVars class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteLRPAbstractBridge_GeneratedVars class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteLRPAbstractBridge_GeneratedVars,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-InterpreterGenerated,			#package : #_UnpackagedPackage,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T16:48:01.143805-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'ARDrone-CaroHernandez.88'		]	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ],		#time : DateAndTime [ '2017-09-20T16:48:01.304081-03:00' ],		#trigger : @3	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneConfigurationFileReceived\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DroneConfigurationFileReceived,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConfigurationFileReceived class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConfigurationFileReceived class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConfigurationFileReceived,					#isMetaSide : false				},				#parent : @7,				#content : 'I\'m announced every time the configuration file is received from the drone',				#stamp : 'CaroHernandez 7/20/2016 22:57'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m announced every time the configuration file is received from the drone',		#newStamp : 'CaroHernandez 7/20/2016 22:57'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ],		#time : DateAndTime [ '2017-09-20T16:48:01.306636-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpCategoryAddition {		#classCategoryName : #ARDrone,		#affectedPackageName : #ARDrone	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ],		#time : DateAndTime [ '2017-09-20T16:48:01.308161-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneConfigurationFileReceived\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #DroneConfigurationFileReceived,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConfigurationFileReceived class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConfigurationFileReceived class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConfigurationFileReceived,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced every time the configuration file is received from the drone',				#stamp : 'CaroHernandez 7/20/2016 22:57'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ],		#time : DateAndTime [ '2017-09-20T16:48:01.384985-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneConfigurationFileReceivedForTheFirstTime\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DroneConfigurationFileReceivedForTheFirstTime,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConfigurationFileReceivedForTheFirstTime class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConfigurationFileReceivedForTheFirstTime class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConfigurationFileReceivedForTheFirstTime,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when the configuration file is received from the drone for the first time after establishing connection',				#stamp : 'CaroHernandez 7/20/2016 22:57'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m announced when the configuration file is received from the drone for the first time after establishing connection',		#newStamp : 'CaroHernandez 7/20/2016 22:57'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ],		#time : DateAndTime [ '2017-09-20T16:48:01.38745-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneConfigurationFileReceivedForTheFirstTime\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #DroneConfigurationFileReceivedForTheFirstTime,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConfigurationFileReceivedForTheFirstTime class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConfigurationFileReceivedForTheFirstTime class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConfigurationFileReceivedForTheFirstTime,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when the configuration file is received from the drone for the first time after establishing connection',				#stamp : 'CaroHernandez 7/20/2016 22:57'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ],		#time : DateAndTime [ '2017-09-20T16:48:01.392337-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneConnecting\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DroneConnecting,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConnecting class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConnecting class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConnecting,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when the connection manager starts attempting to connect',				#stamp : 'CaroHernandez 5/19/2016 20:23'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m announced when the connection manager starts attempting to connect',		#newStamp : 'CaroHernandez 5/19/2016 20:23'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ],		#time : DateAndTime [ '2017-09-20T16:48:01.395433-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneConnecting\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #DroneConnecting,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConnecting class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConnecting class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConnecting,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when the connection manager starts attempting to connect',				#stamp : 'CaroHernandez 5/19/2016 20:23'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ],		#time : DateAndTime [ '2017-09-20T16:48:01.399788-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneConnectionStart\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DroneConnectionStart,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConnectionStart class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConnectionStart class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConnectionStart,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when the connection with the drone is established',				#stamp : 'CaroHernandez 5/2/2016 14:30'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m announced when the connection with the drone is established',		#newStamp : 'CaroHernandez 5/2/2016 14:30'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ],		#time : DateAndTime [ '2017-09-20T16:48:01.40194-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneConnectionStart\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #DroneConnectionStart,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConnectionStart class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConnectionStart class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConnectionStart,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when the connection with the drone is established',				#stamp : 'CaroHernandez 5/2/2016 14:30'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ],		#time : DateAndTime [ '2017-09-20T16:48:01.406965-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneConnectionStop\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DroneConnectionStop,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConnectionStop class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConnectionStop class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConnectionStop,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when the connection with the drone has terminated by the user or has been lost and the reconnection attempts has been useless',				#stamp : 'CaroHernandez 5/19/2016 20:26'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m announced when the connection with the drone has terminated by the user or has been lost and the reconnection attempts has been useless',		#newStamp : 'CaroHernandez 5/19/2016 20:26'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ],		#time : DateAndTime [ '2017-09-20T16:48:01.409536-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneConnectionStop\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #DroneConnectionStop,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConnectionStop class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConnectionStop class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConnectionStop,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when the connection with the drone has terminated by the user or has been lost and the reconnection attempts has been useless',				#stamp : 'CaroHernandez 5/19/2016 20:26'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ],		#time : DateAndTime [ '2017-09-20T16:48:01.417239-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneInEmergencyMode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DroneInEmergencyMode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneInEmergencyMode class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneInEmergencyMode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneInEmergencyMode,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when the drone has entered to Emergency mode',				#stamp : 'CaroHernandez 5/2/2016 04:07'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m announced when the drone has entered to Emergency mode',		#newStamp : 'CaroHernandez 5/2/2016 04:07'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ],		#time : DateAndTime [ '2017-09-20T16:48:01.419776-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneInEmergencyMode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #DroneInEmergencyMode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneInEmergencyMode class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneInEmergencyMode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneInEmergencyMode,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when the drone has entered to Emergency mode',				#stamp : 'CaroHernandez 5/2/2016 04:07'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ],		#time : DateAndTime [ '2017-09-20T16:48:01.425419-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneInNormalMode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DroneInNormalMode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneInNormalMode class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneInNormalMode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneInNormalMode,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when the drone has entered to Normal mode',				#stamp : 'CaroHernandez 5/2/2016 04:07'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m announced when the drone has entered to Normal mode',		#newStamp : 'CaroHernandez 5/2/2016 04:07'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ],		#time : DateAndTime [ '2017-09-20T16:48:01.428172-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneInNormalMode\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #DroneInNormalMode,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneInNormalMode class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneInNormalMode class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneInNormalMode,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when the drone has entered to Normal mode',				#stamp : 'CaroHernandez 5/2/2016 04:07'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ],		#time : DateAndTime [ '2017-09-20T16:48:01.433596-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneLanded\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DroneLanded,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneLanded class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneLanded class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneLanded,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when drone lands',				#stamp : 'CaroHernandez 3/25/2016 16:09'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m announced when drone lands',		#newStamp : 'CaroHernandez 3/25/2016 16:09'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ],		#time : DateAndTime [ '2017-09-20T16:48:01.43577-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneLanded\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #DroneLanded,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneLanded class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneLanded class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneLanded,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when drone lands',				#stamp : 'CaroHernandez 3/25/2016 16:09'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ],		#time : DateAndTime [ '2017-09-20T16:48:01.4405-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneNavdataPacketReceived\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DroneNavdataPacketReceived,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneNavdataPacketReceived class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneNavdataPacketReceived class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneNavdataPacketReceived,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced every time a navdata packet is received from the drone.',				#stamp : 'CaroHernandez 4/30/2016 17:43'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m announced every time a navdata packet is received from the drone.',		#newStamp : 'CaroHernandez 4/30/2016 17:43'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ],		#time : DateAndTime [ '2017-09-20T16:48:01.443174-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneNavdataPacketReceived\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #DroneNavdataPacketReceived,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneNavdataPacketReceived class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneNavdataPacketReceived class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneNavdataPacketReceived,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced every time a navdata packet is received from the drone.',				#stamp : 'CaroHernandez 4/30/2016 17:43'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ],		#time : DateAndTime [ '2017-09-20T16:48:01.450508-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneTookOff\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DroneTookOff,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneTookOff class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneTookOff class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneTookOff,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when drone takes off\r',				#stamp : 'CaroHernandez 3/25/2016 16:10'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m announced when drone takes off\r',		#newStamp : 'CaroHernandez 3/25/2016 16:10'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ],		#time : DateAndTime [ '2017-09-20T16:48:01.452718-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Announcement',				#traitCompositionSource : '{}',				#definitionSource : 'Announcement subclass: #DroneTookOff\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #DroneTookOff,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneTookOff class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneTookOff class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneTookOff,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m announced when drone takes off\r',				#stamp : 'CaroHernandez 3/25/2016 16:10'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ],		#time : DateAndTime [ '2017-09-20T16:48:01.457239-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Exception',				#traitCompositionSource : '{}',				#definitionSource : 'Exception subclass: #DroneAuthenticationFailed\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DroneAuthenticationFailed,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneAuthenticationFailed class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneAuthenticationFailed class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneAuthenticationFailed,					#isMetaSide : false				},				#parent : @8,				#content : 'I raise when the drone doesn\'t send back the right authentication response',				#stamp : 'CaroHernandez 3/24/2016 22:04'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I raise when the drone doesn\'t send back the right authentication response',		#newStamp : 'CaroHernandez 3/24/2016 22:04'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ],		#time : DateAndTime [ '2017-09-20T16:48:01.459967-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Exception',				#traitCompositionSource : '{}',				#definitionSource : 'Exception subclass: #DroneAuthenticationFailed\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #DroneAuthenticationFailed,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneAuthenticationFailed class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneAuthenticationFailed class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneAuthenticationFailed,					#isMetaSide : false				},				#parent : @8,				#content : 'I raise when the drone doesn\'t send back the right authentication response',				#stamp : 'CaroHernandez 3/24/2016 22:04'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ],		#time : DateAndTime [ '2017-09-20T16:48:01.465596-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Exception',				#traitCompositionSource : '{}',				#definitionSource : 'Exception subclass: #DroneConfigurationAttemptFailed\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DroneConfigurationAttemptFailed,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConfigurationAttemptFailed class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConfigurationAttemptFailed class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConfigurationAttemptFailed,					#isMetaSide : false				},				#parent : @8,				#content : 'I raise when the drone doesn\'t respond to a configuration command. The drone must be restarted in order to success in configuring.',				#stamp : 'CaroHernandez 6/30/2016 21:19'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I raise when the drone doesn\'t respond to a configuration command. The drone must be restarted in order to success in configuring.',		#newStamp : 'CaroHernandez 6/30/2016 21:19'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ],		#time : DateAndTime [ '2017-09-20T16:48:01.46779-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Exception',				#traitCompositionSource : '{}',				#definitionSource : 'Exception subclass: #DroneConfigurationAttemptFailed\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #DroneConfigurationAttemptFailed,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConfigurationAttemptFailed class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConfigurationAttemptFailed class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConfigurationAttemptFailed,					#isMetaSide : false				},				#parent : @8,				#content : 'I raise when the drone doesn\'t respond to a configuration command. The drone must be restarted in order to success in configuring.',				#stamp : 'CaroHernandez 6/30/2016 21:19'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ],		#time : DateAndTime [ '2017-09-20T16:48:01.472258-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Exception',				#traitCompositionSource : '{}',				#definitionSource : 'Exception subclass: #DroneConnectionAdapterDisconnected\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DroneConnectionAdapterDisconnected,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConnectionAdapterDisconnected class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConnectionAdapterDisconnected class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConnectionAdapterDisconnected,					#isMetaSide : false				},				#parent : @8,				#content : 'I raise when the drone wireless adapter is not connected to any network',				#stamp : 'CaroHernandez 5/19/2016 23:03'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I raise when the drone wireless adapter is not connected to any network',		#newStamp : 'CaroHernandez 5/19/2016 23:03'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ],		#time : DateAndTime [ '2017-09-20T16:48:01.476174-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Exception',				#traitCompositionSource : '{}',				#definitionSource : 'Exception subclass: #DroneConnectionAdapterDisconnected\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #DroneConnectionAdapterDisconnected,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConnectionAdapterDisconnected class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConnectionAdapterDisconnected class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConnectionAdapterDisconnected,					#isMetaSide : false				},				#parent : @8,				#content : 'I raise when the drone wireless adapter is not connected to any network',				#stamp : 'CaroHernandez 5/19/2016 23:03'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ],		#time : DateAndTime [ '2017-09-20T16:48:01.482761-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Exception',				#traitCompositionSource : '{}',				#definitionSource : 'Exception subclass: #DroneConnectionInterrupted\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DroneConnectionInterrupted,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConnectionInterrupted class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConnectionInterrupted class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConnectionInterrupted,					#isMetaSide : false				},				#parent : @8,				#content : 'I raise when has passed 0.5 seconds since the last navdata arrived and no other navdata packet has been received',				#stamp : 'CaroHernandez 5/19/2016 22:25'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I raise when has passed 0.5 seconds since the last navdata arrived and no other navdata packet has been received',		#newStamp : 'CaroHernandez 5/19/2016 22:25'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ],		#time : DateAndTime [ '2017-09-20T16:48:01.484937-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Exception',				#traitCompositionSource : '{}',				#definitionSource : 'Exception subclass: #DroneConnectionInterrupted\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #DroneConnectionInterrupted,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConnectionInterrupted class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConnectionInterrupted class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConnectionInterrupted,					#isMetaSide : false				},				#parent : @8,				#content : 'I raise when has passed 0.5 seconds since the last navdata arrived and no other navdata packet has been received',				#stamp : 'CaroHernandez 5/19/2016 22:25'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ],		#time : DateAndTime [ '2017-09-20T16:48:01.489201-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Exception',				#traitCompositionSource : '{}',				#definitionSource : 'Exception subclass: #DroneConnectionTimeout\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DroneConnectionTimeout,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConnectionTimeout class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConnectionTimeout class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConnectionTimeout,					#isMetaSide : false				},				#parent : @8,				#content : 'I raise when no response is received from the drone after attempting to reconnect n times (default n = 10 times, it can be modified by the user)',				#stamp : 'CaroHernandez 5/19/2016 22:23'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I raise when no response is received from the drone after attempting to reconnect n times (default n = 10 times, it can be modified by the user)',		#newStamp : 'CaroHernandez 5/19/2016 22:23'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ],		#time : DateAndTime [ '2017-09-20T16:48:01.491404-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Exception',				#traitCompositionSource : '{}',				#definitionSource : 'Exception subclass: #DroneConnectionTimeout\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #DroneConnectionTimeout,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DroneConnectionTimeout class\r\tinstanceVariableNames: \'\''				},				#name : #'DroneConnectionTimeout class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DroneConnectionTimeout,					#isMetaSide : false				},				#parent : @8,				#content : 'I raise when no response is received from the drone after attempting to reconnect n times (default n = 10 times, it can be modified by the user)',				#stamp : 'CaroHernandez 5/19/2016 22:23'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ],		#time : DateAndTime [ '2017-09-20T16:48:01.496258-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #ARDUIKeyboard\r\tinstanceVariableNames: \'arDrone enabled pressedKeys moveKeysDict ledKeysDic pirouetteKeysDict speed ledFrequency ledDuration pirouetteDuration motionStateUI\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDUIKeyboard,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #enabled,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #pressedKeys,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #moveKeysDict,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #ledKeysDic,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #pirouetteKeysDict,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #speed,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #ledFrequency,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #ledDuration,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #pirouetteDuration,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #motionStateUI,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDUIKeyboard class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDUIKeyboard class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDUIKeyboard,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m a morph that listens to keyboard events and controls the Drone  according to the keys pressed\r\rInstance Variables\r\tarDrone:\t\t<ARDrone>',				#stamp : 'CaroHernandez 5/2/2016 14:36'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m a morph that listens to keyboard events and controls the Drone  according to the keys pressed\r\rInstance Variables\r\tarDrone:\t\t<ARDrone>',		#newStamp : 'CaroHernandez 5/2/2016 14:36'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ],		#time : DateAndTime [ '2017-09-20T16:48:01.498693-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #ARDUIKeyboard\r\tinstanceVariableNames: \'arDrone enabled pressedKeys moveKeysDict ledKeysDic pirouetteKeysDict speed ledFrequency ledDuration pirouetteDuration motionStateUI\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDUIKeyboard,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #enabled,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #pressedKeys,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #moveKeysDict,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #ledKeysDic,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #pirouetteKeysDict,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #speed,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #ledFrequency,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #ledDuration,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #pirouetteDuration,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIKeyboard,						#isMetaSide : false					},					#name : #motionStateUI,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDUIKeyboard class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDUIKeyboard class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDUIKeyboard,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m a morph that listens to keyboard events and controls the Drone  according to the keys pressed\r\rInstance Variables\r\tarDrone:\t\t<ARDrone>',				#stamp : 'CaroHernandez 5/2/2016 14:36'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ],		#time : DateAndTime [ '2017-09-20T16:48:01.5052-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #ARDUIMotionState\r\tinstanceVariableNames: \'arDrone forward backward left right cw cc up down speed keysArray activeColorFocused inactiveColorFocused activeColorDefocused inactiveColorDefocused disabledColor enabled gotFocus\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDUIMotionState,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #forward,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #backward,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #left,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #right,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #cw,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #cc,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #up,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #down,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #speed,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #keysArray,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #activeColorFocused,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #inactiveColorFocused,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #activeColorDefocused,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #inactiveColorDefocused,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #disabledColor,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #enabled,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #gotFocus,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDUIMotionState class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDUIMotionState class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDUIMotionState,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m a morph that reflects graphically the current motion state of its drone instance ',				#stamp : 'CaroHernandez 7/22/2016 18:34'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m a morph that reflects graphically the current motion state of its drone instance ',		#newStamp : 'CaroHernandez 7/22/2016 18:34'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ],		#time : DateAndTime [ '2017-09-20T16:48:01.509044-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #ARDUIMotionState\r\tinstanceVariableNames: \'arDrone forward backward left right cw cc up down speed keysArray activeColorFocused inactiveColorFocused activeColorDefocused inactiveColorDefocused disabledColor enabled gotFocus\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDUIMotionState,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #forward,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #backward,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #left,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #right,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #cw,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #cc,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #up,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #down,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #speed,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #keysArray,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #activeColorFocused,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #inactiveColorFocused,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #activeColorDefocused,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #inactiveColorDefocused,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #disabledColor,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #enabled,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIMotionState,						#isMetaSide : false					},					#name : #gotFocus,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDUIMotionState class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDUIMotionState class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDUIMotionState,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m a morph that reflects graphically the current motion state of its drone instance ',				#stamp : 'CaroHernandez 7/22/2016 18:34'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ],		#time : DateAndTime [ '2017-09-20T16:48:01.515051-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDAdapterTCP\r\tinstanceVariableNames: \'arDrone socket port droneAddress\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDAdapterTCP,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterTCP,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterTCP,						#isMetaSide : false					},					#name : #socket,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterTCP,						#isMetaSide : false					},					#name : #port,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterTCP,						#isMetaSide : false					},					#name : #droneAddress,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDAdapterTCP class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDAdapterTCP class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDAdapterTCP,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ],		#time : DateAndTime [ '2017-09-20T16:48:01.519837-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDAdapterUDP\r\tinstanceVariableNames: \'arDrone socket droneAddress delayInterval isMulticast mutex recipientByteArray\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDAdapterUDP,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterUDP,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterUDP,						#isMetaSide : false					},					#name : #socket,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterUDP,						#isMetaSide : false					},					#name : #droneAddress,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterUDP,						#isMetaSide : false					},					#name : #delayInterval,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterUDP,						#isMetaSide : false					},					#name : #isMulticast,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterUDP,						#isMetaSide : false					},					#name : #mutex,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterUDP,						#isMetaSide : false					},					#name : #recipientByteArray,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDAdapterUDP class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDAdapterUDP class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDAdapterUDP,					#isMetaSide : false				},				#parent : @8,				#content : 'I set up an interface for communicating via UDP with the drone\rI\'m designed for being used privatly inside this ArDrone\'s API, but if you want to know how I work, here it is:\r\rAPI messages:\r\t-- ARDAdapterUDP class >> withPort:  droneAddress:  isMulticast:  delayInterval: \r\t\t\t-> Returns a new instance of this class\r\t- ARDAdapterUDP >> send:   \t\t\t\t\t\t\r\t\t\t->Sends a message\r\t- ARDAdapterUDP >> receive \t\t\t\t\t\r\t\t\t-> Receives a single message\r\t- ARDAdapterUDP >> receiveWithin:  onTimeout:  \t\r\t\t\t-> Tries to receive a message during a time interval\r\r\rInstance variables:\r\t- socket <Socket>: UDP socket used to send and receive\r\t- droneAddress <IP address>: drone\'s IP address \r\t- delayInterval <Integer>: time interval between messages sent\r\t- isMulticast <Boolean>: tells wether the socket is multicast or not\r\t- mutex <Mutex>: used to ensure the usage of the command send is exclusive. (only one process can use this adapter to send messages at the time)',				#stamp : 'CaroHernandez 3/25/2016 17:07'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I set up an interface for communicating via UDP with the drone\rI\'m designed for being used privatly inside this ArDrone\'s API, but if you want to know how I work, here it is:\r\rAPI messages:\r\t-- ARDAdapterUDP class >> withPort:  droneAddress:  isMulticast:  delayInterval: \r\t\t\t-> Returns a new instance of this class\r\t- ARDAdapterUDP >> send:   \t\t\t\t\t\t\r\t\t\t->Sends a message\r\t- ARDAdapterUDP >> receive \t\t\t\t\t\r\t\t\t-> Receives a single message\r\t- ARDAdapterUDP >> receiveWithin:  onTimeout:  \t\r\t\t\t-> Tries to receive a message during a time interval\r\r\rInstance variables:\r\t- socket <Socket>: UDP socket used to send and receive\r\t- droneAddress <IP address>: drone\'s IP address \r\t- delayInterval <Integer>: time interval between messages sent\r\t- isMulticast <Boolean>: tells wether the socket is multicast or not\r\t- mutex <Mutex>: used to ensure the usage of the command send is exclusive. (only one process can use this adapter to send messages at the time)',		#newStamp : 'CaroHernandez 3/25/2016 17:07'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ],		#time : DateAndTime [ '2017-09-20T16:48:01.522543-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDAdapterUDP\r\tinstanceVariableNames: \'arDrone socket droneAddress delayInterval isMulticast mutex recipientByteArray\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDAdapterUDP,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterUDP,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterUDP,						#isMetaSide : false					},					#name : #socket,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterUDP,						#isMetaSide : false					},					#name : #droneAddress,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterUDP,						#isMetaSide : false					},					#name : #delayInterval,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterUDP,						#isMetaSide : false					},					#name : #isMulticast,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterUDP,						#isMetaSide : false					},					#name : #mutex,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDAdapterUDP,						#isMetaSide : false					},					#name : #recipientByteArray,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDAdapterUDP class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDAdapterUDP class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDAdapterUDP,					#isMetaSide : false				},				#parent : @8,				#content : 'I set up an interface for communicating via UDP with the drone\rI\'m designed for being used privatly inside this ArDrone\'s API, but if you want to know how I work, here it is:\r\rAPI messages:\r\t-- ARDAdapterUDP class >> withPort:  droneAddress:  isMulticast:  delayInterval: \r\t\t\t-> Returns a new instance of this class\r\t- ARDAdapterUDP >> send:   \t\t\t\t\t\t\r\t\t\t->Sends a message\r\t- ARDAdapterUDP >> receive \t\t\t\t\t\r\t\t\t-> Receives a single message\r\t- ARDAdapterUDP >> receiveWithin:  onTimeout:  \t\r\t\t\t-> Tries to receive a message during a time interval\r\r\rInstance variables:\r\t- socket <Socket>: UDP socket used to send and receive\r\t- droneAddress <IP address>: drone\'s IP address \r\t- delayInterval <Integer>: time interval between messages sent\r\t- isMulticast <Boolean>: tells wether the socket is multicast or not\r\t- mutex <Mutex>: used to ensure the usage of the command send is exclusive. (only one process can use this adapter to send messages at the time)',				#stamp : 'CaroHernandez 3/25/2016 17:07'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ],		#time : DateAndTime [ '2017-09-20T16:48:01.527802-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDCommand\r\tinstanceVariableNames: \'prefix sequenceNumber argumentCollection\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDCommand,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommand,						#isMetaSide : false					},					#name : #prefix,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommand,						#isMetaSide : false					},					#name : #sequenceNumber,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommand,						#isMetaSide : false					},					#name : #argumentCollection,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDCommand class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDCommand class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDCommand,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent an AT command for sending to the ar drone.\r\rAPI messages:\r\t-  ARDCommand class >> withPrefix: sequence: arguments:\r\t\t\t-> returns an instance of this class\rExample:\t\r\tFor creating an ARDCommand that represents the next AT command:\r\t\tAT*CONFIG=605,"video:video_on_usb","TRUE"\r\tyou must instanciate me in the following way:\r\t\tnewCommand := withPrefix:\'AT*CONFIG\' sequence: 605 arguments: { \'video:video_on_usb\', \'TRUE\' }\r\t\t\rOn my class side, under the "preset messages" protocol, I contain a set of preset commands, ready to be send to the drone.\rBesides, under the "enumerating - associations" protocol, I contain a set of messages for intuitively refering to values that can be send inside AT commands.\r\r\t\t\rInstance variables:\r\t- prefix <String>\r\t- sequenceNumber <Integer>\r\t- argumentCollection <Collection<String or Integer>>\r\r\r\r\r',				#stamp : 'CaroHernandez 3/25/2016 16:13'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I represent an AT command for sending to the ar drone.\r\rAPI messages:\r\t-  ARDCommand class >> withPrefix: sequence: arguments:\r\t\t\t-> returns an instance of this class\rExample:\t\r\tFor creating an ARDCommand that represents the next AT command:\r\t\tAT*CONFIG=605,"video:video_on_usb","TRUE"\r\tyou must instanciate me in the following way:\r\t\tnewCommand := withPrefix:\'AT*CONFIG\' sequence: 605 arguments: { \'video:video_on_usb\', \'TRUE\' }\r\t\t\rOn my class side, under the "preset messages" protocol, I contain a set of preset commands, ready to be send to the drone.\rBesides, under the "enumerating - associations" protocol, I contain a set of messages for intuitively refering to values that can be send inside AT commands.\r\r\t\t\rInstance variables:\r\t- prefix <String>\r\t- sequenceNumber <Integer>\r\t- argumentCollection <Collection<String or Integer>>\r\r\r\r\r',		#newStamp : 'CaroHernandez 3/25/2016 16:13'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ],		#time : DateAndTime [ '2017-09-20T16:48:01.530567-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDCommand\r\tinstanceVariableNames: \'prefix sequenceNumber argumentCollection\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDCommand,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommand,						#isMetaSide : false					},					#name : #prefix,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommand,						#isMetaSide : false					},					#name : #sequenceNumber,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommand,						#isMetaSide : false					},					#name : #argumentCollection,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDCommand class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDCommand class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDCommand,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent an AT command for sending to the ar drone.\r\rAPI messages:\r\t-  ARDCommand class >> withPrefix: sequence: arguments:\r\t\t\t-> returns an instance of this class\rExample:\t\r\tFor creating an ARDCommand that represents the next AT command:\r\t\tAT*CONFIG=605,"video:video_on_usb","TRUE"\r\tyou must instanciate me in the following way:\r\t\tnewCommand := withPrefix:\'AT*CONFIG\' sequence: 605 arguments: { \'video:video_on_usb\', \'TRUE\' }\r\t\t\rOn my class side, under the "preset messages" protocol, I contain a set of preset commands, ready to be send to the drone.\rBesides, under the "enumerating - associations" protocol, I contain a set of messages for intuitively refering to values that can be send inside AT commands.\r\r\t\t\rInstance variables:\r\t- prefix <String>\r\t- sequenceNumber <Integer>\r\t- argumentCollection <Collection<String or Integer>>\r\r\r\r\r',				#stamp : 'CaroHernandez 3/25/2016 16:13'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ],		#time : DateAndTime [ '2017-09-20T16:48:01.538426-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDCommandManager\r\tinstanceVariableNames: \'arDrone commandsQueue senderProcess motionCommandsSenderProcess applicationId profileId sessionId stabilizeCommandSent lastMotionStateSent suspendProcesses\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDCommandManager,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #commandsQueue,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #senderProcess,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #motionCommandsSenderProcess,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #applicationId,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #profileId,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #sessionId,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #stabilizeCommandSent,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #lastMotionStateSent,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #suspendProcesses,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDCommandManager class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDCommandManager class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDCommandManager,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m the ARDrone\'s command manager, my main responsibility is to use the  ARDrone instance adapters to send AT̈*commands, and provide a friendly api for sending messages to control the drone\'s movements and configuration.\r\rIMPORTANT: It\'s the user\'s responsibility to terminate each instance of this class using the message ARDCommandManager>> terminate (this message is called from ARDrone terminateSession). If an instance is not terminated, two processes will keep running in background. \r\r\rI run two processes that send commands automatically: \r\t- The senderProcess dequeues and send commands enqueued by the user using the message enqueue \r\t- The motionCommandsSenderProcess permanently sends commands for controlling the drone\'s movements, acording to the ARDMotionState value of the arDrone\'s instance refered by the arDrone instance variable\r\rInstance variables: \r\t- arDrone <ARDrone>\r\t- commandsQueue  <SharedQueue>\r\t- senderProcess <Process>\r\t- motionCommandsSenderProcess <Process>\r\rAPI messages:\r\t- ARDCommandManager class >> withARDrone:\r\t\t\t-> returns an instance of the class.\r\t\t\r\t- ARDCommandManager >> enqueue:\r\t\t\t-> enqueues the command received as argument, so that the sender process can dequeue it and send it automatically when its turn arrives \r\t\r\t- ARDCommandManager >> land \r\t\t\t-> sends the land command until the drone\'s fly mask is 0 (drone landed)\r\r\t- ARDCommandManager >> takeOff\t\t\r\t\t\t-> sends the takeoff command until the drone\'s fly mask is 1 (drone flying)\r\r\t- ARDCommandManager >> animateLEDs:  frequency:  duration:  seq: \r\t\t\t-> sends a single command to animate drone\'s LED \r\r\t- ARDCommandManager >> terminate\t\r\t\t\t-> terminates all processes related to this instance',				#stamp : 'CaroHernandez 5/2/2016 14:33'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m the ARDrone\'s command manager, my main responsibility is to use the  ARDrone instance adapters to send AT̈*commands, and provide a friendly api for sending messages to control the drone\'s movements and configuration.\r\rIMPORTANT: It\'s the user\'s responsibility to terminate each instance of this class using the message ARDCommandManager>> terminate (this message is called from ARDrone terminateSession). If an instance is not terminated, two processes will keep running in background. \r\r\rI run two processes that send commands automatically: \r\t- The senderProcess dequeues and send commands enqueued by the user using the message enqueue \r\t- The motionCommandsSenderProcess permanently sends commands for controlling the drone\'s movements, acording to the ARDMotionState value of the arDrone\'s instance refered by the arDrone instance variable\r\rInstance variables: \r\t- arDrone <ARDrone>\r\t- commandsQueue  <SharedQueue>\r\t- senderProcess <Process>\r\t- motionCommandsSenderProcess <Process>\r\rAPI messages:\r\t- ARDCommandManager class >> withARDrone:\r\t\t\t-> returns an instance of the class.\r\t\t\r\t- ARDCommandManager >> enqueue:\r\t\t\t-> enqueues the command received as argument, so that the sender process can dequeue it and send it automatically when its turn arrives \r\t\r\t- ARDCommandManager >> land \r\t\t\t-> sends the land command until the drone\'s fly mask is 0 (drone landed)\r\r\t- ARDCommandManager >> takeOff\t\t\r\t\t\t-> sends the takeoff command until the drone\'s fly mask is 1 (drone flying)\r\r\t- ARDCommandManager >> animateLEDs:  frequency:  duration:  seq: \r\t\t\t-> sends a single command to animate drone\'s LED \r\r\t- ARDCommandManager >> terminate\t\r\t\t\t-> terminates all processes related to this instance',		#newStamp : 'CaroHernandez 5/2/2016 14:33'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ],		#time : DateAndTime [ '2017-09-20T16:48:01.545904-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDCommandManager\r\tinstanceVariableNames: \'arDrone commandsQueue senderProcess motionCommandsSenderProcess applicationId profileId sessionId stabilizeCommandSent lastMotionStateSent suspendProcesses\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDCommandManager,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #commandsQueue,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #senderProcess,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #motionCommandsSenderProcess,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #applicationId,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #profileId,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #sessionId,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #stabilizeCommandSent,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #lastMotionStateSent,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDCommandManager,						#isMetaSide : false					},					#name : #suspendProcesses,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDCommandManager class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDCommandManager class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDCommandManager,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m the ARDrone\'s command manager, my main responsibility is to use the  ARDrone instance adapters to send AT̈*commands, and provide a friendly api for sending messages to control the drone\'s movements and configuration.\r\rIMPORTANT: It\'s the user\'s responsibility to terminate each instance of this class using the message ARDCommandManager>> terminate (this message is called from ARDrone terminateSession). If an instance is not terminated, two processes will keep running in background. \r\r\rI run two processes that send commands automatically: \r\t- The senderProcess dequeues and send commands enqueued by the user using the message enqueue \r\t- The motionCommandsSenderProcess permanently sends commands for controlling the drone\'s movements, acording to the ARDMotionState value of the arDrone\'s instance refered by the arDrone instance variable\r\rInstance variables: \r\t- arDrone <ARDrone>\r\t- commandsQueue  <SharedQueue>\r\t- senderProcess <Process>\r\t- motionCommandsSenderProcess <Process>\r\rAPI messages:\r\t- ARDCommandManager class >> withARDrone:\r\t\t\t-> returns an instance of the class.\r\t\t\r\t- ARDCommandManager >> enqueue:\r\t\t\t-> enqueues the command received as argument, so that the sender process can dequeue it and send it automatically when its turn arrives \r\t\r\t- ARDCommandManager >> land \r\t\t\t-> sends the land command until the drone\'s fly mask is 0 (drone landed)\r\r\t- ARDCommandManager >> takeOff\t\t\r\t\t\t-> sends the takeoff command until the drone\'s fly mask is 1 (drone flying)\r\r\t- ARDCommandManager >> animateLEDs:  frequency:  duration:  seq: \r\t\t\t-> sends a single command to animate drone\'s LED \r\r\t- ARDCommandManager >> terminate\t\r\t\t\t-> terminates all processes related to this instance',				#stamp : 'CaroHernandez 5/2/2016 14:33'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ],		#time : DateAndTime [ '2017-09-20T16:48:01.556089-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDConfigurationManager\r\tinstanceVariableNames: \'arDrone adapterTCP configuration configRetrievedAnnounced retrieverProcess suspendProcess terminateProcess timeLastUpdate\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDConfigurationManager,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConfigurationManager,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConfigurationManager,						#isMetaSide : false					},					#name : #adapterTCP,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConfigurationManager,						#isMetaSide : false					},					#name : #configuration,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConfigurationManager,						#isMetaSide : false					},					#name : #configRetrievedAnnounced,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConfigurationManager,						#isMetaSide : false					},					#name : #retrieverProcess,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConfigurationManager,						#isMetaSide : false					},					#name : #suspendProcess,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConfigurationManager,						#isMetaSide : false					},					#name : #terminateProcess,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConfigurationManager,						#isMetaSide : false					},					#name : #timeLastUpdate,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDConfigurationManager class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDConfigurationManager class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDConfigurationManager,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ],		#time : DateAndTime [ '2017-09-20T16:48:01.561388-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDConnectionManager\r\tinstanceVariableNames: \'arDrone mutex timer watchdogProcess connectionState reconnectTimeout gcTimer\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDConnectionManager,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConnectionManager,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConnectionManager,						#isMetaSide : false					},					#name : #mutex,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConnectionManager,						#isMetaSide : false					},					#name : #timer,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConnectionManager,						#isMetaSide : false					},					#name : #watchdogProcess,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConnectionManager,						#isMetaSide : false					},					#name : #connectionState,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConnectionManager,						#isMetaSide : false					},					#name : #reconnectTimeout,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConnectionManager,						#isMetaSide : false					},					#name : #gcTimer,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDConnectionManager class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDConnectionManager class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDConnectionManager,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m the ARDConnectionManager. I authenticate to the drone and announce when the connection is lost. \r\rIMPORTANT: It\'s the user\'s responsibility to terminate each instance of this class using the message ARDConnectionManager>>terminate (this message is called from ARDrone terminateSession). If the instance is not terminated, one process will keep running in background\r',				#stamp : 'CaroHernandez 5/2/2016 14:34'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m the ARDConnectionManager. I authenticate to the drone and announce when the connection is lost. \r\rIMPORTANT: It\'s the user\'s responsibility to terminate each instance of this class using the message ARDConnectionManager>>terminate (this message is called from ARDrone terminateSession). If the instance is not terminated, one process will keep running in background\r',		#newStamp : 'CaroHernandez 5/2/2016 14:34'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ],		#time : DateAndTime [ '2017-09-20T16:48:01.563733-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDConnectionManager\r\tinstanceVariableNames: \'arDrone mutex timer watchdogProcess connectionState reconnectTimeout gcTimer\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDConnectionManager,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConnectionManager,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConnectionManager,						#isMetaSide : false					},					#name : #mutex,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConnectionManager,						#isMetaSide : false					},					#name : #timer,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConnectionManager,						#isMetaSide : false					},					#name : #watchdogProcess,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConnectionManager,						#isMetaSide : false					},					#name : #connectionState,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConnectionManager,						#isMetaSide : false					},					#name : #reconnectTimeout,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDConnectionManager,						#isMetaSide : false					},					#name : #gcTimer,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDConnectionManager class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDConnectionManager class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDConnectionManager,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m the ARDConnectionManager. I authenticate to the drone and announce when the connection is lost. \r\rIMPORTANT: It\'s the user\'s responsibility to terminate each instance of this class using the message ARDConnectionManager>>terminate (this message is called from ARDrone terminateSession). If the instance is not terminated, one process will keep running in background\r',				#stamp : 'CaroHernandez 5/2/2016 14:34'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ],		#time : DateAndTime [ '2017-09-20T16:48:01.56798-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDConstant\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDConstant,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDConstant class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDConstant class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDConstant,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m ARDConstant, I\'m a static class that contains constant values defined by the AR.Drone firmware, that are necessary for communication.',				#stamp : 'CaroHernandez 5/8/2016 19:11'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m ARDConstant, I\'m a static class that contains constant values defined by the AR.Drone firmware, that are necessary for communication.',		#newStamp : 'CaroHernandez 5/8/2016 19:11'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ],		#time : DateAndTime [ '2017-09-20T16:48:01.570361-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDConstant\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDConstant,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDConstant class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDConstant class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDConstant,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m ARDConstant, I\'m a static class that contains constant values defined by the AR.Drone firmware, that are necessary for communication.',				#stamp : 'CaroHernandez 5/8/2016 19:11'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ],		#time : DateAndTime [ '2017-09-20T16:48:01.576254-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDDetectedTag\r\tinstanceVariableNames: \'detected type xc yc width height distance orientationAngle cameraSource lastPositions count lastDetections detectedTagType\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDDetectedTag,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #detected,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #type,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #xc,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #yc,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #width,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #height,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #distance,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #orientationAngle,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #cameraSource,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #lastPositions,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #count,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #lastDetections,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #detectedTagType,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDDetectedTag class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDDetectedTag class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDDetectedTag,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent a tag detected in a specific camera by the drone firmware, and informed via navdata.  I contain the logic to answer questions such as if I\'m centered, etc.',				#stamp : 'CaroHernandez 8/22/2016 17:56'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I represent a tag detected in a specific camera by the drone firmware, and informed via navdata.  I contain the logic to answer questions such as if I\'m centered, etc.',		#newStamp : 'CaroHernandez 8/22/2016 17:56'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ],		#time : DateAndTime [ '2017-09-20T16:48:01.580281-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDDetectedTag\r\tinstanceVariableNames: \'detected type xc yc width height distance orientationAngle cameraSource lastPositions count lastDetections detectedTagType\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDDetectedTag,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #detected,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #type,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #xc,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #yc,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #width,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #height,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #distance,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #orientationAngle,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #cameraSource,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #lastPositions,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #count,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #lastDetections,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDDetectedTag,						#isMetaSide : false					},					#name : #detectedTagType,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDDetectedTag class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDDetectedTag class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDDetectedTag,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent a tag detected in a specific camera by the drone firmware, and informed via navdata.  I contain the logic to answer questions such as if I\'m centered, etc.',				#stamp : 'CaroHernandez 8/22/2016 17:56'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ],		#time : DateAndTime [ '2017-09-20T16:48:01.58567-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDMotionState\r\tinstanceVariableNames: \'leftRightTilt frontBackTilt verticalSpeed angularSpeed\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDMotionState,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDMotionState,						#isMetaSide : false					},					#name : #leftRightTilt,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDMotionState,						#isMetaSide : false					},					#name : #frontBackTilt,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDMotionState,						#isMetaSide : false					},					#name : #verticalSpeed,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDMotionState,						#isMetaSide : false					},					#name : #angularSpeed,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDMotionState class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDMotionState class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDMotionState,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent the drone\'s motion state on a certain moment, according to its velocity and tilt.\rI\'m designed to be an instance variable within the ARDrone\'s class, so I can save the drone\'s desired motion state in every moment, and I can be read by the motionCommandsSenderProcess (run by ARDCommandManager) to determine the tilts an velocities of every motion command that it sends to the real drone.\r \rAPI messages:\r\t- ARDMotionState >> new\r\t\t\t-> returns an instance of the class.\r\t\r\t- ARDMotionState >> angularSpeed:\r\t\t\t-> sets the angular speed\r\t\t\t\r\t- ARDMotionState >> frontBackTilt:\r\t\t\t-> sets the front back tilt\r\t\r\t- ARDMotionState >> leftRightTilt:\r\t\t\t-> sets the left right tilt\r\t\r\t- ARDMotionState >> verticalSpeed:\r\t\t\t-> sets the vertical speed\r\rInstance variables:\r\r-leftRightTilt (roll or phi angle) \t\r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max roll inclination set for the drone \t\r\t\t\t- (-) for left, (+) for right.\r\r- frontBackTilt (pitch or theta angle) \r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max pitch inclination set for the drone \r\t\t\t- (-) for front (drone lowers its nose), (+) for back (drone raises its nose)\r\r- VerticalSpeed (gaz) \r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum vertical speed \r\t\t\t- (+) for elevating, (-) for descending.\r\r- AngularSpeed (yaw)\r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum angular speed \r\t\t\t- (+) for spinning right, (-) for spinning left.',				#stamp : 'CaroHernandez 3/25/2016 17:27'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I represent the drone\'s motion state on a certain moment, according to its velocity and tilt.\rI\'m designed to be an instance variable within the ARDrone\'s class, so I can save the drone\'s desired motion state in every moment, and I can be read by the motionCommandsSenderProcess (run by ARDCommandManager) to determine the tilts an velocities of every motion command that it sends to the real drone.\r \rAPI messages:\r\t- ARDMotionState >> new\r\t\t\t-> returns an instance of the class.\r\t\r\t- ARDMotionState >> angularSpeed:\r\t\t\t-> sets the angular speed\r\t\t\t\r\t- ARDMotionState >> frontBackTilt:\r\t\t\t-> sets the front back tilt\r\t\r\t- ARDMotionState >> leftRightTilt:\r\t\t\t-> sets the left right tilt\r\t\r\t- ARDMotionState >> verticalSpeed:\r\t\t\t-> sets the vertical speed\r\rInstance variables:\r\r-leftRightTilt (roll or phi angle) \t\r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max roll inclination set for the drone \t\r\t\t\t- (-) for left, (+) for right.\r\r- frontBackTilt (pitch or theta angle) \r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max pitch inclination set for the drone \r\t\t\t- (-) for front (drone lowers its nose), (+) for back (drone raises its nose)\r\r- VerticalSpeed (gaz) \r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum vertical speed \r\t\t\t- (+) for elevating, (-) for descending.\r\r- AngularSpeed (yaw)\r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum angular speed \r\t\t\t- (+) for spinning right, (-) for spinning left.',		#newStamp : 'CaroHernandez 3/25/2016 17:27'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ],		#time : DateAndTime [ '2017-09-20T16:48:01.588319-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDMotionState\r\tinstanceVariableNames: \'leftRightTilt frontBackTilt verticalSpeed angularSpeed\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDMotionState,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDMotionState,						#isMetaSide : false					},					#name : #leftRightTilt,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDMotionState,						#isMetaSide : false					},					#name : #frontBackTilt,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDMotionState,						#isMetaSide : false					},					#name : #verticalSpeed,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDMotionState,						#isMetaSide : false					},					#name : #angularSpeed,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDMotionState class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDMotionState class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDMotionState,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent the drone\'s motion state on a certain moment, according to its velocity and tilt.\rI\'m designed to be an instance variable within the ARDrone\'s class, so I can save the drone\'s desired motion state in every moment, and I can be read by the motionCommandsSenderProcess (run by ARDCommandManager) to determine the tilts an velocities of every motion command that it sends to the real drone.\r \rAPI messages:\r\t- ARDMotionState >> new\r\t\t\t-> returns an instance of the class.\r\t\r\t- ARDMotionState >> angularSpeed:\r\t\t\t-> sets the angular speed\r\t\t\t\r\t- ARDMotionState >> frontBackTilt:\r\t\t\t-> sets the front back tilt\r\t\r\t- ARDMotionState >> leftRightTilt:\r\t\t\t-> sets the left right tilt\r\t\r\t- ARDMotionState >> verticalSpeed:\r\t\t\t-> sets the vertical speed\r\rInstance variables:\r\r-leftRightTilt (roll or phi angle) \t\r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max roll inclination set for the drone \t\r\t\t\t- (-) for left, (+) for right.\r\r- frontBackTilt (pitch or theta angle) \r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max pitch inclination set for the drone \r\t\t\t- (-) for front (drone lowers its nose), (+) for back (drone raises its nose)\r\r- VerticalSpeed (gaz) \r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum vertical speed \r\t\t\t- (+) for elevating, (-) for descending.\r\r- AngularSpeed (yaw)\r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum angular speed \r\t\t\t- (+) for spinning right, (-) for spinning left.',				#stamp : 'CaroHernandez 3/25/2016 17:27'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ],		#time : DateAndTime [ '2017-09-20T16:48:01.594943-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDNavdataManager\r\tinstanceVariableNames: \'arDrone receiverProcess suspendProcess terminateProcess lastDatagramReceived previousDatagramReceived\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDNavdataManager,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavdataManager,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavdataManager,						#isMetaSide : false					},					#name : #receiverProcess,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavdataManager,						#isMetaSide : false					},					#name : #suspendProcess,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavdataManager,						#isMetaSide : false					},					#name : #terminateProcess,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavdataManager,						#isMetaSide : false					},					#name : #lastDatagramReceived,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavdataManager,						#isMetaSide : false					},					#name : #previousDatagramReceived,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDNavdataManager class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDNavdataManager class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDNavdataManager,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m the ARDrone\'s navdata manager, my main responsibility is to receive navigation data broadcasted by the real drone over the network. I use an ARDAdapterUDP.\r\rIMPORTANT: It\'s the user\'s responsibility to terminate each instance of this class using the message ARDNavdataManager>>terminate (this message is called from ARDrone terminateSession). If an instance is not terminated, two processes will keep running in background\r\rI run two processes:\r\t- The receiverProcess receives navdata permanently, and can excecute a Block using the datagram received as the block\'s argument.\r\t- the keepAliveProcess that sends messages to the real drone, to ensure the connection is kept alive.\r\r\rAPI messages:\r\t- ARDNavdataManager class >> withARDrone:\r\t\t\t-> returns an instance of the class.\r\t\t\r\t- ARDNavdataManager >> receiveAndDo:\r\t\t\t-> uses aBlock as argument. It terminates the current receiverProcess and redefines it, so it excecutes aBlock each time a navigation datagram is received. The block received as argumen must use the datagram as a parameter. \r\t\r\t- ARDNavdataManager >> stopReceiving \r\t\t\t-> finishes the process that receives navdata (receiverProcess)\r\r\t- ARDNavdataManager >> terminate\t\t\r\t\t\t-> finishes all processes associated with this instance.\r\rExample:\r\tIf I want to show the received navdata in the Transcript, I should do:\r\tanARDNavdataManager receiveAndDo: [ :datagram | Transcript show: datagram asString ]\t\t\t\r\rInstance variables: \r\t- arDrone <ARDrone>\r\t- receiverProcess <Process>\r\t- KeepAliveProcess <Process>',				#stamp : 'CaroHernandez 5/2/2016 14:33'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m the ARDrone\'s navdata manager, my main responsibility is to receive navigation data broadcasted by the real drone over the network. I use an ARDAdapterUDP.\r\rIMPORTANT: It\'s the user\'s responsibility to terminate each instance of this class using the message ARDNavdataManager>>terminate (this message is called from ARDrone terminateSession). If an instance is not terminated, two processes will keep running in background\r\rI run two processes:\r\t- The receiverProcess receives navdata permanently, and can excecute a Block using the datagram received as the block\'s argument.\r\t- the keepAliveProcess that sends messages to the real drone, to ensure the connection is kept alive.\r\r\rAPI messages:\r\t- ARDNavdataManager class >> withARDrone:\r\t\t\t-> returns an instance of the class.\r\t\t\r\t- ARDNavdataManager >> receiveAndDo:\r\t\t\t-> uses aBlock as argument. It terminates the current receiverProcess and redefines it, so it excecutes aBlock each time a navigation datagram is received. The block received as argumen must use the datagram as a parameter. \r\t\r\t- ARDNavdataManager >> stopReceiving \r\t\t\t-> finishes the process that receives navdata (receiverProcess)\r\r\t- ARDNavdataManager >> terminate\t\t\r\t\t\t-> finishes all processes associated with this instance.\r\rExample:\r\tIf I want to show the received navdata in the Transcript, I should do:\r\tanARDNavdataManager receiveAndDo: [ :datagram | Transcript show: datagram asString ]\t\t\t\r\rInstance variables: \r\t- arDrone <ARDrone>\r\t- receiverProcess <Process>\r\t- KeepAliveProcess <Process>',		#newStamp : 'CaroHernandez 5/2/2016 14:33'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ],		#time : DateAndTime [ '2017-09-20T16:48:01.59768-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDNavdataManager\r\tinstanceVariableNames: \'arDrone receiverProcess suspendProcess terminateProcess lastDatagramReceived previousDatagramReceived\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDNavdataManager,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavdataManager,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavdataManager,						#isMetaSide : false					},					#name : #receiverProcess,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavdataManager,						#isMetaSide : false					},					#name : #suspendProcess,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavdataManager,						#isMetaSide : false					},					#name : #terminateProcess,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavdataManager,						#isMetaSide : false					},					#name : #lastDatagramReceived,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavdataManager,						#isMetaSide : false					},					#name : #previousDatagramReceived,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDNavdataManager class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDNavdataManager class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDNavdataManager,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m the ARDrone\'s navdata manager, my main responsibility is to receive navigation data broadcasted by the real drone over the network. I use an ARDAdapterUDP.\r\rIMPORTANT: It\'s the user\'s responsibility to terminate each instance of this class using the message ARDNavdataManager>>terminate (this message is called from ARDrone terminateSession). If an instance is not terminated, two processes will keep running in background\r\rI run two processes:\r\t- The receiverProcess receives navdata permanently, and can excecute a Block using the datagram received as the block\'s argument.\r\t- the keepAliveProcess that sends messages to the real drone, to ensure the connection is kept alive.\r\r\rAPI messages:\r\t- ARDNavdataManager class >> withARDrone:\r\t\t\t-> returns an instance of the class.\r\t\t\r\t- ARDNavdataManager >> receiveAndDo:\r\t\t\t-> uses aBlock as argument. It terminates the current receiverProcess and redefines it, so it excecutes aBlock each time a navigation datagram is received. The block received as argumen must use the datagram as a parameter. \r\t\r\t- ARDNavdataManager >> stopReceiving \r\t\t\t-> finishes the process that receives navdata (receiverProcess)\r\r\t- ARDNavdataManager >> terminate\t\t\r\t\t\t-> finishes all processes associated with this instance.\r\rExample:\r\tIf I want to show the received navdata in the Transcript, I should do:\r\tanARDNavdataManager receiveAndDo: [ :datagram | Transcript show: datagram asString ]\t\t\t\r\rInstance variables: \r\t- arDrone <ARDrone>\r\t- receiverProcess <Process>\r\t- KeepAliveProcess <Process>',				#stamp : 'CaroHernandez 5/2/2016 14:33'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ],		#time : DateAndTime [ '2017-09-20T16:48:01.602692-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDNavigationDatagramDemo\r\tinstanceVariableNames: \'header options containsData\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDNavigationDatagramDemo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemo,						#isMetaSide : false					},					#name : #header,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemo,						#isMetaSide : false					},					#name : #options,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemo,						#isMetaSide : false					},					#name : #containsData,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDNavigationDatagramDemo class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDNavigationDatagramDemo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDNavigationDatagramDemo,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m a navdata block when the drone is set to Demo Mode. I contain information about the drone status. This information is received via the navdata incoming stream from the real drone.',				#stamp : 'CaroHernandez 3/21/2016 00:26'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m a navdata block when the drone is set to Demo Mode. I contain information about the drone status. This information is received via the navdata incoming stream from the real drone.',		#newStamp : 'CaroHernandez 3/21/2016 00:26'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ],		#time : DateAndTime [ '2017-09-20T16:48:01.605806-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDNavigationDatagramDemo\r\tinstanceVariableNames: \'header options containsData\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDNavigationDatagramDemo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemo,						#isMetaSide : false					},					#name : #header,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemo,						#isMetaSide : false					},					#name : #options,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemo,						#isMetaSide : false					},					#name : #containsData,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDNavigationDatagramDemo class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDNavigationDatagramDemo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDNavigationDatagramDemo,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m a navdata block when the drone is set to Demo Mode. I contain information about the drone status. This information is received via the navdata incoming stream from the real drone.',				#stamp : 'CaroHernandez 3/21/2016 00:26'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ],		#time : DateAndTime [ '2017-09-20T16:48:01.615566-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDNavigationDatagramHeader\r\tinstanceVariableNames: \'header ardState seq vision\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDNavigationDatagramHeader,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramHeader,						#isMetaSide : false					},					#name : #header,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramHeader,						#isMetaSide : false					},					#name : #ardState,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramHeader,						#isMetaSide : false					},					#name : #seq,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramHeader,						#isMetaSide : false					},					#name : #vision,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDNavigationDatagramHeader class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDNavigationDatagramHeader class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDNavigationDatagramHeader,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m the header of an ARDNavigationDatagramDemo. I contain information about the drone\'s status ',				#stamp : 'CaroHernandez 3/9/2016 18:49'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m the header of an ARDNavigationDatagramDemo. I contain information about the drone\'s status ',		#newStamp : 'CaroHernandez 3/9/2016 18:49'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ],		#time : DateAndTime [ '2017-09-20T16:48:01.620312-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDNavigationDatagramHeader\r\tinstanceVariableNames: \'header ardState seq vision\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDNavigationDatagramHeader,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramHeader,						#isMetaSide : false					},					#name : #header,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramHeader,						#isMetaSide : false					},					#name : #ardState,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramHeader,						#isMetaSide : false					},					#name : #seq,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramHeader,						#isMetaSide : false					},					#name : #vision,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDNavigationDatagramHeader class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDNavigationDatagramHeader class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDNavigationDatagramHeader,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m the header of an ARDNavigationDatagramDemo. I contain information about the drone\'s status ',				#stamp : 'CaroHernandez 3/9/2016 18:49'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ],		#time : DateAndTime [ '2017-09-20T16:48:01.627383-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDNavigationDatagramOption\r\tinstanceVariableNames: \'tag size\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDNavigationDatagramOption,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramOption,						#isMetaSide : false					},					#name : #tag,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramOption,						#isMetaSide : false					},					#name : #size,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDNavigationDatagramOption class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDNavigationDatagramOption class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDNavigationDatagramOption,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m an abstract class that represent a Datagram Option',				#stamp : 'CaroHernandez 5/7/2016 18:55'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m an abstract class that represent a Datagram Option',		#newStamp : 'CaroHernandez 5/7/2016 18:55'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ],		#time : DateAndTime [ '2017-09-20T16:48:01.631579-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDNavigationDatagramOption\r\tinstanceVariableNames: \'tag size\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDNavigationDatagramOption,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramOption,						#isMetaSide : false					},					#name : #tag,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramOption,						#isMetaSide : false					},					#name : #size,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDNavigationDatagramOption class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDNavigationDatagramOption class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDNavigationDatagramOption,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m an abstract class that represent a Datagram Option',				#stamp : 'CaroHernandez 5/7/2016 18:55'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ],		#time : DateAndTime [ '2017-09-20T16:48:01.637842-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ARDNavigationDatagramOption',				#traitCompositionSource : '{}',				#definitionSource : 'ARDNavigationDatagramOption subclass: #ARDNavigationDatagramDemoOption\r\tinstanceVariableNames: \'ctrlState vbatFlyingPercentage theta phi psi altitude vx vy vz numFrames\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDNavigationDatagramDemoOption,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #ctrlState,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #vbatFlyingPercentage,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #theta,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #phi,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #psi,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #altitude,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #vx,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #vy,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #vz,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #numFrames,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDNavigationDatagramDemoOption class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDNavigationDatagramDemoOption class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDNavigationDatagramDemoOption,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m the DEMO option (tag 0). I contain general  information about the drone\'s sensors',				#stamp : 'CaroHernandez 5/7/2016 19:05'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m the DEMO option (tag 0). I contain general  information about the drone\'s sensors',		#newStamp : 'CaroHernandez 5/7/2016 19:05'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ],		#time : DateAndTime [ '2017-09-20T16:48:01.640216-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ARDNavigationDatagramOption',				#traitCompositionSource : '{}',				#definitionSource : 'ARDNavigationDatagramOption subclass: #ARDNavigationDatagramDemoOption\r\tinstanceVariableNames: \'ctrlState vbatFlyingPercentage theta phi psi altitude vx vy vz numFrames\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDNavigationDatagramDemoOption,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #ctrlState,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #vbatFlyingPercentage,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #theta,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #phi,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #psi,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #altitude,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #vx,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #vy,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #vz,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramDemoOption,						#isMetaSide : false					},					#name : #numFrames,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDNavigationDatagramDemoOption class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDNavigationDatagramDemoOption class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDNavigationDatagramDemoOption,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m the DEMO option (tag 0). I contain general  information about the drone\'s sensors',				#stamp : 'CaroHernandez 5/7/2016 19:05'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ],		#time : DateAndTime [ '2017-09-20T16:48:01.650615-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ARDNavigationDatagramOption',				#traitCompositionSource : '{}',				#definitionSource : 'ARDNavigationDatagramOption subclass: #ARDNavigationDatagramVisionDetect\r\tinstanceVariableNames: \'nbDetected type xc yc width height distance orientationAngle rotation translation cameraSource dataset dataTypes\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDNavigationDatagramVisionDetect,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #nbDetected,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #type,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #xc,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #yc,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #width,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #height,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #distance,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #orientationAngle,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #rotation,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #translation,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #cameraSource,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #dataset,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #dataTypes,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDNavigationDatagramVisionDetect class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDNavigationDatagramVisionDetect class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDNavigationDatagramVisionDetect,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m the VISION_DETECT option (tag 16). I contain information about the tags detected by the drone firmware.',				#stamp : 'CaroHernandez 5/7/2016 19:13'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m the VISION_DETECT option (tag 16). I contain information about the tags detected by the drone firmware.',		#newStamp : 'CaroHernandez 5/7/2016 19:13'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ],		#time : DateAndTime [ '2017-09-20T16:48:01.653766-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ARDNavigationDatagramOption',				#traitCompositionSource : '{}',				#definitionSource : 'ARDNavigationDatagramOption subclass: #ARDNavigationDatagramVisionDetect\r\tinstanceVariableNames: \'nbDetected type xc yc width height distance orientationAngle rotation translation cameraSource dataset dataTypes\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDNavigationDatagramVisionDetect,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #nbDetected,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #type,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #xc,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #yc,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #width,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #height,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #distance,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #orientationAngle,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #rotation,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #translation,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #cameraSource,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #dataset,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDNavigationDatagramVisionDetect,						#isMetaSide : false					},					#name : #dataTypes,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDNavigationDatagramVisionDetect class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDNavigationDatagramVisionDetect class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDNavigationDatagramVisionDetect,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m the VISION_DETECT option (tag 16). I contain information about the tags detected by the drone firmware.',				#stamp : 'CaroHernandez 5/7/2016 19:13'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ],		#time : DateAndTime [ '2017-09-20T16:48:01.661193-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDState\r\tinstanceVariableNames: \'hexState\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDState,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDState,						#isMetaSide : false					},					#name : #hexState,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDState class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDState class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDState,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent the Ar Drone current state (informed by Ar Drone firmware within navdata headers)',				#stamp : 'CaroHernandez 3/25/2016 17:01'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I represent the Ar Drone current state (informed by Ar Drone firmware within navdata headers)',		#newStamp : 'CaroHernandez 3/25/2016 17:01'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ],		#time : DateAndTime [ '2017-09-20T16:48:01.66424-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDState\r\tinstanceVariableNames: \'hexState\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDState,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDState,						#isMetaSide : false					},					#name : #hexState,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDState class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDState class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDState,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent the Ar Drone current state (informed by Ar Drone firmware within navdata headers)',				#stamp : 'CaroHernandez 3/25/2016 17:01'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ],		#time : DateAndTime [ '2017-09-20T16:48:01.668897-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDUIJoystick\r\tinstanceVariableNames: \'arDrone\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDUIJoystick,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDUIJoystick,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDUIJoystick class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDUIJoystick class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDUIJoystick,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ],		#time : DateAndTime [ '2017-09-20T16:48:01.673362-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDVisionDetectAnalyst\r\tinstanceVariableNames: \'arDrone lastVisionDatagram detectedTags\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDVisionDetectAnalyst,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDVisionDetectAnalyst,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDVisionDetectAnalyst,						#isMetaSide : false					},					#name : #lastVisionDatagram,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDVisionDetectAnalyst,						#isMetaSide : false					},					#name : #detectedTags,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDVisionDetectAnalyst class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDVisionDetectAnalyst class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDVisionDetectAnalyst,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m an analyst for the Vision Detect data. I provide elaborated information about the tags detected by the drone. ',				#stamp : 'CaroHernandez 5/26/2016 04:00'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m an analyst for the Vision Detect data. I provide elaborated information about the tags detected by the drone. ',		#newStamp : 'CaroHernandez 5/26/2016 04:00'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ],		#time : DateAndTime [ '2017-09-20T16:48:01.676359-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDVisionDetectAnalyst\r\tinstanceVariableNames: \'arDrone lastVisionDatagram detectedTags\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDVisionDetectAnalyst,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDVisionDetectAnalyst,						#isMetaSide : false					},					#name : #arDrone,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDVisionDetectAnalyst,						#isMetaSide : false					},					#name : #lastVisionDatagram,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDVisionDetectAnalyst,						#isMetaSide : false					},					#name : #detectedTags,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDVisionDetectAnalyst class\r\tinstanceVariableNames: \'\''				},				#name : #'ARDVisionDetectAnalyst class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDVisionDetectAnalyst,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m an analyst for the Vision Detect data. I provide elaborated information about the tags detected by the drone. ',				#stamp : 'CaroHernandez 5/26/2016 04:00'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ],		#time : DateAndTime [ '2017-09-20T16:48:01.682061-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDrone\r\tinstanceVariableNames: \'navdataManager navdataAdapter commandManager commandAdapter configurationManager connectionManager authAdapter sequenceNumber mutex announcer motionState exceptionHandlers currentVideoChannel visionDetectAnalyst\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ARDrone,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #navdataManager,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #navdataAdapter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #commandManager,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #commandAdapter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #configurationManager,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #connectionManager,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #authAdapter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #sequenceNumber,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #mutex,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #announcer,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #motionState,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #exceptionHandlers,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #currentVideoChannel,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #visionDetectAnalyst,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDrone class\r\tinstanceVariableNames: \'uniqueInstance\''				},				#name : #'ARDrone class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'ARDrone class',							#isMetaSide : true						},						#name : #uniqueInstance,						#parent : @41					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDrone,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m the main class of the package. I provide a public API for communicating with the Parrot AR.Drone 2.0.',				#stamp : 'CaroHernandez 3/25/2016 17:11'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m the main class of the package. I provide a public API for communicating with the Parrot AR.Drone 2.0.',		#newStamp : 'CaroHernandez 3/25/2016 17:11'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ],		#time : DateAndTime [ '2017-09-20T16:48:01.684246-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ARDrone\r\tinstanceVariableNames: \'navdataManager navdataAdapter commandManager commandAdapter configurationManager connectionManager authAdapter sequenceNumber mutex announcer motionState exceptionHandlers currentVideoChannel visionDetectAnalyst\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ARDrone\''			},			#name : #ARDrone,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #navdataManager,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #navdataAdapter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #commandManager,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #commandAdapter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #configurationManager,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #connectionManager,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #authAdapter,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #sequenceNumber,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #mutex,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #announcer,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #motionState,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #exceptionHandlers,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #currentVideoChannel,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ARDrone,						#isMetaSide : false					},					#name : #visionDetectAnalyst,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ARDrone class\r\tinstanceVariableNames: \'uniqueInstance\''				},				#name : #'ARDrone class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'ARDrone class',							#isMetaSide : true						},						#name : #uniqueInstance,						#parent : @41					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ARDrone,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m the main class of the package. I provide a public API for communicating with the Parrot AR.Drone 2.0.',				#stamp : 'CaroHernandez 3/25/2016 17:11'			},			#classVariables : OrderedCollection [ ],			#category : #ARDrone,			#package : #ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ],		#time : DateAndTime [ '2017-09-20T16:48:02.150826-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DroneAuthenticationFailed,				#isMetaSide : false			},			#name : #defaultAction,			#protocol : #accessing,			#sourceCode : 'defaultAction\r\r\tUnhandledError signalForException: self',			#stamp : 'CaroHernandez 4/29/2016 22:42',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ],		#time : DateAndTime [ '2017-09-20T16:48:02.167818-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DroneAuthenticationFailed,				#isMetaSide : false			},			#name : #description,			#protocol : #accessing,			#sourceCode : 'description\r\r\t^ \'DroneAuthenticationFailed Exception: Is there any other device connected to the drone?\'',			#stamp : 'CaroHernandez 3/24/2016 22:03',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ],		#time : DateAndTime [ '2017-09-20T16:48:02.169267-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DroneAuthenticationFailed,				#isMetaSide : false			},			#name : #messageText,			#protocol : #accessing,			#sourceCode : 'messageText\r\r\t^ \'Is there any other device connected to the drone?\'',			#stamp : 'CaroHernandez 5/1/2016 18:58',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ],		#time : DateAndTime [ '2017-09-20T16:48:02.170502-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DroneConfigurationAttemptFailed,				#isMetaSide : false			},			#name : #defaultAction,			#protocol : #'as yet unclassified',			#sourceCode : 'defaultAction\r\r\tUnhandledError signalForException: self',			#stamp : 'CaroHernandez 6/30/2016 21:17',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ],		#time : DateAndTime [ '2017-09-20T16:48:02.171632-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DroneConfigurationAttemptFailed,				#isMetaSide : false			},			#name : #description,			#protocol : #'as yet unclassified',			#sourceCode : 'description\r\r\t^ \'DroneConfigurationAttemptFailed: Restart the drone\'',			#stamp : 'CaroHernandez 6/30/2016 21:19',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ],		#time : DateAndTime [ '2017-09-20T16:48:02.172615-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DroneConnectionAdapterDisconnected,				#isMetaSide : false			},			#name : #defaultAction,			#protocol : #accessing,			#sourceCode : 'defaultAction\r\r\tUnhandledError signalForException: self',			#stamp : 'CaroHernandez 5/19/2016 23:03',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ],		#time : DateAndTime [ '2017-09-20T16:48:02.173685-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DroneConnectionInterrupted,				#isMetaSide : false			},			#name : #defaultAction,			#protocol : #accessing,			#sourceCode : 'defaultAction\r\r\tUnhandledError signalForException: self',			#stamp : 'CaroHernandez 5/20/2016 16:09',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '84' ],		#self : OmReference [ '85' ],		#time : DateAndTime [ '2017-09-20T16:48:02.175166-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DroneConnectionTimeout,				#isMetaSide : false			},			#name : #defaultAction,			#protocol : #accessing,			#sourceCode : 'defaultAction\r\r\tUnhandledError signalForException: self',			#stamp : 'CaroHernandez 3/24/2016 21:49',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '85' ],		#self : OmReference [ '86' ],		#time : DateAndTime [ '2017-09-20T16:48:02.176496-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DroneConnectionTimeout,				#isMetaSide : false			},			#name : #description,			#protocol : #accessing,			#sourceCode : 'description\r\r\t^ \'DroneConnectionTimeout Exception: Are you connected to the drone network?\'',			#stamp : 'CaroHernandez 3/24/2016 21:58',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '86' ],		#self : OmReference [ '87' ],		#time : DateAndTime [ '2017-09-20T16:48:02.178296-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DroneConnectionTimeout,				#isMetaSide : false			},			#name : #messageText,			#protocol : #accessing,			#sourceCode : 'messageText\r\r\t^ \'Are you connected to the drone network?\'',			#stamp : 'CaroHernandez 3/24/2016 21:38',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '87' ],		#self : OmReference [ '88' ],		#time : DateAndTime [ '2017-09-20T16:48:02.18025-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Integer class',				#isMetaSide : true			},			#name : #'from32BitArrayWithOnesAt:',			#protocol : #'*ARDrone',			#sourceCode : 'from32BitArrayWithOnesAt: aCollection\r\t"Returns a 32 bit unsigned int from an array that contains the position of ones in the bit array that will generate the integer. Bit positions start at 0 and finish at 31"\r\t| unsignedInteger |\r\tunsignedInteger := 0.\r\t(1 to: 32) do: [ :i |\r\t\t(aCollection contains: [:a | a = (32 - i) ])\r\t\tifTrue: [ unsignedInteger := unsignedInteger + (2 raisedTo: (32 - i)) ]  ].\r\t^ unsignedInteger',			#stamp : 'CaroHernandez 3/15/2016 10:57',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '88' ],		#self : OmReference [ '89' ],		#time : DateAndTime [ '2017-09-20T16:48:02.182803-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Float,				#isMetaSide : false			},			#name : #asARDEquivalentInteger,			#protocol : #'*ARDrone',			#sourceCode : 'asARDEquivalentInteger\r\t"Returns the binary equivalent signed int for this float as 32bit float"\r\t| byteArray bitArray  signedInteger |\r\rbyteArray := self asIEEE32BitWord printStringHex.\rbyteArray = \'0\' ifTrue: [ ^ 0 ].\rbitArray := \'\'.\r(1 to: 8) do: [ :i | \r\t| thisByte |\r\tthisByte := (byteArray at: i) asString. \r\tthisByte = \'0\' ifTrue: [ bitArray := bitArray , \'0000\' ].\r\tthisByte = \'1\' ifTrue: [ bitArray := bitArray , \'0001\' ].\r\tthisByte = \'2\' ifTrue: [ bitArray := bitArray , \'0010\' ].\r\tthisByte = \'3\' ifTrue: [ bitArray := bitArray , \'0011\' ].\r\tthisByte = \'4\' ifTrue: [ bitArray := bitArray , \'0100\' ].\r\tthisByte = \'5\' ifTrue: [ bitArray := bitArray , \'0101\' ].\r\tthisByte = \'6\' ifTrue: [ bitArray := bitArray , \'0110\' ].\r\tthisByte = \'7\' ifTrue: [ bitArray := bitArray , \'0111\' ].\r\tthisByte = \'8\' ifTrue: [ bitArray := bitArray , \'1000\' ].\r\tthisByte = \'9\' ifTrue: [ bitArray := bitArray , \'1001\' ].\r\tthisByte = \'A\' ifTrue: [ bitArray := bitArray , \'1010\' ].\r\tthisByte = \'B\' ifTrue: [ bitArray := bitArray , \'1011\' ].\r\tthisByte = \'C\' ifTrue: [ bitArray := bitArray , \'1100\' ].\r\tthisByte = \'D\' ifTrue: [ bitArray := bitArray , \'1101\' ].\r\tthisByte = \'E\' ifTrue: [ bitArray := bitArray , \'1110\' ].\r\tthisByte = \'F\' ifTrue: [ bitArray := bitArray , \'1111\' ].\r\t].\r\rsignedInteger := -1 * (2 raisedTo: 31) * ((bitArray at: 1) asString asInteger).\r(2 to: 32) do: [ :i |\r\tsignedInteger := signedInteger + ((2 raisedTo: (32 - i)) * ((bitArray at: i) asString asInteger)).\r\t].\r\t^ signedInteger',			#stamp : 'CaroHernandez 3/26/2016 09:49',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '89' ],		#self : OmReference [ '90' ],		#time : DateAndTime [ '2017-09-20T16:48:02.183997-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDUIKeyboard class',				#isMetaSide : true			},			#name : #defaultColorFocused,			#protocol : #'instance creation',			#sourceCode : 'defaultColorFocused\r\t^ Color colorFrom: #(0.1 0.6 1)',			#stamp : 'CaroHernandez 6/27/2016 21:04',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '90' ],		#self : OmReference [ '91' ],		#time : DateAndTime [ '2017-09-20T16:48:02.184978-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDUIKeyboard class',				#isMetaSide : true			},			#name : #defaultColorNotFocused,			#protocol : #'instance creation',			#sourceCode : 'defaultColorNotFocused\r\t^ Color colorFrom: #(0.9 0.95 1)',			#stamp : 'CaroHernandez 6/27/2016 21:04',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '91' ],		#self : OmReference [ '92' ],		#time : DateAndTime [ '2017-09-20T16:48:02.185944-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDUIKeyboard class',				#isMetaSide : true			},			#name : #'startTest:',			#protocol : #test,			#sourceCode : 'startTest: showNavdata\r\t[\r\t\t|ui arDrone|\r\t\tarDrone := ARDrone newUniqueInstance.\r\t\tarDrone addHandlerFor: DroneConnectionInterrupted \r\t\t\t\t  do: [ :ex | Transcript show: \'Connection interrupted\';cr. ].\r\t\tarDrone addHandlerFor: PrimitiveFailed \r\t\t\t\t  do: [ :ex | Transcript show: \'Primitive failed!!\';cr. ].\r\t\t\r\t\tarDrone startSession.\r\t\tshowNavdata ifTrue: [ arDrone setNavdataReceiverCallback: [ :dg | Transcript show: dg asString ]].\r\t\tui := self withARDrone: arDrone.\r\t\tui openInWorld.\r\t] fork .\r\tTranscript clear.',			#stamp : 'CaroHernandez 8/26/2016 02:09',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '92' ],		#self : OmReference [ '93' ],		#time : DateAndTime [ '2017-09-20T16:48:02.186907-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDUIKeyboard class',				#isMetaSide : true			},			#name : #'withARDrone:',			#protocol : #'instance creation',			#sourceCode : 'withARDrone: anARDrone\r\t"Returns a UI keyboard for receiving navigation data from anARDrone"\r\t^ (self new)\r\t\t\tarDrone: anARDrone',			#stamp : 'CaroHernandez 5/5/2016 21:19',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '93' ],		#self : OmReference [ '94' ],		#time : DateAndTime [ '2017-09-20T16:48:02.187829-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #arDrone,			#protocol : #'event handling',			#sourceCode : 'arDrone\r\t"Returns the ARDrone instance for which this UI Keyboard was created"\r\t^ arDrone',			#stamp : 'CaroHernandez 3/18/2016 13:16',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '94' ],		#self : OmReference [ '95' ],		#time : DateAndTime [ '2017-09-20T16:48:02.188701-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #'arDrone:',			#protocol : #'event handling',			#sourceCode : 'arDrone: anARDrone\r\t"Sets the ARDrone instance for which this UI Keyboard was created"\r\tarDrone := anARDrone.\r\tmotionStateUI arDrone: anARDrone. ',			#stamp : 'CaroHernandez 7/22/2016 21:59',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '95' ],		#self : OmReference [ '96' ],		#time : DateAndTime [ '2017-09-20T16:48:02.189627-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #'configureLedDuration:ledFrequency:pirouetteDuration:speed:',			#protocol : #configuring,			#sourceCode : 'configureLedDuration: anIntLed ledFrequency: aFloatLed pirouetteDuration: anIntPir speed: aFloatSpeed\r\t"configures values for the led animations, pirouettes and speed for the drone movements.\r\targuments:\r\t\t- anIntLed: Led animations duration in seconds\r\t\t- aFloatLed: Led animations frequency in Hz\r\t\t- anIntPir: Pirouettes duration in milliseconds\r\t\t- aFloatSpeed: percentage of the maximum speed/inclination for the move commands. Must be in [ 0, 1 ]"\r\tself ledDuration: anIntLed.\r\tself ledFrequency: aFloatLed.\r\tself pirouetteDuration: anIntPir.\r\tself speed: aFloatSpeed. ',			#stamp : 'CaroHernandez 6/19/2016 18:25',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '96' ],		#self : OmReference [ '97' ],		#time : DateAndTime [ '2017-09-20T16:48:02.191454-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #'enabled:',			#protocol : #'event handling',			#sourceCode : 'enabled: aBoolean\r\tsuper enabled: aBoolean.\r\tenabled := aBoolean.\r\tmotionStateUI enabled: aBoolean.',			#stamp : 'CaroHernandez 7/22/2016 21:59',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '97' ],		#self : OmReference [ '98' ],		#time : DateAndTime [ '2017-09-20T16:48:02.1927-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #'handleKeyDown:',			#protocol : #events-processing,			#sourceCode : 'handleKeyDown: anEvent\r\t\r\t| keyValue |\r\tsuper handleKeyDown: anEvent.\r\tenabled ifFalse: [ ^ false ].\r\tkeyValue := anEvent keyValue.\r\t"Transcript show: keyValue asString;cr."\r\t"check the key state in the keyDownWasAlreadyHandled dictionary"\r\t(self  keyDownWasAlreadyHandled: keyValue) ifTrue: [ ^ false ].\r\t"perform the corresponding action according to the values saved in the dictionaries"\r\tmoveKeysDict \r\t\tat: keyValue \r\t\tifPresent: [ :cmd | \r\t\t\tcmd value: speed. self color: Color green. ^ true ].\r\tledKeysDic \r\t\tat: keyValue \r\t\tifPresent: [ :cmd | \r\t\t\tcmd value . self color: Color yellow. ^ true ].\r\tpirouetteKeysDict  \r\t\tat: keyValue \r\t\tifPresent: [ :cmd | \r\t\t\tcmd value . self color: Color blue. ^ true ].\r\t^ false.',			#stamp : 'CaroHernandez 6/19/2016 20:59',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '98' ],		#self : OmReference [ '99' ],		#time : DateAndTime [ '2017-09-20T16:48:02.193795-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #'handleKeyUp:',			#protocol : #'event handling',			#sourceCode : 'handleKeyUp: anEvent\r\t| keyValue defaultColor keyIsPressed |\r\tenabled ifFalse: [ ^ 0 ].\r\t\r\tkeyValue := anEvent keyValue.\r\tkeyIsPressed := pressedKeys at: keyValue ifAbsentPut: false .\r\tkeyIsPressed ifFalse: [ ^ 0 ].\r\tpressedKeys at: keyValue put: false.\r\r\tdefaultColor := self class defaultColorFocused.\r\t\r\tmoveKeysDict \r\t\tat: keyValue \r\t\tifPresent: [ :cmd | \r\t\t\tcmd value: 0. self color: defaultColor. ^ true ].\r\tledKeysDic \r\t\tat: keyValue \r\t\tifPresent: [ :cmd | \r\t\t\tself color: defaultColor. ^ true ].\r\tpirouetteKeysDict  \r\t\tat: keyValue \r\t\tifPresent: [ :cmd | \r\t\t\tself color: defaultColor. ^ true ].',			#stamp : 'CaroHernandez 6/27/2016 20:58',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '99' ],		#self : OmReference [ '100' ],		#time : DateAndTime [ '2017-09-20T16:48:02.194785-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'event handling',			#sourceCode : 'handleKeystroke: anEvent\r\t| keyValue |\r\tenabled ifFalse: [ ^ 0 ].\r\t\r\tkeyValue := anEvent keyValue.\r\tkeyValue = 32 "space bar"\r\t\tifTrue: [ arDrone takeOff ].\r\tkeyValue = 13 "enter"\r\t\tifTrue: [ arDrone land ].\r\tkeyValue = 27 "ESC"\r\t\tifTrue: [ arDrone terminateSession. \r\t\t\t\t\tself delete ].\r\t',			#stamp : 'CaroHernandez 8/21/2016 19:29',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '100' ],		#self : OmReference [ '101' ],		#time : DateAndTime [ '2017-09-20T16:48:02.195717-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #'handleMouseDown:',			#protocol : #'event handling',			#sourceCode : 'handleMouseDown: anEvent\r\tActiveHand keyboardFocus: self.',			#stamp : 'CaroHernandez 3/24/2016 16:28',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '101' ],		#self : OmReference [ '102' ],		#time : DateAndTime [ '2017-09-20T16:48:02.196618-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #'handlesKeyboard:',			#protocol : #'event handling',			#sourceCode : 'handlesKeyboard: anEvent\r\t^ true',			#stamp : 'CaroHernandez 3/18/2016 11:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '102' ],		#self : OmReference [ '103' ],		#time : DateAndTime [ '2017-09-20T16:48:02.19747-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #'handlesMouseDown:',			#protocol : #'event handling',			#sourceCode : 'handlesMouseDown: anEvent\r\t^ true',			#stamp : 'CaroHernandez 3/24/2016 16:27',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '103' ],		#self : OmReference [ '104' ],		#time : DateAndTime [ '2017-09-20T16:48:02.198398-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'event handling',			#sourceCode : 'initialize\r\tsuper initialize.\r\tmotionStateUI := ARDUIMotionState new.\r\tself height: motionStateUI height.\r\tself width: motionStateUI width.\r\tself color: self class defaultColorNotFocused.\r\tself enabled: true.\r\tself addMorph: motionStateUI.\r\t\r\tpirouetteDuration := 4000.\r\tspeed := 0.25.\r\tledFrequency := 2.\r\tledDuration := 5.\r\t\r\tself initializeMoveKeysDict.\r\tself initializeLedKeysDict.\r\tself initializePirouetteKeysDict. \r\t\r\tpressedKeys := Dictionary new.\r\tActiveHand keyboardFocus: self.',			#stamp : 'CaroHernandez 9/20/2016 20:06',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '104' ],		#self : OmReference [ '105' ],		#time : DateAndTime [ '2017-09-20T16:48:02.199445-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #initializeLedKeysDict,			#protocol : #private,			#sourceCode : 'initializeLedKeysDict\r\t| animateLedsCmd |\r\t\r\tanimateLedsCmd := [ :anim |\r\t\tarDrone animateLEDs: anim frequency: ledFrequency duration: ledDuration ].\r\t\r\tledKeysDic := {\r\t\t"1  -> blink green" \t\t\t\r\t\t49  -> [ animateLedsCmd value: ARDConstant ledAnimation_BLINK_GREEN. Transcript show: arDrone altitude asString; cr  ].\r\t\t"2  -> blink red"\r\t\t50  -> [ animateLedsCmd value: ARDConstant ledAnimation_BLINK_RED  ].\r\t\t"3  -> "\r\t\t51  -> [ animateLedsCmd value: ARDConstant ledAnimation_BLINK_ORANGE ].\r\t\t"4  -> "\r\t\t52  -> [ animateLedsCmd value: ARDConstant ledAnimation_FIRE  ].\r\t\t"5  -> "\r\t\t53  -> [ animateLedsCmd value: ARDConstant ledAnimation_RED_SNAKE ].\r\t\t"6  -> "\r\t\t54  -> [ animateLedsCmd value: ARDConstant ledAnimation_SNAKE_GREEN_RED ].\r\t\t"7  -> "\r\t\t55  -> [ animateLedsCmd value: ARDConstant ledAnimation_DOUBLE_MISSILE ].\r\t\t"8  -> "\r\t\t56  -> [ animateLedsCmd value: ARDConstant ledAnimation_FRONT_LEFT_GREEN_OTHERS_RED ].\r\t\t"9  -> "\r\t\t57  -> [ animateLedsCmd value: ARDConstant ledAnimation_FRONT_RIGHT_GREEN_OTHERS_RED ].\r\t\t"0  -> "\r\t\t48  -> [ animateLedsCmd value: ARDConstant ledAnimation_GREEN  ].\r\t} asDictionary.',			#stamp : 'CaroHernandez 6/25/2016 23:27',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '105' ],		#self : OmReference [ '106' ],		#time : DateAndTime [ '2017-09-20T16:48:02.201368-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #initializeMoveKeysDict,			#protocol : #private,			#sourceCode : 'initializeMoveKeysDict\r\tmoveKeysDict := {\r\t"W -> move forward" \t\t119 -> [ :v | arDrone pitch: \tv negated ].\r\t"S -> move backwards" \t115 -> [ :v | arDrone pitch: \tv \t\t\t ].\r\t"Q -> roll left" \t\t\t113 -> [ :v | arDrone roll: \tv negated ].\r\t"E -> roll right" \t\t\t101 -> [ :v | arDrone roll: \tv \t\t\t ].\r\t"F -> elevate" \t\t\t\t102 -> [ :v | arDrone elevate: v \t\t\t ].\r\t"C -> descend" \t\t\t\t99  -> [ :v | arDrone elevate: v negated ].\t\r\t"D -> rotate cw" \t\t\t100 -> [ :v | arDrone yaw: \t\tv \t\t\t ].\r\t"A -> rotate ccw" \t\t\t97  -> [ :v | arDrone yaw: \t\tv negated ].\r\t} asDictionary.',			#stamp : 'CaroHernandez 8/21/2016 19:03',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '106' ],		#self : OmReference [ '107' ],		#time : DateAndTime [ '2017-09-20T16:48:02.202365-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #initializePirouetteKeysDict,			#protocol : #private,			#sourceCode : 'initializePirouetteKeysDict\r\t| animateFlightCmd |\r\t\r\tanimateFlightCmd := [ :anim | arDrone animateFlight: anim duration: pirouetteDuration ].\r\t\r\tpirouetteKeysDict := {\r\t"!" 33  -> [ animateFlightCmd value: ARDConstant flightAnimation_FLIP_AHEAD ].\r  "\'\'" 34  -> [ animateFlightCmd value: ARDConstant flightAnimation_FLIP_BEHIND ].\r\t"#" 35  -> [ animateFlightCmd value: ARDConstant flightAnimation_FLIP_LEFT ].\r\t"$" 36  -> [ animateFlightCmd value: ARDConstant flightAnimation_FLIP_RIGHT  ].\r\t"%" 37  -> [ animateFlightCmd value: ARDConstant flightAnimation_WAVE ].\r\t"&" 38  -> [ animateFlightCmd value: ARDConstant flightAnimation_DOUBLE_PHI_THETA_MIXED ].\r\t"/" 47  -> [ animateFlightCmd value: ARDConstant flightAnimation_YAW_SHAKE  ].\r\t"(" 40  -> [ animateFlightCmd value: ARDConstant flightAnimation_TURNAROUND ].\r\t")" 41  -> [ animateFlightCmd value: ARDConstant flightAnimation_THETA_20DEG_YAW_200DEG ].\r\t"=" 61  -> [ animateFlightCmd value: ARDConstant flightAnimation_YAW_DANCE ].\r\t} asDictionary.',			#stamp : 'CaroHernandez 6/19/2016 20:59',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '107' ],		#self : OmReference [ '108' ],		#time : DateAndTime [ '2017-09-20T16:48:02.203318-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #'keyDownWasAlreadyHandled:',			#protocol : #private,			#sourceCode : 'keyDownWasAlreadyHandled: keyValue\r\t\r\t(pressedKeys at: keyValue ifAbsentPut: false) ifTrue: [ ^ true ].\r\tpressedKeys at: keyValue put: true.\r\t^ false.',			#stamp : 'CaroHernandez 6/12/2016 19:25',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '108' ],		#self : OmReference [ '109' ],		#time : DateAndTime [ '2017-09-20T16:48:02.204206-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #'keyboardFocusChange:',			#protocol : #'event handling',			#sourceCode : 'keyboardFocusChange: gotFocus\r\tsuper keyboardFocusChange: gotFocus.\r\t"(gotFocus & enabled) \r\t\tifTrue: [ self color: self class defaultColorFocused ] \r\t\tifFalse: [ self color: self class defaultColorNotFocused  ]."\r\tenabled ifTrue: [ motionStateUI gotFocus: gotFocus ].',			#stamp : 'CaroHernandez 7/23/2016 13:28',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '109' ],		#self : OmReference [ '110' ],		#time : DateAndTime [ '2017-09-20T16:48:02.205153-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #ledDuration,			#protocol : #accessing,			#sourceCode : 'ledDuration\r\r\t^ ledDuration',			#stamp : 'CaroHernandez 6/19/2016 18:13',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '110' ],		#self : OmReference [ '111' ],		#time : DateAndTime [ '2017-09-20T16:48:02.206032-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #'ledDuration:',			#protocol : #accessing,			#sourceCode : 'ledDuration: anInt\r\t"Led animations duration in seconds"\r\tledDuration := anInt',			#stamp : 'CaroHernandez 6/19/2016 18:17',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '111' ],		#self : OmReference [ '112' ],		#time : DateAndTime [ '2017-09-20T16:48:02.207-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #ledFrequency,			#protocol : #accessing,			#sourceCode : 'ledFrequency\r\r\t^ ledFrequency',			#stamp : 'CaroHernandez 6/19/2016 18:13',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '112' ],		#self : OmReference [ '113' ],		#time : DateAndTime [ '2017-09-20T16:48:02.207841-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #'ledFrequency:',			#protocol : #accessing,			#sourceCode : 'ledFrequency: aFloat\r\t"Led animations frequency in Hz"\r\tledFrequency := aFloat',			#stamp : 'CaroHernandez 6/19/2016 18:16',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '113' ],		#self : OmReference [ '114' ],		#time : DateAndTime [ '2017-09-20T16:48:02.208868-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #pirouetteDuration,			#protocol : #accessing,			#sourceCode : 'pirouetteDuration\r\r\t^ pirouetteDuration',			#stamp : 'CaroHernandez 6/19/2016 18:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '114' ],		#self : OmReference [ '115' ],		#time : DateAndTime [ '2017-09-20T16:48:02.211541-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #'pirouetteDuration:',			#protocol : #accessing,			#sourceCode : 'pirouetteDuration: anInt\r\t"pirouette duration in milliseconds"\r\tpirouetteDuration := anInt',			#stamp : 'CaroHernandez 6/19/2016 18:17',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '115' ],		#self : OmReference [ '116' ],		#time : DateAndTime [ '2017-09-20T16:48:02.213225-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #speed,			#protocol : #accessing,			#sourceCode : 'speed\r\r\t^ speed',			#stamp : 'CaroHernandez 6/19/2016 18:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '116' ],		#self : OmReference [ '117' ],		#time : DateAndTime [ '2017-09-20T16:48:02.21441-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIKeyboard,				#isMetaSide : false			},			#name : #'speed:',			#protocol : #accessing,			#sourceCode : 'speed: aFloat\r\t"percentage of the maximum speed/inclination for the move commands. \r\targument: aFloat must be in [0 , 1]"\r\tspeed := aFloat',			#stamp : 'CaroHernandez 6/19/2016 18:25',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '117' ],		#self : OmReference [ '118' ],		#time : DateAndTime [ '2017-09-20T16:48:02.215361-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #activeColor,			#protocol : #accessing,			#sourceCode : 'activeColor\r\tenabled \r\t\tifFalse: [ ^ disabledColor. ].\r\tgotFocus \r\t\tifTrue: [ ^ activeColorFocused ]\r\t\tifFalse: [ ^ activeColorDefocused ]',			#stamp : 'CaroHernandez 7/23/2016 13:05',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '118' ],		#self : OmReference [ '119' ],		#time : DateAndTime [ '2017-09-20T16:48:02.216738-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #arDrone,			#protocol : #'event handling',			#sourceCode : 'arDrone\r\t"Returns the ARDrone instance for which this UI Keyboard was created"\r\t^ arDrone',			#stamp : 'CaroHernandez 7/22/2016 18:34',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '119' ],		#self : OmReference [ '120' ],		#time : DateAndTime [ '2017-09-20T16:48:02.217819-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #'arDrone:',			#protocol : #'event handling',			#sourceCode : 'arDrone: anARDrone\r\t"Sets the ARDrone instance for which this UI Keyboard was created"\r\tarDrone := anARDrone',			#stamp : 'CaroHernandez 7/22/2016 18:34',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '120' ],		#self : OmReference [ '121' ],		#time : DateAndTime [ '2017-09-20T16:48:02.218799-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #containerColor,			#protocol : #'stepping and presenter',			#sourceCode : 'containerColor\r\t \r\tenabled \r\t\tifTrue: [ ^ self enabledColor ]\r\t\tifFalse: [ ^ self disabledColor ]',			#stamp : 'CaroHernandez 7/23/2016 13:26',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '121' ],		#self : OmReference [ '122' ],		#time : DateAndTime [ '2017-09-20T16:48:02.219831-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #disabledColor,			#protocol : #accessing,			#sourceCode : 'disabledColor\r\t^ disabledColor',			#stamp : 'CaroHernandez 7/23/2016 13:26',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '122' ],		#self : OmReference [ '123' ],		#time : DateAndTime [ '2017-09-20T16:48:02.22077-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #'enabled:',			#protocol : #accessing,			#sourceCode : 'enabled: aBoolean\r\tsuper enabled: aBoolean.\r\tenabled := aBoolean.\r\t',			#stamp : 'CaroHernandez 7/23/2016 12:47',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '123' ],		#self : OmReference [ '124' ],		#time : DateAndTime [ '2017-09-20T16:48:02.221737-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #enabledColor,			#protocol : #accessing,			#sourceCode : 'enabledColor\r\t^ Color fromHexString: \'bfbfbf\'',			#stamp : 'CaroHernandez 7/23/2016 13:26',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '124' ],		#self : OmReference [ '125' ],		#time : DateAndTime [ '2017-09-20T16:48:02.223896-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #'gotFocus:',			#protocol : #accessing,			#sourceCode : 'gotFocus: aBoolean\r \tgotFocus := aBoolean.\r\tself updateColors ',			#stamp : 'CaroHernandez 7/23/2016 13:23',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '125' ],		#self : OmReference [ '126' ],		#time : DateAndTime [ '2017-09-20T16:48:02.225169-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #inactiveColor,			#protocol : #accessing,			#sourceCode : 'inactiveColor\r\tgotFocus \r\t\tifTrue: [ ^ inactiveColorFocused ]\r\t\tifFalse: [ ^ inactiveColorDefocused ]',			#stamp : 'CaroHernandez 7/23/2016 12:33',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '126' ],		#self : OmReference [ '127' ],		#time : DateAndTime [ '2017-09-20T16:48:02.226141-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\t| h w p1 p2 trans |\r\tsuper initialize.\r\tenabled := false.\r\tgotFocus := false.\r\t\r\th := 30.\r\tw := 30.\r\tp1 := 0@0.\r\tp2 := (w*3.5)@0.\r\t\r\tself initializeColors.\r\tself initializeSpeedLabel.\r\tself initializeKeyMorphsWidth: w height: h position1: p1 position2: p2.\r\t\r\tself \r\t\twidth: w*6.5; \r\t\theight:h*3.\r\t\r\ttrans:= (TransformationMorph new asFlexOf: backward).\r\ttrans angle: 3.14.\r\t\r\tkeysArray := { forward . trans . left . right . up . down . cc . cw }.\r\tkeysArray do: [ :each | self addMorph: each ].\r\tself addMorph: speed.\r\tself updateColors. \r\t',			#stamp : 'CaroHernandez 9/20/2016 19:56',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '127' ],		#self : OmReference [ '128' ],		#time : DateAndTime [ '2017-09-20T16:48:02.227351-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #initializeColors,			#protocol : #initialization,			#sourceCode : 'initializeColors\r\tactiveColorFocused  := Color fromHexString: \'4da9ff\'.\r\tinactiveColorFocused := Color fromHexString: \'a6a6a6\'. \r\tactiveColorDefocused := Color fromHexString: \'b3daff\'.\r\tinactiveColorDefocused := Color fromHexString: \'cccccc\'.\r\t \r\tdisabledColor := Color fromHexString:\'f2f2f2\'.',			#stamp : 'CaroHernandez 7/23/2016 13:27',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '128' ],		#self : OmReference [ '129' ],		#time : DateAndTime [ '2017-09-20T16:48:02.228339-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #'initializeKeyMorphsWidth:height:position1:position2:',			#protocol : #initialization,			#sourceCode : 'initializeKeyMorphsWidth: w height: h position1: p1 position2: p2\r \r\tforward \t:= \tself newKeyMorph: (Character value: 916) at: (w@0) + p1.\r\tbackward \t:= self newKeyMorph: (Character value: 916) at: (w@(h*2)) + p1.\r\tcc \t\t\t:= self newKeyMorph: (Character value: 60) at: (0@h) + p1. \r\tcw \t\t\t:= self newKeyMorph: (Character value: 62) at: ((2*w)@h) + p1. \r\t\r\tup \t\t\t:= self newKeyMorph: (Character value: 8593) \tat: (w@0) + p2.\r\tdown \t\t:= self newKeyMorph: (Character value: 8595) \tat: (w@(h*2)) + p2.  \r\tleft \t\t:= self newKeyMorph: (Character value: 8592) \tat: (0@h) + p2.\r\tright \t\t:= self newKeyMorph: (Character value: 8594) \tat: ((2*w)@h) + p2.  \r\t',			#stamp : 'CaroHernandez 7/22/2016 23:03',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '129' ],		#self : OmReference [ '130' ],		#time : DateAndTime [ '2017-09-20T16:48:02.229344-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #initializeSpeedLabel,			#protocol : #initialization,			#sourceCode : 'initializeSpeedLabel\r\tspeed := StringMorph new \r\t\t\tposition: 0@0;\r\t\t\tcontents: \'s:\'.',			#stamp : 'CaroHernandez 9/20/2016 19:57',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '130' ],		#self : OmReference [ '131' ],		#time : DateAndTime [ '2017-09-20T16:48:02.230316-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #'keyColorBy:',			#protocol : #'stepping and presenter',			#sourceCode : 'keyColorBy: aBoolean\r\t \r\taBoolean \r\t\tifTrue: [ ^ self activeColor ]\r\t\tifFalse: [ ^ self inactiveColor ]',			#stamp : 'CaroHernandez 7/23/2016 13:24',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '131' ],		#self : OmReference [ '132' ],		#time : DateAndTime [ '2017-09-20T16:48:02.231264-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #'newKeyMorph:at:',			#protocol : #'instance creation',			#sourceCode : 'newKeyMorph: aLabel at: aPoint\r\t| morph label |\r\tmorph := BorderedMorph  new\r\t\t\tcolor: self inactiveColor;\r\t\t\twidth: 25;\r\t\t\theight: 25;\r\t\t\tposition: (self bounds center - (self extent // 2)) + aPoint.\r\tlabel := StringMorph new \r\t\t\tposition: (morph bounds center - (morph extent // 4));\r\t\t\tcontents: aLabel asString.\r\tmorph addMorph: label.\r\t^ morph\r\t\t',			#stamp : 'CaroHernandez 7/23/2016 12:38',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '132' ],		#self : OmReference [ '133' ],		#time : DateAndTime [ '2017-09-20T16:48:02.232247-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #step,			#protocol : #'stepping and presenter',			#sourceCode : 'step\r\t((arDrone isNil) or: [ arDrone isConnected not ]) ifTrue: [ ^ self ].\r\tself updateColors.\r\t',			#stamp : 'CaroHernandez 7/23/2016 13:23',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '133' ],		#self : OmReference [ '134' ],		#time : DateAndTime [ '2017-09-20T16:48:02.234057-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #stepTime,			#protocol : #stepping,			#sourceCode : 'stepTime\r\t^ 100 ',			#stamp : 'CaroHernandez 7/22/2016 21:15',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '134' ],		#self : OmReference [ '135' ],		#time : DateAndTime [ '2017-09-20T16:48:02.234916-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #updateColors,			#protocol : #private,			#sourceCode : 'updateColors\r\t| motionState |\r\tarDrone isNil\r\t\tifTrue: [ \r\t\t\tself color: disabledColor .\r\t\t\tforward \tcolor: disabledColor; borderColor: Color lightGray.\r\t\t\tbackward \tcolor: disabledColor; borderColor: Color lightGray.\r\t\t\tleft \t\tcolor: disabledColor; borderColor: Color lightGray.\r\t\t\tright \t\tcolor: disabledColor; borderColor: Color lightGray.\r\t\t\tup \t\t\tcolor: disabledColor; borderColor: Color lightGray.\r\t\t\tdown \t\tcolor: disabledColor; borderColor: Color lightGray.\r\t\t\tcc \t\t\tcolor: disabledColor; borderColor: Color lightGray.\r\t\t\tcw \t\t\tcolor: disabledColor; borderColor: Color lightGray.]\r\tifFalse: [ \r\t\tmotionState := arDrone motionState.\r\t\t\r\t\tforward \tcolor: (self keyColorBy: ( motionState frontBackTilt < 0)).\r\t\tbackward \tcolor: (self keyColorBy: ( motionState frontBackTilt > 0)).\r\t\tleft \t\tcolor: (self keyColorBy: ( motionState leftRightTilt < 0)).\r\t\tright \t\tcolor: (self keyColorBy: ( motionState leftRightTilt > 0)).\r\t\tup \t\t\tcolor: (self keyColorBy: ( motionState verticalSpeed > 0)).\r\t\tdown \t\tcolor: (self keyColorBy: ( motionState verticalSpeed < 0)).\r\t\tcc \t\t\tcolor: (self keyColorBy: ( motionState angularSpeed  < 0)).\r\t\tcw \t\t\tcolor: (self keyColorBy: ( motionState angularSpeed  > 0)).\t\r\t].\r\t',			#stamp : 'CaroHernandez 7/23/2016 13:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '135' ],		#self : OmReference [ '136' ],		#time : DateAndTime [ '2017-09-20T16:48:02.235867-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDUIMotionState,				#isMetaSide : false			},			#name : #wantsSteps,			#protocol : #'stepping and presenter',			#sourceCode : 'wantsSteps\r\t^ true',			#stamp : 'CaroHernandez 7/22/2016 21:15',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '136' ],		#self : OmReference [ '137' ],		#time : DateAndTime [ '2017-09-20T16:48:02.236741-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDAdapterTCP class',				#isMetaSide : true			},			#name : #'withARDrone:port:',			#protocol : #'instance creation',			#sourceCode : 'withARDrone: anARDrone port: aPort\r\t"Returns an instance of ARDAdapterUDP. The arguments types must be:\r\t- aPort <Integer>\r\t- anIPAddress <String>\r\t- aBoolean <Boolean>\r\t- anInterval <Integer>"\r\t\r\t^ (self new) \r\t\t\tarDrone: anARDrone;\r\t\t\tdroneAddress: ARDConstant address_DRONE;\r\t\t\tport: aPort.',			#stamp : 'CaroHernandez 5/22/2016 13:53',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '137' ],		#self : OmReference [ '138' ],		#time : DateAndTime [ '2017-09-20T16:48:02.237659-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterTCP,				#isMetaSide : false			},			#name : #arDrone,			#protocol : #accessing,			#sourceCode : 'arDrone\r\t"Sets the ARDrone instance for which this Adapter UDP was created"\r\t^ arDrone',			#stamp : 'CaroHernandez 5/22/2016 13:41',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '138' ],		#self : OmReference [ '139' ],		#time : DateAndTime [ '2017-09-20T16:48:02.238557-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterTCP,				#isMetaSide : false			},			#name : #'arDrone:',			#protocol : #accessing,			#sourceCode : 'arDrone: anARDrone\r\t"Sets the ARDrone instance for which this Adapter UDP was created"\r\tarDrone := anARDrone',			#stamp : 'CaroHernandez 5/22/2016 13:41',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '139' ],		#self : OmReference [ '140' ],		#time : DateAndTime [ '2017-09-20T16:48:02.23963-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterTCP,				#isMetaSide : false			},			#name : #closeAndDestroy,			#protocol : #accessing,			#sourceCode : 'closeAndDestroy\r\r\tsocket ifNotNil: [ socket closeAndDestroy ] .',			#stamp : 'CaroHernandez 7/20/2016 22:17',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '140' ],		#self : OmReference [ '141' ],		#time : DateAndTime [ '2017-09-20T16:48:02.240944-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterTCP,				#isMetaSide : false			},			#name : #connect,			#protocol : #accessing,			#sourceCode : 'connect\r\t\r\t[ socket := Socket newTCP.\r\tsocket \r\t\tconnectTo: (self droneAddress) port: (self port) waitForConnectionFor: 50 ]\r\t\ton: Exception \r\t\tdo:  [^ false].\r\t^ true',			#stamp : 'CaroHernandez 6/27/2016 21:11',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '141' ],		#self : OmReference [ '142' ],		#time : DateAndTime [ '2017-09-20T16:48:02.242055-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterTCP,				#isMetaSide : false			},			#name : #droneAddress,			#protocol : #accessing,			#sourceCode : 'droneAddress\r\t\r\t^ droneAddress ',			#stamp : 'CaroHernandez 5/22/2016 13:42',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '142' ],		#self : OmReference [ '143' ],		#time : DateAndTime [ '2017-09-20T16:48:02.244203-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterTCP,				#isMetaSide : false			},			#name : #'droneAddress:',			#protocol : #accessing,			#sourceCode : 'droneAddress: aString\r\t\r\tdroneAddress := NetNameResolver addressForName: aString',			#stamp : 'CaroHernandez 5/22/2016 13:41',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '143' ],		#self : OmReference [ '144' ],		#time : DateAndTime [ '2017-09-20T16:48:02.245484-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterTCP,				#isMetaSide : false			},			#name : #isConnected,			#protocol : #'as yet unclassified',			#sourceCode : 'isConnected\r\t^ socket isConnected',			#stamp : 'CaroHernandez 9/14/2016 22:29',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '144' ],		#self : OmReference [ '145' ],		#time : DateAndTime [ '2017-09-20T16:48:02.246987-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterTCP,				#isMetaSide : false			},			#name : #port,			#protocol : #accessing,			#sourceCode : 'port\r\t\r\t^ port',			#stamp : 'CaroHernandez 5/22/2016 13:52',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '145' ],		#self : OmReference [ '146' ],		#time : DateAndTime [ '2017-09-20T16:48:02.248302-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterTCP,				#isMetaSide : false			},			#name : #'port:',			#protocol : #accessing,			#sourceCode : 'port: anInt\r\t\r\tport := anInt',			#stamp : 'CaroHernandez 5/22/2016 13:53',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '146' ],		#self : OmReference [ '147' ],		#time : DateAndTime [ '2017-09-20T16:48:02.249325-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterTCP,				#isMetaSide : false			},			#name : #receive,			#protocol : #accessing,			#sourceCode : 'receive\r\t"Receives a single message using the socket, and returns its content in a ByteArray buffer. It returns 0 if nothing was received."\r\t| buffer received |\r\tbuffer := ByteArray new: 8000.\r\treceived := 0.\r\treceived := socket receiveDataTimeout: (self receiveTimeout * 1000) into: buffer.\r\r\t(received > 0) \r\t\t\tifTrue: [\r\t\t\t\t^ buffer .\r\t\t\t]\r\t\t\tifFalse: [ \r\t\t\t\t^ 0 .\r\t\t\t].\r\t \r\t',			#stamp : 'CaroHernandez 9/15/2016 00:07',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '147' ],		#self : OmReference [ '148' ],		#time : DateAndTime [ '2017-09-20T16:48:02.250328-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterTCP,				#isMetaSide : false			},			#name : #receiveTimeout,			#protocol : #accessing,			#sourceCode : 'receiveTimeout\r\t^ 400\r\t \r\t',			#stamp : 'CaroHernandez 9/14/2016 23:40',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '148' ],		#self : OmReference [ '149' ],		#time : DateAndTime [ '2017-09-20T16:48:02.251234-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterTCP,				#isMetaSide : false			},			#name : #socket,			#protocol : #accessing,			#sourceCode : 'socket\r\t\r\t^ socket',			#stamp : 'CaroHernandez 5/22/2016 13:42',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '149' ],		#self : OmReference [ '150' ],		#time : DateAndTime [ '2017-09-20T16:48:02.252152-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterTCP,				#isMetaSide : false			},			#name : #'socket:',			#protocol : #accessing,			#sourceCode : 'socket: anUDPSocket\r\t\r\tsocket := anUDPSocket ',			#stamp : 'CaroHernandez 5/22/2016 13:42',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '150' ],		#self : OmReference [ '151' ],		#time : DateAndTime [ '2017-09-20T16:48:02.253154-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDAdapterUDP class',				#isMetaSide : true			},			#name : #'withARDrone:port:isMulticast:delayInterval:',			#protocol : #'instance creation',			#sourceCode : 'withARDrone: anARDrone port: aPort isMulticast: aBoolean delayInterval: anInterval \r\t"Returns an instance of ARDAdapterUDP. The arguments types must be:\r\t- aPort <Integer>\r\t- anIPAddress <String>\r\t- aBoolean <Boolean>\r\t- anInterval <Integer>"\r\t\r\t^ (self new) \r\t\t\tarDrone: anARDrone;\r\t\t\tdroneAddress: ARDConstant address_DRONE;\r\t\t\tisMulticast: aBoolean;\r\t\t\tsocket: (Socket newUDP setPort: aPort);\r\t\t\tdelayInterval: anInterval .',			#stamp : 'CaroHernandez 5/8/2016 19:19',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '151' ],		#self : OmReference [ '152' ],		#time : DateAndTime [ '2017-09-20T16:48:02.255396-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterUDP,				#isMetaSide : false			},			#name : #arDrone,			#protocol : #accessing,			#sourceCode : 'arDrone\r\t"Sets the ARDrone instance for which this Adapter UDP was created"\r\t^ arDrone',			#stamp : 'CaroHernandez 4/9/2016 08:07',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '152' ],		#self : OmReference [ '153' ],		#time : DateAndTime [ '2017-09-20T16:48:02.256483-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterUDP,				#isMetaSide : false			},			#name : #'arDrone:',			#protocol : #accessing,			#sourceCode : 'arDrone: anARDrone\r\t"Sets the ARDrone instance for which this Adapter UDP was created"\r\tarDrone := anARDrone',			#stamp : 'CaroHernandez 4/9/2016 08:07',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '153' ],		#self : OmReference [ '154' ],		#time : DateAndTime [ '2017-09-20T16:48:02.257475-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterUDP,				#isMetaSide : false			},			#name : #closeAndDestroy,			#protocol : #receiving,			#sourceCode : 'closeAndDestroy\r\r\tsocket closeAndDestroy.',			#stamp : 'CaroHernandez 6/7/2016 20:26',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '154' ],		#self : OmReference [ '155' ],		#time : DateAndTime [ '2017-09-20T16:48:02.258459-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterUDP,				#isMetaSide : false			},			#name : #delayInterval,			#protocol : #accessing,			#sourceCode : 'delayInterval\r\t\r\t^ delayInterval',			#stamp : 'CaroHernandez 3/8/2016 14:23',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '155' ],		#self : OmReference [ '156' ],		#time : DateAndTime [ '2017-09-20T16:48:02.2594-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterUDP,				#isMetaSide : false			},			#name : #'delayInterval:',			#protocol : #accessing,			#sourceCode : 'delayInterval: anInt\r\t\r\tdelayInterval := anInt',			#stamp : 'CaroHernandez 3/13/2016 17:11',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '156' ],		#self : OmReference [ '157' ],		#time : DateAndTime [ '2017-09-20T16:48:02.260444-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterUDP,				#isMetaSide : false			},			#name : #droneAddress,			#protocol : #accessing,			#sourceCode : 'droneAddress\r\t\r\t^ droneAddress ',			#stamp : 'CaroHernandez 3/8/2016 14:21',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '157' ],		#self : OmReference [ '158' ],		#time : DateAndTime [ '2017-09-20T16:48:02.261396-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterUDP,				#isMetaSide : false			},			#name : #'droneAddress:',			#protocol : #accessing,			#sourceCode : 'droneAddress: aString\r\t\r\tdroneAddress := NetNameResolver addressForName: aString',			#stamp : 'CaroHernandez 3/25/2016 13:28',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '158' ],		#self : OmReference [ '159' ],		#time : DateAndTime [ '2017-09-20T16:48:02.262454-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterUDP,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize .\r\tmutex := Mutex new.\r\tdelayInterval := 30 .\r\trecipientByteArray := ByteArray new: 4096.\r\t\r\t',			#stamp : 'CaroHernandez 8/21/2016 19:57',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '159' ],		#self : OmReference [ '160' ],		#time : DateAndTime [ '2017-09-20T16:48:02.263408-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterUDP,				#isMetaSide : false			},			#name : #isMulticast,			#protocol : #accessing,			#sourceCode : 'isMulticast\r\t\r\t^ isMulticast',			#stamp : 'CaroHernandez 3/8/2016 14:22',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '160' ],		#self : OmReference [ '161' ],		#time : DateAndTime [ '2017-09-20T16:48:02.265366-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterUDP,				#isMetaSide : false			},			#name : #'isMulticast:',			#protocol : #accessing,			#sourceCode : 'isMulticast: aBoolean\r\t\r\t^ aBoolean',			#stamp : 'CaroHernandez 3/8/2016 14:22',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '161' ],		#self : OmReference [ '162' ],		#time : DateAndTime [ '2017-09-20T16:48:02.266319-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterUDP,				#isMetaSide : false			},			#name : #receive,			#protocol : #receiving,			#sourceCode : 'receive\r\t"Receives a single message using the socket, and returns its content in a ByteArray buffer. It returns 0 if nothing was received."\r\t| buffer received |\r\t"buffer := ByteArray new: 4096."\r\tbuffer := recipientByteArray.\r\treceived := 0.\r\t[received := socket receiveUDPDataInto: buffer.] \r\t\ton: Exception \r\t\tdo: [ ^ 0 ].\r\t\r\t((received at: 1) > 0) \r\t\t\tifTrue: [\r\t\t\t\t^ buffer .\r\t\t\t]\r\t\t\tifFalse: [ \r\t\t\t\t^ 0 .\r\t\t\t].\r\t ',			#stamp : 'CaroHernandez 8/21/2016 19:58',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '162' ],		#self : OmReference [ '163' ],		#time : DateAndTime [ '2017-09-20T16:48:02.267285-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterUDP,				#isMetaSide : false			},			#name : #'receiveWithin:onTimeout:',			#protocol : #receiving,			#sourceCode : 'receiveWithin: aTimeInterval onTimeout: aBlock\r\t"Tries to receive a message in its socket for aTimeInterval time. Excecutes aBlock if timeout is reached."\r\t| received |\r\t[ [true] whileTrue: [ \r\t\t\treceived := self receive.\r\t\t\t(received = 0) \r\t\t\t\tifFalse: [^ received ].\r\t\t]\r\t] valueWithin: aTimeInterval onTimeout: aBlock.\r\t',			#stamp : 'CaroHernandez 8/21/2016 23:09',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '163' ],		#self : OmReference [ '164' ],		#time : DateAndTime [ '2017-09-20T16:48:02.268315-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterUDP,				#isMetaSide : false			},			#name : #'send:',			#protocol : #sending,			#sourceCode : 'send: message\r\t"Sends a message via UDP, using its socket (already initialized with port and host). The usage of this function is exclusive, so it is protected by a mutex.\r\tArguments:\r\t- messages <ARDCommand> or <String> (properly formated string)"\r\t\r\tmutex critical: [ \r\t\t(message isMemberOf: ARDCommand) \r\t\t\tifTrue: [ message sequenceNumber: arDrone nextSequenceNumber.\r\t\t\t\t\t\t(message prefix = \'AT*COMWDG\' | (message prefix = \'AT*CTRL\')) \r\t\t\t\t\t\t\tifFalse: ["Transcript show: (message asString, Time now asString); cr"].\r\t\t\t\t\t\t(message prefix = \'AT*PCMD\') \r\t\t\t\t\t\t\tifTrue: [Transcript show: (message asString, Time now asString); cr]  ]\r\t\t\tifFalse: [ "Transcript show: message asString; cr" ].\r\t\tsocket \r\t\t\t \tsendData: message asByteArray \r\t\t\t \ttoHost: droneAddress\r\t\t\t \tport: socket port.\r\t\t(Delay forMilliseconds: delayInterval) wait.\r\t].\r\t^ true.',			#stamp : 'CaroHernandez 9/20/2016 19:07',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '164' ],		#self : OmReference [ '165' ],		#time : DateAndTime [ '2017-09-20T16:48:02.269497-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterUDP,				#isMetaSide : false			},			#name : #socket,			#protocol : #accessing,			#sourceCode : 'socket\r\t\r\t^ socket',			#stamp : 'CaroHernandez 3/8/2016 14:24',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '165' ],		#self : OmReference [ '166' ],		#time : DateAndTime [ '2017-09-20T16:48:02.270796-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDAdapterUDP,				#isMetaSide : false			},			#name : #'socket:',			#protocol : #accessing,			#sourceCode : 'socket: anUDPSocket\r\t\r\tsocket := anUDPSocket ',			#stamp : 'CaroHernandez 3/8/2016 14:24',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '166' ],		#self : OmReference [ '167' ],		#time : DateAndTime [ '2017-09-20T16:48:02.271946-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDCommand class',				#isMetaSide : true			},			#name : #ackControlModeMessage,			#protocol : #'preset messages',			#sourceCode : 'ackControlModeMessage\r\t\r\t^ \'AT*CTRL=0\', Character cr asString',			#stamp : 'CaroHernandez 6/30/2016 19:26',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '167' ],		#self : OmReference [ '168' ],		#time : DateAndTime [ '2017-09-20T16:48:02.273016-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDCommand class',				#isMetaSide : true			},			#name : #authMessage,			#protocol : #'preset messages',			#sourceCode : 'authMessage\r\t\r\t^ \'PARROT AUTH\'',			#stamp : 'CaroHernandez 3/24/2016 18:13',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '168' ],		#self : OmReference [ '169' ],		#time : DateAndTime [ '2017-09-20T16:48:02.273985-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDCommand class',				#isMetaSide : true			},			#name : #authResponse,			#protocol : #'preset messages',			#sourceCode : 'authResponse\r\t\r\t^ \'PARROT AUTH AR.DRONE OK\'',			#stamp : 'CaroHernandez 3/24/2016 18:49',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '169' ],		#self : OmReference [ '170' ],		#time : DateAndTime [ '2017-09-20T16:48:02.277068-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDCommand class',				#isMetaSide : true			},			#name : #navdataKeepAliveMessage,			#protocol : #'preset messages',			#sourceCode : 'navdataKeepAliveMessage\r\t\r\t^ Character home asString, Character null asString .',			#stamp : 'CaroHernandez 1/29/2016 03:19',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '170' ],		#self : OmReference [ '171' ],		#time : DateAndTime [ '2017-09-20T16:48:02.279402-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDCommand class',				#isMetaSide : true			},			#name : #'withPrefix:arguments:',			#protocol : #'instance creation',			#sourceCode : 'withPrefix: aPrefix arguments: anArgumentCollection\r\t"Returns an instance of ARDCommand, the arguments types must be:\r\t- aPrefix <String>\r\t- aSequenceNumber <Integer>\r\t- anArgumentCollection <aCollection> (must contain Numeric or String)"\r\t^ (self new)\r\t\tprefix: aPrefix;\r\t\tsequenceNumber: 0;\r\t\targuments: anArgumentCollection ',			#stamp : 'CaroHernandez 4/9/2016 07:50',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '171' ],		#self : OmReference [ '172' ],		#time : DateAndTime [ '2017-09-20T16:48:02.281156-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommand,				#isMetaSide : false			},			#name : #arguments,			#protocol : #accessing,			#sourceCode : 'arguments\r\r\t^ argumentCollection',			#stamp : 'CaroHernandez 5/24/2016 19:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '172' ],		#self : OmReference [ '173' ],		#time : DateAndTime [ '2017-09-20T16:48:02.282279-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommand,				#isMetaSide : false			},			#name : #'arguments:',			#protocol : #accessing,			#sourceCode : 'arguments: aCollection\r\r\targumentCollection := aCollection',			#stamp : 'CaroHernandez 3/13/2016 20:44',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '173' ],		#self : OmReference [ '174' ],		#time : DateAndTime [ '2017-09-20T16:48:02.283321-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommand,				#isMetaSide : false			},			#name : #asByteArray,			#protocol : #converting,			#sourceCode : 'asByteArray\r\r\t^ self asString asByteArray',			#stamp : 'CaroHernandez 1/29/2016 01:50',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '174' ],		#self : OmReference [ '175' ],		#time : DateAndTime [ '2017-09-20T16:48:02.284305-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommand,				#isMetaSide : false			},			#name : #asString,			#protocol : #converting,			#sourceCode : 'asString\r\t"Returns a String representation of this command, ready to be understood by the drone\'s firmware"\r\t| cmdString dq cr |\r\tdq := (prefix = \'AT*CONFIG_IDS\') \r\t\tifTrue: [\'\']\r\t\tifFalse: [$" asString].\r\tcr := Character cr asString .\r\tcmdString := prefix, \'=\', sequenceNumber asString .\r\t(1 to: (argumentCollection size)) do: [ :i |\r\t\t| arg |\r\t\targ := (argumentCollection at: i) .\r\t\t"Transcript show: arg asString; cr ."\r\t\t(arg class = ByteString) \r\t\t\tifTrue: [ cmdString := cmdString, \',\', dq, arg asString, dq ] \r\t\t\tifFalse: [ cmdString := cmdString, \',\', arg asString ] .\r\t\r\t] .\r\tcmdString := cmdString, cr .\r\t^ cmdString\r\t',			#stamp : 'CaroHernandez 5/31/2016 16:05',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '175' ],		#self : OmReference [ '176' ],		#time : DateAndTime [ '2017-09-20T16:48:02.285304-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommand,				#isMetaSide : false			},			#name : #isAStabilizeCommand,			#protocol : #converting,			#sourceCode : 'isAStabilizeCommand\r\t^ [((self prefix = \'AT*PCMD\') and: (self arguments size = 5)) \r\t\tand: (((self arguments copyFrom:2 to: 5) select: [ :each | each = 0 ]) size = 4 ).]\r\t\ton: Exception do: [^ false. ]\r\t',			#stamp : 'CaroHernandez 5/24/2016 19:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '176' ],		#self : OmReference [ '177' ],		#time : DateAndTime [ '2017-09-20T16:48:02.286389-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommand,				#isMetaSide : false			},			#name : #prefix,			#protocol : #accessing,			#sourceCode : 'prefix\r\r\t^ prefix',			#stamp : 'CaroHernandez 5/24/2016 19:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '177' ],		#self : OmReference [ '178' ],		#time : DateAndTime [ '2017-09-20T16:48:02.28733-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommand,				#isMetaSide : false			},			#name : #'prefix:',			#protocol : #accessing,			#sourceCode : 'prefix: aString\r\r\tprefix := aString',			#stamp : 'CaroHernandez 3/13/2016 20:43',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '178' ],		#self : OmReference [ '179' ],		#time : DateAndTime [ '2017-09-20T16:48:02.289185-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommand,				#isMetaSide : false			},			#name : #sequenceNumber,			#protocol : #accessing,			#sourceCode : 'sequenceNumber\r\r\t^ sequenceNumber ',			#stamp : 'CaroHernandez 5/31/2016 15:11',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '179' ],		#self : OmReference [ '180' ],		#time : DateAndTime [ '2017-09-20T16:48:02.290112-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommand,				#isMetaSide : false			},			#name : #'sequenceNumber:',			#protocol : #accessing,			#sourceCode : 'sequenceNumber: anInt\r\r\tsequenceNumber := anInt',			#stamp : 'CaroHernandez 3/13/2016 20:46',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '180' ],		#self : OmReference [ '181' ],		#time : DateAndTime [ '2017-09-20T16:48:02.291023-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDCommandManager class',				#isMetaSide : true			},			#name : #'withARDrone:',			#protocol : #'instance creation',			#sourceCode : 'withARDrone: anARDrone\r\t"Returns an ARDCommandManager instance for managing sending AT commands to the drone. \r\tThe argument type must be:\r\t- anARDrone <ARDrone>"\r\t^ (self new)\r\t\tarDrone: anARDrone ',			#stamp : 'CaroHernandez 4/29/2016 20:59',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '181' ],		#self : OmReference [ '182' ],		#time : DateAndTime [ '2017-09-20T16:48:02.29201-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'animateFlight:duration:',			#protocol : #'api-configuration CONTROL',			#sourceCode : 'animateFlight: aFlightAnimationNumber duration: anInt \r\t"Sends a command for animating the ar drone flight. \r\tFlightAnimation - [ Integer ] \r\tDuration - [ milliseconds ]"\r\t| arg command |\r\targ := aFlightAnimationNumber asString, \',\' asString, anInt asString.\r\tcommand := (ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t\t\t\t\t\t\t arguments: { \'control:flight_anim\'.\r\t\t\t\t\t\t\t\t\t\t\t\t\t  arg asString }).\r\tself enqueue: command.',			#stamp : 'CaroHernandez 5/2/2016 13:40',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '182' ],		#self : OmReference [ '183' ],		#time : DateAndTime [ '2017-09-20T16:48:02.293039-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'animateLEDs:frequency:duration:',			#protocol : #'api-configuration LEDS',			#sourceCode : 'animateLEDs: aLedAnimationNumber frequency: aFloat duration: anInt \r\t"Sends a command for animating the ar drone LEDs. \r\tLedAnimation - [ Integer ] Enumeration, its values are defined in the ARDCommand class side.\r\tFrequency - [ Hertz ]\r\tDuration - [ seconds ]\r\tSeq - [ Integer ] is the sequence number of the AT command"\r\tself enqueue: (ARDCommand withPrefix: \'AT*LED\' \r\t\t\t\t\t\t\t\t\t arguments: {aLedAnimationNumber. \r\t\t\t\t\t\t\t\t\t\t\t\t\taFloat asFloat asARDEquivalentInteger. \r\t\t\t\t\t\t\t\t\t\t\t\t\tanInt}) .',			#stamp : 'CaroHernandez 4/9/2016 08:16',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '183' ],		#self : OmReference [ '184' ],		#time : DateAndTime [ '2017-09-20T16:48:02.294204-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #arDrone,			#protocol : #accessing,			#sourceCode : 'arDrone\r\t"Returns the ARDrone instance for which this Command Manager was created"\r\t^ arDrone',			#stamp : 'CaroHernandez 3/13/2016 21:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '184' ],		#self : OmReference [ '185' ],		#time : DateAndTime [ '2017-09-20T16:48:02.295214-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'arDrone:',			#protocol : #accessing,			#sourceCode : 'arDrone: anARDrone\r\t"Sets the ARDrone instance for which this Command Manager was created"\r\tarDrone := anARDrone\r\t',			#stamp : 'CaroHernandez 3/13/2016 21:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '185' ],		#self : OmReference [ '186' ],		#time : DateAndTime [ '2017-09-20T16:48:02.2962-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #commandsQueue,			#protocol : #accessing,			#sourceCode : 'commandsQueue\r\t"Returns the queue of commands that havent been sent yet"\r\t^ commandsQueue',			#stamp : 'CaroHernandez 3/14/2016 12:09',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '186' ],		#self : OmReference [ '187' ],		#time : DateAndTime [ '2017-09-20T16:48:02.29714-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configApplicationDescription:',			#protocol : #'api-configuration CUSTOM',			#sourceCode : 'configApplicationDescription: aString\r\t"Sets the current application description string."\r\t| command |\r\tcommand := ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t \t\t\t\t\t\targuments: { \'custom:application_desc\' . \r\t\t\t\t\t\t\t\t\t\t\t\t\taString }.\r\tself enqueue: command.',			#stamp : 'CaroHernandez 5/12/2016 18:50',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '187' ],		#self : OmReference [ '188' ],		#time : DateAndTime [ '2017-09-20T16:48:02.299043-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configApplicationId:',			#protocol : #'api-configuration CUSTOM',			#sourceCode : 'configApplicationId: aString\r\t"Sets the current application id."\r\r\t| command |\r\tcommand := ARDCommand\r\t\twithPrefix: \'AT*CONFIG\'\r\t\targuments:\r\t\t\t{\'custom:application_id\'.\r\t\t\taString}.\r\tself enqueue: command.\r\tapplicationId := (aString at: 1) = $-\r\t\tifTrue: [ nil ]\r\t\tifFalse: [ aString ]',			#stamp : 'CaroHernandez 5/20/2016 16:04',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '188' ],		#self : OmReference [ '189' ],		#time : DateAndTime [ '2017-09-20T16:48:02.300037-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configControlMode:',			#protocol : #'api-configuration GENERAL',			#sourceCode : 'configControlMode: aControlMode\r\t"Used in ARDConfigurationManager >> requestAndReceieConfigurationFile."\r\t| command |\r\tcommand := \r\tARDCommand \r\t\twithPrefix: \'AT*CTRL\'\r\t\targuments: { aControlMode . 0 }.\r\tself enqueue: command. ',			#stamp : 'CaroHernandez 7/20/2016 00:00',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '189' ],		#self : OmReference [ '190' ],		#time : DateAndTime [ '2017-09-20T16:48:02.30099-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #configDefaultMulticonfig,			#protocol : #'api-configuration CUSTOM',			#sourceCode : 'configDefaultMulticonfig\r\t| n |\r\t\r\tprofileId := \'00000000\'.\r\tsessionId := \'00000000\'.\r\tapplicationId := \'00000000\'.\r\t"\r\tn := ARDrone CRC32From: ((Random new next * 100000000) rounded asString).  \r\tself configSessionId: n.\r\tself configSessionDescription: \'Session\', n.\r\t\r\tself configResetApplicationId: \'64fb6da3\'.\r\tself configApplicationDescription: \'Pharo Application\'."',			#stamp : 'CaroHernandez 9/20/2016 16:41',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '190' ],		#self : OmReference [ '191' ],		#time : DateAndTime [ '2017-09-20T16:48:02.302149-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configDetectType:',			#protocol : #'api-configuration DETECT',			#sourceCode : 'configDetectType: anInt\r\t| command |\r\tcommand := ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t \t\t\t\t\t\targuments: { \'detect:detect_type\' . \r\t\t\t\t\t\t\t\t\t\t\t\t\tanInt asString }.\r\tself enqueueWithConfigIds: command. ',			#stamp : 'CaroHernandez 5/30/2016 20:51',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '191' ],		#self : OmReference [ '192' ],		#time : DateAndTime [ '2017-09-20T16:48:02.303173-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #configDetectionsDefault,			#protocol : #'api-configuration DETECT',			#sourceCode : 'configDetectionsDefault\r\tself configDetectType: ARDConstant detectType_MULTIPLE_DETECTION_MODE  .\r\t\r\tself configDetectionsSelectV: ARDConstant tagType_BLACK_ROUNDEL.\r\tself configDetectionsSelectH: ARDConstant tagType_SHELL_TAG_V2.',			#stamp : 'CaroHernandez 7/23/2016 17:09',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '192' ],		#self : OmReference [ '193' ],		#time : DateAndTime [ '2017-09-20T16:48:02.304181-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configDetectionsSelectH:',			#protocol : #'api-configuration DETECT',			#sourceCode : 'configDetectionsSelectH: anInt\r\t| command |\r\tcommand := ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t \t\t\t\t\t\targuments: { \'detect:detections_select_h\' . \r\t\t\t\t\t\t\t\t\t\t\t\t\tanInt asString }.\r\tself enqueueWithConfigIds: command. ',			#stamp : 'CaroHernandez 5/30/2016 20:51',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '193' ],		#self : OmReference [ '194' ],		#time : DateAndTime [ '2017-09-20T16:48:02.305155-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configDetectionsSelectV:',			#protocol : #'api-configuration DETECT',			#sourceCode : 'configDetectionsSelectV: anInt\r\t| command |\r\tcommand := ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t \t\t\t\t\t\targuments: { \'detect:detections_select_v\' . \r\t\t\t\t\t\t\t\t\t\t\t\t\tanInt asString }.\r\tself enqueueWithConfigIds: command. ',			#stamp : 'CaroHernandez 5/30/2016 20:51',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '194' ],		#self : OmReference [ '195' ],		#time : DateAndTime [ '2017-09-20T16:48:02.306113-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configEnemyColors:',			#protocol : #'api-configuration DETECT',			#sourceCode : 'configEnemyColors: anInt\r\t| command |\r\tcommand := ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t \t\t\t\t\t\targuments: { \'detect:enemy_colors\' . \r\t\t\t\t\t\t\t\t\t\t\t\t\tanInt asString }.\r\tself enqueueWithConfigIds: command. ',			#stamp : 'CaroHernandez 5/30/2016 20:51',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '195' ],		#self : OmReference [ '196' ],		#time : DateAndTime [ '2017-09-20T16:48:02.307131-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configFlightWithoutShell:',			#protocol : #'api-configuration CONTROL',			#sourceCode : 'configFlightWithoutShell: aBoolean\r\t"Tells the drone firmware wether the drone is using the outdoor hull or not. Set to false if the drone is using the indoor hull. \r\tArgument: \r\t- aBoolean: True for outdoor hull, False for indoor hull."\r\t| command |\r\tcommand := ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t \t\t\t\t\t\targuments: { \'control:flight_without_shell\' . \r\t\t\t\t\t\t\t\t\t\t\t\t\t aBoolean \r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue:[ \'TRUE\' ] \r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifFalse: [ \'FALSE\' ]}.\r\tself enqueueWithConfigIds: command. ',			#stamp : 'CaroHernandez 5/25/2016 13:57',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '196' ],		#self : OmReference [ '197' ],		#time : DateAndTime [ '2017-09-20T16:48:02.309023-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configFlyingMode:',			#protocol : #'api-configuration CONTROL',			#sourceCode : 'configFlyingMode: aFlyingMode\r\t"Sets flying mode for the drone, there are 3 possibilities: FREE FLIGHT, HOVER ON TOP OF ROUNDEL and HOVER ON TOP OF ORIENTED ROUNDEL. \r\tArgument: \r\t- aFlyingMode: Integer (enumeration defined in ARDConstant class side)"\r\t| command |\r\tcommand := ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t \t\t\t\t\t\targuments: { \'control:flying_mode\' . \r\t\t\t\t\t\t\t\t\t\t\t\t\taFlyingMode asString }.\r\tself enqueueWithConfigIds: command. ',			#stamp : 'CaroHernandez 5/22/2016 11:58',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '197' ],		#self : OmReference [ '198' ],		#time : DateAndTime [ '2017-09-20T16:48:02.310351-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #configNavdataDefaultOptions,			#protocol : #'api-configuration GENERAL',			#sourceCode : 'configNavdataDefaultOptions\r\t\r\t"Configure tag detection"\r\tTranscript show: \'config\';cr.\r\tself configSessionId: \'-all\'.\r\t\r\t(self configNavdataDemo: true)\r\tifFalse: [^ false].\r\tself configDefaultMulticonfig.\r\tself configNavdataOptions: { \r\t\tARDConstant option_DEMO.\r\t\tARDConstant option_VISION_DETECT }.\r\t\r\tself configControlMode: ARDConstant controlMode_ACK_CONTROL_MODE.\r\t\r\r\t\r\tself configDetectionsDefault. \r\t\r\tself configEnemyColors: ARDConstant detectionColor_ORANGE_BLUE. \r\tself configVideoCodec: ARDConstant videoCodec_H264_720P_CODEC.\r\tself configVideoChannel: ARDConstant videoChannel_ZAP_CHANNEL_HORI.\r\t\r\t^ true.',			#stamp : 'CaroHernandez 9/20/2016 16:39',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '198' ],		#self : OmReference [ '199' ],		#time : DateAndTime [ '2017-09-20T16:48:02.311855-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configNavdataDemo:',			#protocol : #'api-configuration GENERAL',			#sourceCode : 'configNavdataDemo: aBoolean\r\t"comment stating purpose of message"\r\t| command lastPacketState |\r\t\r\tlastPacketState := arDrone navdataManager lastDatagramReceived header state.\r\t"if the bootstrap bit is set to 0, then the navdata demo option has been set before (maybe by another app), and can\'t be set again. The drone must be restarted"\r\t(lastPacketState navdataBootstrap = 0) \r\tifTrue: [ \r\t\t"check wether the navdataDemo option in the drone matches the desired value"\r\t\t((lastPacketState navdataDemo = 1) ~= aBoolean) ifTrue: [ ^ false ]].\r\t\r\tcommand := ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t \t\t\t\t\t\targuments: { \'general:navdata_demo\' . \r\t\t\t\t\t\t\t\t\t\t\t\t\taBoolean \r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue:[ \'TRUE\' ] \r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifFalse: [ \'FALSE\' ]}.\r\tself enqueue: command.\r\t^ true.',			#stamp : 'CaroHernandez 6/30/2016 21:53',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '199' ],		#self : OmReference [ '200' ],		#time : DateAndTime [ '2017-09-20T16:48:02.313504-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configNavdataOptions:',			#protocol : #'api-configuration GENERAL',			#sourceCode : 'configNavdataOptions: anArray\r\t| command options |\r\toptions := Integer from32BitArrayWithOnesAt: anArray.\r\tcommand := ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t \t\t\t\t\t\targuments: { \'general:navdata_options\' . \r\t\t\t\t\t\t\t\t\t\t\t\t\toptions asString }.\r\tself enqueue: command. ',			#stamp : 'CaroHernandez 6/30/2016 20:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '200' ],		#self : OmReference [ '201' ],		#time : DateAndTime [ '2017-09-20T16:48:02.314635-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configOutdoor:',			#protocol : #'api-configuration CONTROL',			#sourceCode : 'configOutdoor: aBoolean\r\t"Tells the drone firmware if the drone is flying outdoors. (Changes the max velocity and tilts, and enabled the wind estimator)\r\tArgument: \r\t- aBoolean: True for outdoors, False for indoors."\r\t| command |\r\tcommand := ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t \t\t\t\t\t\targuments: { \'control:outdoor\' . \r\t\t\t\t\t\t\t\t\t\t\t\t\t aBoolean \r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue:[ \'TRUE\' ] \r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifFalse: [ \'FALSE\' ]}.\r\tself enqueueWithConfigIds: command. ',			#stamp : 'CaroHernandez 5/25/2016 13:59',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '201' ],		#self : OmReference [ '202' ],		#time : DateAndTime [ '2017-09-20T16:48:02.315628-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configProfileDescription:',			#protocol : #'api-configuration CUSTOM',			#sourceCode : 'configProfileDescription: aString\r\t"Sets the current profile description string."\r\t| command |\r\tcommand := ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t \t\t\t\t\t\targuments: { \'custom:profile_desc\' . \r\t\t\t\t\t\t\t\t\t\t\t\t\taString }.\r\tself enqueue: command.',			#stamp : 'CaroHernandez 5/12/2016 18:50',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '202' ],		#self : OmReference [ '203' ],		#time : DateAndTime [ '2017-09-20T16:48:02.317075-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configProfileId:',			#protocol : #'api-configuration CUSTOM',			#sourceCode : 'configProfileId: aString\r\t"Sets the current profile description string."\r\r\t| command |\r\tcommand := ARDCommand\r\t\twithPrefix: \'AT*CONFIG\'\r\t\targuments:\r\t\t\t{\'custom:profile_id\'.\r\t\t\taString}.\r\tself enqueue: command.\r\tprofileId := (aString at: 1) = $-\r\t\tifTrue: [ nil ]\r\t\tifFalse: [ aString ]',			#stamp : 'CaroHernandez 5/20/2016 16:04',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '203' ],		#self : OmReference [ '204' ],		#time : DateAndTime [ '2017-09-20T16:48:02.318297-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configResetApplicationId:',			#protocol : #'api-configuration CUSTOM',			#sourceCode : 'configResetApplicationId: aString\r\t"Sets the current profile description string."\r\tself configApplicationId: \'-\', aString.\r\tself configApplicationId: aString.',			#stamp : 'CaroHernandez 5/12/2016 19:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '204' ],		#self : OmReference [ '205' ],		#time : DateAndTime [ '2017-09-20T16:48:02.319383-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configResetProfileId:',			#protocol : #'api-configuration CUSTOM',			#sourceCode : 'configResetProfileId: aString\r\t"Sets the current profile description string."\r\tself configProfileId: \'-\', aString.\r\tself configProfileId: aString.',			#stamp : 'CaroHernandez 5/12/2016 19:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '205' ],		#self : OmReference [ '206' ],		#time : DateAndTime [ '2017-09-20T16:48:02.321359-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configResetSessionId:',			#protocol : #'api-configuration CUSTOM',			#sourceCode : 'configResetSessionId: aString\r\t"Sets the current profile description string."\r\tself configSessionId: \'-\', aString.\r\tself configSessionId: aString.',			#stamp : 'CaroHernandez 5/12/2016 19:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '206' ],		#self : OmReference [ '207' ],		#time : DateAndTime [ '2017-09-20T16:48:02.322358-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configSessionDescription:',			#protocol : #'api-configuration CUSTOM',			#sourceCode : 'configSessionDescription: aString\r\t"Sets the current session description string."\r\t| command |\r\tcommand := ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t \t\t\t\t\t\targuments: { \'custom:session_desc\' . \r\t\t\t\t\t\t\t\t\t\t\t\t\taString }.\r\tself enqueue: command.',			#stamp : 'CaroHernandez 5/12/2016 18:51',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '207' ],		#self : OmReference [ '208' ],		#time : DateAndTime [ '2017-09-20T16:48:02.323363-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configSessionId:',			#protocol : #'api-configuration CUSTOM',			#sourceCode : 'configSessionId: aString\r\t"Sets the current session id."\r\r\t| command |\r\tcommand := ARDCommand\r\t\twithPrefix: \'AT*CONFIG\'\r\t\targuments:\r\t\t\t{\'custom:session_id\'.\r\t\t\taString}.\r\tself enqueue: command.\r\tsessionId := (aString at: 1) = $-\r\t\tifTrue: [ nil ]\r\t\tifFalse: [ aString ]',			#stamp : 'CaroHernandez 5/20/2016 16:03',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '208' ],		#self : OmReference [ '209' ],		#time : DateAndTime [ '2017-09-20T16:48:02.32439-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configVideoChannel:',			#protocol : #'api-configuration VIDEO',			#sourceCode : 'configVideoChannel: anInt\r\t| command |\r\tcommand := ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t \t\t\t\t\t\targuments: { \'video:video_channel\' . \r\t\t\t\t\t\t\t\t\t\t\t\t\tanInt asString }.\r\t\r\tself enqueueWithConfigIds: command.\r\t ',			#stamp : 'CaroHernandez 5/12/2016 19:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '209' ],		#self : OmReference [ '210' ],		#time : DateAndTime [ '2017-09-20T16:48:02.325478-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'configVideoCodec:',			#protocol : #'api-configuration VIDEO',			#sourceCode : 'configVideoCodec: anInt\r\t"sets the video codification of the video stream sent by the drone"\r\t| command |\r\tcommand := ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t \t\t\t\t\t\targuments: { \'video:video_codec\' . \r\t\t\t\t\t\t\t\t\t\t\t\t\tanInt asString }.\r\t\r\tself enqueueWithConfigIds: command.\r\t ',			#stamp : 'CaroHernandez 6/2/2016 21:23',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '210' ],		#self : OmReference [ '211' ],		#time : DateAndTime [ '2017-09-20T16:48:02.326705-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'elevateTo:atSpeed:',			#protocol : #'api-control Progressive Movements',			#sourceCode : 'elevateTo: anAltitude atSpeed: aSpeed\r\t"elevates (ascend or descend) the drone, to the desired altitude (confirmed via navdata).\r\tArgument: \r\t\t- anAltitude: Integer representing the desired altitude in centimeters\r\t\t- aSpeed: Float in [0, 1] representing a percentage of the max elevation velocity configured for the drone"\r\t[[ | initialDifference difference epsilon velocity |\r\t\tinitialDifference := (anAltitude - arDrone altitude).\r\t\tdifference := initialDifference.\r\t\tepsilon := 100*(1+aSpeed).\r\t\tvelocity := aSpeed * (difference sign).\t\t\r\t\t\r\t\t(arDrone isFlying & ( difference abs > epsilon))\r\t\t\tifTrue: [ \r\t\t\t\tarDrone elevate: velocity.\t\r\t\t\t\t[[ difference abs > epsilon ] \r\t\t\t\t\twhileTrue: [ \r\t\t\t\t\t\t"difference is the remaining distance to go yet"\r\t\t\t\t\t\tdifference := (anAltitude - arDrone altitude).\r\t\t\t\t\t\t"Velocity decreases along with the difference"\r\t\t\t\t\t\tvelocity := ((velocity abs) - \r\t\t\t\t\t\t\t\t\t\t(velocity*(1-(difference/initialDifference)) abs)) * \r\t\t\t\t\t\t\t\t\t\t(difference sign).\r\t\t\t\t\t\t(Delay forMilliseconds: 20) wait ]] \r\t\t\t\tensure: [arDrone stabilize]]\r\t] valueWithin: 2 second onTimeout: [ Transcript show: \'Timeout on elevating, error\';cr ]]fork',			#stamp : 'CaroHernandez 6/3/2016 19:41',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '211' ],		#self : OmReference [ '212' ],		#time : DateAndTime [ '2017-09-20T16:48:02.327927-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'enqueue:',			#protocol : #api,			#sourceCode : 'enqueue: anARDCommand\r\t"Enqueues anARDCommand in the commandsQueue. The enqueued command will be properly dequeued and send automatically by the senderProcess."\r\tcommandsQueue nextPut: anARDCommand',			#stamp : 'CaroHernandez 3/25/2016 15:58',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '212' ],		#self : OmReference [ '213' ],		#time : DateAndTime [ '2017-09-20T16:48:02.328976-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #enqueueLandCommand,			#protocol : #private,			#sourceCode : 'enqueueLandCommand\r\t"Enqueues a single land command"\r\tself enqueue: (ARDCommand withPrefix: \'AT*REF\' \r\t\t\t\t\t\t\t\t\t arguments: {Integer from32BitArrayWithOnesAt: { 18 . 20 . 22 . 24 . 28 }})',			#stamp : 'CaroHernandez 4/9/2016 08:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '213' ],		#self : OmReference [ '214' ],		#time : DateAndTime [ '2017-09-20T16:48:02.329984-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'enqueueTakeOffCommand:',			#protocol : #private,			#sourceCode : 'enqueueTakeOffCommand: exitEmergencyState\r\t"Enqueues a single take off command"\r\t| onesIndex |\r\tonesIndex := { 9 . 18 . 20 . 22 . 24 . 28 } .\r\texitEmergencyState \r\t\tifTrue: [ onesIndex := {8}, onesIndex ] .\r\tself enqueue: (ARDCommand withPrefix: \'AT*REF\'\r\t\t\t\t\t\t\t\t\t arguments: {Integer from32BitArrayWithOnesAt: onesIndex })',			#stamp : 'CaroHernandez 4/21/2016 12:56',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '214' ],		#self : OmReference [ '215' ],		#time : DateAndTime [ '2017-09-20T16:48:02.331862-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'enqueueWithConfigIds:',			#protocol : #api,			#sourceCode : 'enqueueWithConfigIds: anARDCommand\r\t"Sends a config_ids command, and then enqueues the anARDCommand in the commandsQueue."\r\t| commandIds |\r\tcommandIds := ARDCommand withPrefix: \'AT*CONFIG_IDS\'  \r\t\t\t\t\t\t\t\t\targuments: { sessionId. profileId. applicationId }. \r\r\tself enqueue: commandIds.\r\tself enqueue: anARDCommand. ',			#stamp : 'CaroHernandez 5/31/2016 15:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '215' ],		#self : OmReference [ '216' ],		#time : DateAndTime [ '2017-09-20T16:48:02.332944-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #flatTrim,			#protocol : #api,			#sourceCode : 'flatTrim\r\t"Sends the flat trim command"\r\tself enqueue: (ARDCommand withPrefix: \'AT*FTRIM\'\r\t\t\t\t\t\t\t\t\t arguments: { }) .',			#stamp : 'CaroHernandez 4/9/2016 07:51',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '216' ],		#self : OmReference [ '217' ],		#time : DateAndTime [ '2017-09-20T16:48:02.333929-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tsuspendProcesses := false.\r\tcommandsQueue := SharedQueue new.\r\tself initializeProcessMotionCommandsSender.\r\tself initializeProcessQueuedCommandsSender.\r',			#stamp : 'CaroHernandez 6/30/2016 20:27',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '217' ],		#self : OmReference [ '218' ],		#time : DateAndTime [ '2017-09-20T16:48:02.334917-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #initializeProcessMotionCommandsSender,			#protocol : #initialize,			#sourceCode : 'initializeProcessMotionCommandsSender\r\t"initializes the process responsible for permanently sending motion commands to the drone (sends one command every 30 milliseconds)"\r\t| motionState |\r\tmotionCommandsSenderProcess :=\r\t[[ (self suspendProcesses) ifTrue: [Processor activeProcess suspend].\r\t\t(arDrone hasReceivedNavdata)\r\t\t\tifTrue:\r\t\t\t [ (arDrone isFlying) \r\t\t\t\t\tifTrue: \r\t\t\t\t\t[\tmotionState := arDrone motionState.\r\t\t\t\t\t\tself sendMoveCommandOnlyIfNecessary: motionState ]\r\t\t\t\t\tifFalse:\r\t\t\t\t\t[ (Delay forMilliseconds: 30) wait. ]]\r\t\t\tifFalse: \r\t\t\t[ (Delay forMilliseconds: 30) wait. ]\r\t\t] repeat ] newProcess.\r\tmotionCommandsSenderProcess name: \'Motion commands sender process\'.\r\t',			#stamp : 'CaroHernandez 6/2/2016 19:52',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '218' ],		#self : OmReference [ '219' ],		#time : DateAndTime [ '2017-09-20T16:48:02.335911-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #initializeProcessQueuedCommandsSender,			#protocol : #initialize,			#sourceCode : 'initializeProcessQueuedCommandsSender\r\t"initializes the process that permanently dequeues commands from the commandsQueue"\r\tsenderProcess := [[ | nextCommand |\r\t\t\t\t\t\t\t(self suspendProcesses) ifTrue: [Processor activeProcess suspend].\r\t\t\t\t\t\t\t"dequeue the next command, enumerate it and send it"\r\t\t\t\t\t\t\tnextCommand := commandsQueue next .\r\t\t\t\t\t\t\tarDrone commandAdapter send: nextCommand \r\t\t\t\t\t\t] repeat ] newProcess.\r\tsenderProcess name: \'Queued commands sender process\'.',			#stamp : 'CaroHernandez 6/2/2016 19:52',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '219' ],		#self : OmReference [ '220' ],		#time : DateAndTime [ '2017-09-20T16:48:02.336895-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #land,			#protocol : #api,			#sourceCode : 'land\r\t"Every 1 second sends the land command to the drone, until it\'s state goes from Flying to Landed (ARDState flyMask from 0 to 1)"\r\tarDrone connectionState ~= ARDConstant connection_CONNECTED\r\t\tifTrue: [ Transcript show: \'Drone disconnected\';cr. ^ self ]. \r\t[[ | flying |\r\t\tflying := arDrone isFlying.\r\t\tflying \r\t\t\tifTrue: [ arDrone \r\t\t\t\t\t\t\tannouncer \r\t\t\t\t\t\t \tsubscribe: DroneLanded \r\t\t\t\t\t\t  \tdo:[arDrone announcer unsubscribe: self. \r\t\t\t\t\t\t\t\t flying := false]  ].\r\t\t[ flying ] whileTrue: [ self enqueueLandCommand. \r\t\t\t\t\t\t\t \t\t (Delay forSeconds: 1) wait ] \r\t] valueWithin: 10 second onTimeout: [ Transcript show: \'Timeout on landing\' ]] fork',			#stamp : 'CaroHernandez 6/12/2016 19:45',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '220' ],		#self : OmReference [ '221' ],		#time : DateAndTime [ '2017-09-20T16:48:02.338002-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'moveFor:atSpeed:withDirection:',			#protocol : #'api-control Progressive Movements',			#sourceCode : 'moveFor: aDuration atSpeed: aSpeed withDirection: anAngle\r\t"Moves the drone progressivelly for aTimeInterval time, with maximum speed aSpeed, in the direction indicated by anAngle.\r\tArgument: \r\t\t- aDuration: Integer, in milli seconds\r\t\t- aSpeed: Float in [0, 1] representing a percentage of the max roll and pitch velocity configured for the drone\r\t\t- anAngle: Integer in [ 0, 360 ], represents the direction in wich the drone will move. Looking the drone from above, the zero is in the drone\'s nose, and increments clockwise."\r\t[[ | timeStart msecondsElapsed speed pitch roll temporalFactor |\r\t\ttimeStart := Time now asMilliSeconds.\r\t\tmsecondsElapsed := 0.\r\t\t\r\t\t(arDrone isFlying)\r\t\t\tifTrue: [ \r\t\t\t\t[[ msecondsElapsed <= aDuration ] \r\t\t\t\t\twhileTrue: [ \r\t\t\t\t\t\t\r\t\t\t\t\t\ttemporalFactor := ((msecondsElapsed * 180.0) / aDuration) degreeSin.\r\t\t\t\t\t\tspeed := aSpeed * temporalFactor.\r\t\t\t\t\t\tpitch := speed * (anAngle degreeCos) negated.\r\t\t\t\t\t\troll := speed * (anAngle degreeSin).\r\t\t\t\t\t\tarDrone pitch: pitch.\r\t\t\t\t\t\tarDrone roll: roll.\r\t\t\t\t\t\t\r\t\t\t\t\t\t"Speed starts at zero and increments progressivelly. It has its maximum value in the middle of the trayectory, and then decreases until it is zero."\r\t\t\t\t\t\tmsecondsElapsed := Time now asMilliSeconds - timeStart.\r\t\t\t\t\t\t(Delay forMilliseconds: 30) wait ]] \r\t\t\t\tensure: [arDrone stabilize]]\r\t] valueWithin: aDuration second onTimeout: [ Transcript show: \'Timeout on moving progressivelly, error\';cr ]]fork',			#stamp : 'CaroHernandez 6/3/2016 20:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '221' ],		#self : OmReference [ '222' ],		#time : DateAndTime [ '2017-09-20T16:48:02.339037-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #resume,			#protocol : #api,			#sourceCode : 'resume\r\t"Resume the processes associated to this instance."\r\tself suspendProcesses: false.\r\tsenderProcess resume.\r\tmotionCommandsSenderProcess resume.',			#stamp : 'CaroHernandez 6/2/2016 19:51',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '222' ],		#self : OmReference [ '223' ],		#time : DateAndTime [ '2017-09-20T16:48:02.34034-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'sendMoveCommand:',			#protocol : #private,			#sourceCode : 'sendMoveCommand: aMotionState\r\tself sendMoveCommandLeftRightTilt: aMotionState leftRightTilt \r\t\t\t\t\t\t\t frontBackTilt: aMotionState frontBackTilt \r\t\t\t\t\t\t\tverticalSpeed: aMotionState verticalSpeed \r\t\t\t\t\t\t   angularSpeed: aMotionState angularSpeed. ',			#stamp : 'CaroHernandez 5/25/2016 13:10',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '223' ],		#self : OmReference [ '224' ],		#time : DateAndTime [ '2017-09-20T16:48:02.342698-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'sendMoveCommandLeftRightTilt:frontBackTilt:verticalSpeed:angularSpeed:',			#protocol : #private,			#sourceCode : 'sendMoveCommandLeftRightTilt: lrTilt frontBackTilt: fbTilt verticalSpeed: verticalSpeed angularSpeed: angularSpeed\r\t"Checks the arDrone\'s motion state, and sends the apropriate command for controlling the drone\'s movements.\r\tArguments:\r\t- lrTilt (roll or phi angle) \t\r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max roll inclination set for the drone \t\t\t\t\t\t\t\t\t \t\t\t- (-) for left, (+) for right.\r\t- fbTilt (pitch or theta angle) \r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max pitch inclination set for the drone \r\t\t\t- (-) for front (drone lowers its nose), (+) for back (drone raise its nose)\r\t- verticalSpeed (gaz) \r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum vertical speed \r\t\t\t- (+) for elevating, (-) for descending.\r\t- angularSpeed \r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum angular speed \r\t\t\t- (+) for spinning right, (-) for spinning left."\r\t| moveCommand onlyZeros| \r\tonlyZeros := (lrTilt = 0) & (fbTilt = 0) & (verticalSpeed = 0) & (angularSpeed = 0).\r\tmoveCommand := ARDCommand withPrefix: \'AT*PCMD\'\r\t\t\t \t\t\t\t\t\targuments: {(onlyZeros ifTrue: [0] ifFalse: [1]).\r\t\t\t\t\t\t\t\t\t\t\t\t\tlrTilt asARDEquivalentInteger. \r\t\t\t\t\t\t\t\t\t\t\t\t\tfbTilt asARDEquivalentInteger. \r\t\t\t\t\t\t\t\t\t\t\t\t\tverticalSpeed asARDEquivalentInteger. \r\t\t\t\t\t\t\t\t\t\t\t\t\tangularSpeed asARDEquivalentInteger }.\r\tarDrone commandAdapter send: moveCommand. ',			#stamp : 'CaroHernandez 9/20/2016 19:11',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '224' ],		#self : OmReference [ '225' ],		#time : DateAndTime [ '2017-09-20T16:48:02.343997-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'sendMoveCommandOnlyIfNecessary:',			#protocol : #private,			#sourceCode : 'sendMoveCommandOnlyIfNecessary: aMotionState\r\t| motionState |\r\tmotionState := aMotionState copy.\r\t( motionState containsOnlyZeros ) \r\t\t\tifTrue: [ ( self stabilizeCommandSent ) \r\t\t\t\t\t\t\tifFalse: \r\t\t\t\t\t\t\t[ "send 3 motion commands with zeros only, to increase the chance for the drone receiving at least one of them"\r\t\t\t\t\t\t\t1 to: 3 do: [:i | self sendMoveCommand: motionState ].  \r\t\t\t\t\t\t\tself stabilizeCommandSent: true. ] ]\r\t\t\tifFalse: [ self sendMoveCommand: motionState.\r\t\t\t\t\t\t  self stabilizeCommandSent: false. ]\r\t\t\t\t\t\t\t ',			#stamp : 'CaroHernandez 7/29/2016 18:19',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '225' ],		#self : OmReference [ '226' ],		#time : DateAndTime [ '2017-09-20T16:48:02.345311-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'setConfigFor:value:',			#protocol : #api,			#sourceCode : 'setConfigFor: aParameter value: aVal\r\t| command |\r\tcommand := ARDCommand withPrefix: \'AT*CONFIG\' \r\t\t\t \t\t\t\t\t\targuments: { aParameter asString . \r\t\t\t\t\t\t\t\t\t\t\t\t\taVal asString }.\r\tself enqueueWithConfigIds: command. ',			#stamp : 'CaroHernandez 9/20/2016 20:38',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '226' ],		#self : OmReference [ '227' ],		#time : DateAndTime [ '2017-09-20T16:48:02.346899-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #stabilizeCommandSent,			#protocol : #private,			#sourceCode : 'stabilizeCommandSent\r\t^ stabilizeCommandSent ifNil: [ stabilizeCommandSent := false. ]',			#stamp : 'CaroHernandez 5/24/2016 19:09',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '227' ],		#self : OmReference [ '228' ],		#time : DateAndTime [ '2017-09-20T16:48:02.348131-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'stabilizeCommandSent:',			#protocol : #private,			#sourceCode : 'stabilizeCommandSent: aBoolean\r\tstabilizeCommandSent := aBoolean',			#stamp : 'CaroHernandez 5/24/2016 19:10',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '228' ],		#self : OmReference [ '229' ],		#time : DateAndTime [ '2017-09-20T16:48:02.349025-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #suspend,			#protocol : #api,			#sourceCode : 'suspend\r\t"Resume the processes associated to this instance."\r\tself suspendProcesses: true.\r\tcommandsQueue flushAllSuchThat: [ :cmd | (cmd isMemberOf: ARDCommand) ifFalse: [ ^ true ] .\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcmd isAStabilizeCommand not ] .\r\tlastMotionStateSent := nil.\r\r\t',			#stamp : 'CaroHernandez 6/30/2016 20:01',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '229' ],		#self : OmReference [ '230' ],		#time : DateAndTime [ '2017-09-20T16:48:02.349939-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #suspendProcesses,			#protocol : #private,			#sourceCode : 'suspendProcesses\r\r\t^ suspendProcesses',			#stamp : 'CaroHernandez 6/2/2016 19:47',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '230' ],		#self : OmReference [ '231' ],		#time : DateAndTime [ '2017-09-20T16:48:02.350745-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #'suspendProcesses:',			#protocol : #private,			#sourceCode : 'suspendProcesses: aBoolean\r\t"If this variables is true, then the sender processes must be suspended after their next cycle"\r\tsuspendProcesses := aBoolean',			#stamp : 'CaroHernandez 6/2/2016 19:47',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '231' ],		#self : OmReference [ '232' ],		#time : DateAndTime [ '2017-09-20T16:48:02.351573-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #takeOff,			#protocol : #api,			#sourceCode : 'takeOff\r\t"Every 1 second sends the take off command to the drone, until it\'s state goes from Landed to Flying (ARDState flyMask from 0 to 1)"\r\tarDrone connectionState ~= ARDConstant connection_CONNECTED\r\t\tifTrue: [ Transcript show: \'Drone disconnected\';cr. ^ self ]. \r\tself flatTrim.\r\tself arDrone stabilize.\r\t[[ | landed |\r\t\t\tlanded := arDrone isFlying not.\r\t\t\tlanded \r\t\t\t\tifTrue: [ arDrone \r\t\t\t\t\t\t\t\tannouncer \r\t\t\t\t\t\t  \t\tsubscribe: DroneTookOff \r\t\t\t\t\t\t  \t\tdo:[arDrone announcer unsubscribe: self. \r\t\t\t\t\t\t\t\t \tlanded := false]  ].\r\t\t[ landed ] whileTrue: [ self flatTrim.\r\t\t\t\t\t\t\t\t\t\tself enqueueTakeOffCommand: (arDrone isInEmergencyState).\r\t\t\t\t\t\t\t \t\t (Delay forSeconds: 2.5) wait ] \r\t] valueWithin: 8 second onTimeout: [ Transcript show: \'Timeout on taking off\';cr ]]fork',			#stamp : 'CaroHernandez 7/10/2016 18:38',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '232' ],		#self : OmReference [ '233' ],		#time : DateAndTime [ '2017-09-20T16:48:02.353521-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDCommandManager,				#isMetaSide : false			},			#name : #terminate,			#protocol : #api,			#sourceCode : 'terminate\r\t"Terminate must be called when you finish using ARDCommandManager. If you don\'t, the sender process will keep running background."\r\tsenderProcess terminate.\r\tmotionCommandsSenderProcess terminate.',			#stamp : 'CaroHernandez 3/19/2016 16:30',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '233' ],		#self : OmReference [ '234' ],		#time : DateAndTime [ '2017-09-20T16:48:02.354565-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConfigurationManager class',				#isMetaSide : true			},			#name : #'withARDrone:',			#protocol : #'instance creation',			#sourceCode : 'withARDrone: anARDrone\r\t"Returns an ARDCommandManager instance for managing sending AT commands to the drone. \r\tThe argument type must be:\r\t- anARDrone <ARDrone>"\r\t^ (self new)\r\t\tarDrone: anARDrone;\r\t\tadapterTCP: (ARDAdapterTCP withARDrone: anARDrone port: ARDConstant port_CONFIGURATION )',			#stamp : 'CaroHernandez 5/22/2016 13:50',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '234' ],		#self : OmReference [ '235' ],		#time : DateAndTime [ '2017-09-20T16:48:02.355646-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #adapterTCP,			#protocol : #accessing,			#sourceCode : 'adapterTCP\r\r\t^ adapterTCP\r\t',			#stamp : 'CaroHernandez 5/22/2016 13:48',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '235' ],		#self : OmReference [ '236' ],		#time : DateAndTime [ '2017-09-20T16:48:02.356954-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #'adapterTCP:',			#protocol : #accessing,			#sourceCode : 'adapterTCP: anARDAdapterTCP\r\r\tadapterTCP := anARDAdapterTCP\r\t',			#stamp : 'CaroHernandez 5/22/2016 13:48',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '236' ],		#self : OmReference [ '237' ],		#time : DateAndTime [ '2017-09-20T16:48:02.357913-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #arDrone,			#protocol : #accessing,			#sourceCode : 'arDrone\r\t"Returns the ARDrone instance for which this Command Manager was created"\r\t^ arDrone',			#stamp : 'CaroHernandez 5/22/2016 13:45',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '237' ],		#self : OmReference [ '238' ],		#time : DateAndTime [ '2017-09-20T16:48:02.3588-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #'arDrone:',			#protocol : #accessing,			#sourceCode : 'arDrone: anARDrone\r\t"Sets the ARDrone instance for which this Command Manager was created"\r\tarDrone := anARDrone\r\t',			#stamp : 'CaroHernandez 5/22/2016 13:45',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '238' ],		#self : OmReference [ '239' ],		#time : DateAndTime [ '2017-09-20T16:48:02.359971-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #configRetrievedAnnounced,			#protocol : #accessing,			#sourceCode : 'configRetrievedAnnounced\r\r\t^ configRetrievedAnnounced ifNil: [ configRetrievedAnnounced := false ]\r\t',			#stamp : 'CaroHernandez 6/27/2016 22:51',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '239' ],		#self : OmReference [ '240' ],		#time : DateAndTime [ '2017-09-20T16:48:02.360924-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #'configRetrievedAnnounced:',			#protocol : #accessing,			#sourceCode : 'configRetrievedAnnounced: aBoolean\r\r\tconfigRetrievedAnnounced := aBoolean\r\t',			#stamp : 'CaroHernandez 6/27/2016 22:41',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '240' ],		#self : OmReference [ '241' ],		#time : DateAndTime [ '2017-09-20T16:48:02.36184-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #configuration,			#protocol : #accessing,			#sourceCode : 'configuration\r\t"Returns the multiline configuration string received from the drone (via TCP port 5559)"\r\t^ configuration',			#stamp : 'CaroHernandez 5/22/2016 16:25',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '241' ],		#self : OmReference [ '242' ],		#time : DateAndTime [ '2017-09-20T16:48:02.363921-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #'configuration:',			#protocol : #accessing,			#sourceCode : 'configuration: aString\r\t"Sets the multiline configuration string received from the drone (via TCP port 5559)"\r\tconfiguration := aString',			#stamp : 'CaroHernandez 5/22/2016 16:25',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '242' ],		#self : OmReference [ '243' ],		#time : DateAndTime [ '2017-09-20T16:48:02.364916-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\tsuspendProcess := true.\r\tterminateProcess := false.\r\tconfiguration := \'\'.\r\ttimeLastUpdate := 0.\r\tretrieverProcess := \r\t[ [ suspendProcess ifTrue: [ Processor activeProcess suspend ].\r\t\tself retrieveConfigurationFile. \r\t\t(Delay forMilliseconds: self retrieveTimeout) wait.\r\t\t] repeat \r\t] newProcess.\r\tretrieverProcess name: \'Config retriever Process\'',			#stamp : 'CaroHernandez 9/14/2016 22:28',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '243' ],		#self : OmReference [ '244' ],		#time : DateAndTime [ '2017-09-20T16:48:02.365887-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #resume,			#protocol : #api,			#sourceCode : 'resume\r\t"Resumes all processes associated with this instance."\r\tsuspendProcess := false.\r\tadapterTCP connect.\r\tretrieverProcess resume.',			#stamp : 'CaroHernandez 9/14/2016 22:24',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '244' ],		#self : OmReference [ '245' ],		#time : DateAndTime [ '2017-09-20T16:48:02.366856-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #retrieveConfigurationFile,			#protocol : #'retrieving config file',			#sourceCode : 'retrieveConfigurationFile\r\t| received |\r\tadapterTCP isConnected ifFalse: [ adapterTCP connect ].\r\t\t\r\tself arDrone commandManager configControlMode: ARDConstant controlMode_ACK_CONTROL_MODE.\r\tself arDrone commandManager configControlMode: ARDConstant controlMode_CFG_GET_CONTROL_MODE.\r\t\t\r\t[received := adapterTCP receive asString.\r\t\t(self useFile: received toGetvalueForParameter: \'rescue:rescue\') \r\t\tifNotNil: [ \r\t\t\tconfiguration := received. \r\t\t\tself configRetrievedAnnounced ifFalse: [ \r\t\t\t\tself arDrone announcer announce: DroneConfigurationFileReceivedForTheFirstTime. \r\t\t\t\tself configRetrievedAnnounced: true \r\t\t\t\t].\r\t\t\tself arDrone announcer announce: DroneConfigurationFileReceived. \r\t\t\ttimeLastUpdate := Time now.\r\t\t\t].\r\t\t] \r\t\ton: Exception \r\t\tdo: [ :e | Transcript show: \'exception receiving config file: \' , (e asString);cr ]\r\t',			#stamp : 'CaroHernandez 9/15/2016 00:07',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '245' ],		#self : OmReference [ '246' ],		#time : DateAndTime [ '2017-09-20T16:48:02.367923-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #retrieveTimeout,			#protocol : #accessing,			#sourceCode : 'retrieveTimeout\r\t^ 500',			#stamp : 'CaroHernandez 8/21/2016 20:21',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '246' ],		#self : OmReference [ '247' ],		#time : DateAndTime [ '2017-09-20T16:48:02.369086-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #stopRetrieving,			#protocol : #api,			#sourceCode : 'stopRetrieving\r\t"Finishes the process that receives navdata."\r\tretrieverProcess terminate. \r\tadapterTCP closeAndDestroy ',			#stamp : 'CaroHernandez 7/20/2016 22:00',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '247' ],		#self : OmReference [ '248' ],		#time : DateAndTime [ '2017-09-20T16:48:02.370617-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #suspend,			#protocol : #api,			#sourceCode : 'suspend\r\t"Suspends all processes associated with this instance."\r\tsuspendProcess := true.',			#stamp : 'CaroHernandez 7/20/2016 21:44',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '248' ],		#self : OmReference [ '249' ],		#time : DateAndTime [ '2017-09-20T16:48:02.371653-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #terminate,			#protocol : #api,			#sourceCode : 'terminate\r\tself stopRetrieving ',			#stamp : 'CaroHernandez 7/20/2016 21:58',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '249' ],		#self : OmReference [ '250' ],		#time : DateAndTime [ '2017-09-20T16:48:02.372624-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #timeLastUpdate,			#protocol : #accessing,			#sourceCode : 'timeLastUpdate\r\t^ timeLastUpdate ',			#stamp : 'CaroHernandez 9/14/2016 20:05',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '250' ],		#self : OmReference [ '251' ],		#time : DateAndTime [ '2017-09-20T16:48:02.374964-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #'useFile:toGetvalueForParameter:',			#protocol : #accessing,			#sourceCode : 'useFile: aConfigString toGetvalueForParameter: aString\r\t| regex match val |\r\taConfigString ifNil: [^ nil].\r\tregex := (aString, \' = \\w+\') copyReplaceAll:\':\' with:\'\\:\'.\r\tmatch := [((regex asRegex  matchesIn: aConfigString) at: 1) asString] on:SubscriptOutOfBounds do: [ ^ nil ]. \t\r\tval := (match substrings: \'= \') at: 2.\r\tval = \'TRUE\' ifTrue: [ ^ true ].\r\tval = \'FALSE\' ifTrue: [ ^ false ].\r\t^ val.',			#stamp : 'CaroHernandez 7/22/2016 01:29',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '251' ],		#self : OmReference [ '252' ],		#time : DateAndTime [ '2017-09-20T16:48:02.376183-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConfigurationManager,				#isMetaSide : false			},			#name : #'valueForParameter:',			#protocol : #accessing,			#sourceCode : 'valueForParameter: aString\r\t| regex match val |\r\t"usar useFile...."\r\tconfiguration ifNil: [^ nil].\r\tregex := (aString, \' = \\w+\') copyReplaceAll:\':\' with:\'\\:\'.\r\tmatch := [((regex asRegex  matchesIn: configuration) at: 1) asString] on:SubscriptOutOfBounds do: [ ^ nil ]. \t\r\tval := (match substrings: \'= \') at: 2.\r\tval = \'TRUE\' ifTrue: [ ^ true ].\r\tval = \'FALSE\' ifTrue: [ ^ false ].\r\t^ val.',			#stamp : 'CaroHernandez 7/22/2016 01:29',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '252' ],		#self : OmReference [ '253' ],		#time : DateAndTime [ '2017-09-20T16:48:02.377894-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConnectionManager class',				#isMetaSide : true			},			#name : #'withARDrone:',			#protocol : #'instance creation',			#sourceCode : 'withARDrone: anARDrone\r\t"Returns an ARDConnectionManager instance for managing the connection with drone. \r\tThe argument type must be:\r\t- anARDrone <ARDrone>"\r\t^ (self new arDrone: anARDrone).\r',			#stamp : 'CaroHernandez 5/1/2016 22:24',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '253' ],		#self : OmReference [ '254' ],		#time : DateAndTime [ '2017-09-20T16:48:02.379333-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #'announce:',			#protocol : #private,			#sourceCode : 'announce: anAnnouncement\r\tarDrone announcer announce: anAnnouncement',			#stamp : 'CaroHernandez 6/30/2016 22:17',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '254' ],		#self : OmReference [ '255' ],		#time : DateAndTime [ '2017-09-20T16:48:02.380893-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #arDrone,			#protocol : #accessing,			#sourceCode : 'arDrone\r\t"Returns the ARDrone instance for which this Connection Manager was created"\r\t^ arDrone',			#stamp : 'CaroHernandez 4/29/2016 20:58',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '255' ],		#self : OmReference [ '256' ],		#time : DateAndTime [ '2017-09-20T16:48:02.381923-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #'arDrone:',			#protocol : #accessing,			#sourceCode : 'arDrone: anARDrone\r\t"Sets the ARDrone instance for which this Connection Manager was created"\r\tarDrone := anARDrone.\r\tself subscribe.',			#stamp : 'CaroHernandez 5/1/2016 22:25',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '256' ],		#self : OmReference [ '257' ],		#time : DateAndTime [ '2017-09-20T16:48:02.382895-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #authenticate,			#protocol : #api,			#sourceCode : 'authenticate\r\r\t"Authenticates to the drone\'s firmware, sending a message to the drone and waiting for a specific response."\r\t| authAdapter  received success |\r\tself halt: \'Deprecated\'.\r\t\r\tauthAdapter := ARDAdapterUDP withARDrone: arDrone\r\t\t\t\t\t\t\t\t\t\tport: ARDConstant port_AUTH\r\t\t\t\t\t\t\t\t\t\tisMulticast: false\r\t\t\t\t\t\t\t\t\t\tdelayInterval: 30.\r\tauthAdapter send: ARDCommand authMessage.\r\t[ received := authAdapter \r\t\t\t\t\t\treceiveWithin: arDrone authTimeout \r\t\t\t\t\t\tonTimeout: [ DroneConnectionTimeout signal ].\r\t] on: Exception\r\t  do: [ :ex | \r\t\t\t\tarDrone excecuteHandlerFor: ex.\r\t\t\t\t^ false \r\t  ].\r\tsuccess := (received asString copyFrom: 1 to: 23) = ARDCommand authResponse.\r\tsuccess ifFalse: [ DroneAuthenticationFailed signal ].\r\t\r\t^ success\r\t\t\t\t',			#stamp : 'CaroHernandez 8/21/2016 23:07',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '257' ],		#self : OmReference [ '258' ],		#time : DateAndTime [ '2017-09-20T16:48:02.383882-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #collectGarbage,			#protocol : #private,			#sourceCode : 'collectGarbage\r\tgcTimer := \r\tself doIfItsTime: [ Smalltalk garbageCollect. ]\r\tmustBeDoneEvery: 10000 \r\tlastTimeDone: gcTimer.',			#stamp : 'Anonymous 7/10/2016 21:35',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '258' ],		#self : OmReference [ '259' ],		#time : DateAndTime [ '2017-09-20T16:48:02.384857-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #connectionState,			#protocol : #accessing,			#sourceCode : 'connectionState\r\t\r\t^ connectionState',			#stamp : 'CaroHernandez 6/12/2016 19:40',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '259' ],		#self : OmReference [ '260' ],		#time : DateAndTime [ '2017-09-20T16:48:02.386848-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #'doIfItsTime:mustBeDoneEvery:lastTimeDone:',			#protocol : #private,			#sourceCode : 'doIfItsTime: aBlock mustBeDoneEvery: anInterval lastTimeDone: lastTime\r\t"Excecutes aBlock every anInterval seconds, according to the timer lastTime, if the block is excecuted it returns the updated value of lastTime, if not, it returns the original lastTime value."\r\t| newLastTime |\r\tnewLastTime := lastTime.\r\t((Time now asMilliSeconds - lastTime) >= anInterval) \r\t\t\tifTrue: [ \r\t\t\t\taBlock value . \r\t\t\t\tnewLastTime := Time now asMilliSeconds ].\r\t^ newLastTime',			#stamp : 'CaroHernandez 6/27/2016 21:27',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '260' ],		#self : OmReference [ '261' ],		#time : DateAndTime [ '2017-09-20T16:48:02.387804-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #initialize,			#protocol : #api,			#sourceCode : 'initialize\r\tsuper initialize.\r\tconnectionState := ARDConstant connection_DISCONNECTED.\r',			#stamp : 'CaroHernandez 6/27/2016 23:19',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '261' ],		#self : OmReference [ '262' ],		#time : DateAndTime [ '2017-09-20T16:48:02.388718-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #initializeWatchdogProcess,			#protocol : #private,			#sourceCode : 'initializeWatchdogProcess\r\r\tgcTimer := Time now asMilliSeconds.\r\twatchdogProcess ifNotNil: [ watchdogProcess terminate ]. \r\twatchdogProcess := \r\t[[ self sendWatchDogCommand .\r\t\ttimer := timer - self watchdogDelay.\r\t\t( timer <= 0 ) \r\t\tifTrue: [ \r\t\t\tself reconnect \r\t\t\tifFalse: [ self announce: DroneConnectionStop ]].\r\t\t"self collectGarbage ." \r\t\t\r\t\t(Delay forSeconds: self watchdogDelay) wait .\r\t] repeat ] fork.\r\t\r\twatchdogProcess name: \'Watchdog Process\'.\r\t^ watchdogProcess ',			#stamp : 'CaroHernandez 8/24/2016 18:55',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '262' ],		#self : OmReference [ '263' ],		#time : DateAndTime [ '2017-09-20T16:48:02.389874-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #reconnect,			#protocol : #private,			#sourceCode : 'reconnect\r\t| announced connected startTime |\r\t"announced variable used for announcing and signal exception only once."\r\tannounced := false.\r\tconnected := false.\r\tstartTime := Time now asSeconds.\r\t[ connected ] \r\t\t\twhileFalse: [\r\t\t\t\t( announced )\r\t\t\t\tifFalse: [  arDrone announcer announce: DroneConnecting.\r\t\t\t\t\t\t\t\tannounced := true.\r\t\t\t\t\t\t\t\tarDrone signalAndHandle: DroneConnectionInterrupted ].\r\t\t\t\tTranscript show: \'connecting\'; cr.\r\t\t\t\t[ connected := self startReceiving ] \r\t\t\t\ton: PrimitiveFailed  \r\t  \t\t\tdo: [ :ex |(Delay forSeconds: 0.5) wait. ].\r\t\t\t\t"if timeout happens"\r\t\t\t\t(Time now asSeconds - startTime > (self reconnectTimeout))\r\t\t\t\t\tifTrue: [ arDrone signalAndHandle: DroneConnectionTimeout.\r\t\t\t\t\t\t\t\t self announce: DroneConnectionStop.\r\t\t\t\t\t\t\t\t ^ false. ]\r\t\t\t].\r\t"if the excecution reaches here, the connection has been established"\r\ttimer  := self watchdogTimeout.\r\tTranscript show: \'SIGNAL connection start\';cr.\r\tself announce: DroneConnectionStart.\r\t^ true',			#stamp : 'CaroHernandez 8/21/2016 22:57',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '263' ],		#self : OmReference [ '264' ],		#time : DateAndTime [ '2017-09-20T16:48:02.391169-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #reconnectTimeout,			#protocol : #accessing,			#sourceCode : 'reconnectTimeout\r\t"Maximum time (in seconds) for trying to reconnect before signaling the DroneConnectionTimeout exception"\r\t^ reconnectTimeout ifNil: [ reconnectTimeout := 5 ]',			#stamp : 'CaroHernandez 6/30/2016 22:11',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '264' ],		#self : OmReference [ '265' ],		#time : DateAndTime [ '2017-09-20T16:48:02.392335-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #'reconnectTimeout:',			#protocol : #accessing,			#sourceCode : 'reconnectTimeout: anInt\r\t"Maximum time (in seconds) for trying to reconnect before signaling the DroneConnectionTimeout exception"\r\treconnectTimeout := anInt',			#stamp : 'CaroHernandez 5/19/2016 23:52',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '265' ],		#self : OmReference [ '266' ],		#time : DateAndTime [ '2017-09-20T16:48:02.393593-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #sendKeepAliveMessage,			#protocol : #sending,			#sourceCode : 'sendKeepAliveMessage\r\t"Send tickle bytes to navdataSocket"\r\t(arDrone navdataAdapter) send: ARDCommand navdataKeepAliveMessage. \t \r\r\t\r\t',			#stamp : 'CaroHernandez 7/10/2016 21:37',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '266' ],		#self : OmReference [ '267' ],		#time : DateAndTime [ '2017-09-20T16:48:02.394824-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #sendWatchDogCommand,			#protocol : #private,			#sourceCode : 'sendWatchDogCommand\r\t"Transcript show: \'Watchdog reset!\';cr."\r\t(arDrone commandManager) enqueue: (ARDCommand withPrefix: \'AT*COMWDG\' arguments: { } )',			#stamp : 'CaroHernandez 6/30/2016 22:24',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '267' ],		#self : OmReference [ '268' ],		#time : DateAndTime [ '2017-09-20T16:48:02.395878-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #startReceiving,			#protocol : #api,			#sourceCode : 'startReceiving\r\t| dg |\r\tTranscript show: \'start receiving\';cr.\r\t"send first message to start receiving navdata"\r\tself sendKeepAliveMessage. \r\tdg := arDrone navdataManager receive .\r\tdg ifNil: [ ^ false ].\r\t(dg containsData) ifFalse: [^ false ].\r\tarDrone resetSequenceNumber .\r\t\r\t^ true.',			#stamp : 'CaroHernandez 9/14/2016 21:21',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '268' ],		#self : OmReference [ '269' ],		#time : DateAndTime [ '2017-09-20T16:48:02.397955-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #startWatchdog,			#protocol : #private,			#sourceCode : 'startWatchdog\r\r\ttimer := 0. "this is 0 so the process tries to connect inmediatly"\r\tself initializeWatchdogProcess',			#stamp : 'CaroHernandez 6/27/2016 23:20',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '269' ],		#self : OmReference [ '270' ],		#time : DateAndTime [ '2017-09-20T16:48:02.398948-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #stopWatchdog,			#protocol : #private,			#sourceCode : 'stopWatchdog\r\t\r\twatchdogProcess ifNotNil: [ watchdogProcess terminate. ]\r\t\r\t',			#stamp : 'CaroHernandez 6/27/2016 23:20',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '270' ],		#self : OmReference [ '271' ],		#time : DateAndTime [ '2017-09-20T16:48:02.39995-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #subscribe,			#protocol : #private,			#sourceCode : 'subscribe\r\t"subscribes to the necessary announcements."\r\t| firstConnection |\r\tfirstConnection := true.\r\t\r\tarDrone announcer \r\t\tsubscribe: DroneNavdataPacketReceived \r\t\tdo: [ timer := self watchdogTimeout. ].\r\t\t\r\tarDrone announcer \r\t\tsubscribe: DroneConnectionStart \r\t\tdo: [ connectionState := ARDConstant connection_CONNECTED. \r\t\t\t\tarDrone commandManager resume.\r\t\t\t\tarDrone navdataManager resume.\r\t\t\t\tarDrone configurationManager configRetrievedAnnounced: false.\r\t\t\t\tarDrone configurationManager resume.\r\t\t\t\tfirstConnection \r\t\t\t\tifTrue: [ \r\t\t\t\t\tTranscript show: \'Sending config\';cr.\r\t\t\t\t\tfirstConnection := false.\r\t\t\t\t\t(arDrone commandManager configNavdataDefaultOptions) \r\t\t\t\t\tifFalse: [ \r\t\t\t\t\t\tself announce: DroneConnectionStop.\r\t\t\t\t\t\tDroneConfigurationAttemptFailed signal. ]]].\r\t\r\tarDrone announcer \r\t\tsubscribe: DroneConnectionStop  \r\t\tdo: [ connectionState := ARDConstant connection_DISCONNECTED. \r\t\t\t\t"Transcript show: \'suspend processes\';cr."\r\t\t\t\tself terminate.\r\t\t\t\tarDrone commandManager suspend.\r\t\t\t\tarDrone navdataManager suspend. \r\t\t\t\tarDrone configurationManager suspend.].\r\t\r\tarDrone announcer \r\t\tsubscribe: DroneConnecting   \r\t\tdo: [ connectionState := ARDConstant connection_CONNECTING.\r\t\t\t\tTranscript show: \'suspend processes while reconnecting\';cr.\r\t\t\t\tarDrone commandManager suspend.\r\t\t\t\tarDrone navdataManager suspend. \r\t\t\t\tarDrone configurationManager suspend.].\r\t',			#stamp : 'CaroHernandez 7/20/2016 21:56',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '271' ],		#self : OmReference [ '272' ],		#time : DateAndTime [ '2017-09-20T16:48:02.400961-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #terminate,			#protocol : #api,			#sourceCode : 'terminate\r\tself stopWatchdog.\r\tself unsubscribe. \r',			#stamp : 'CaroHernandez 7/20/2016 21:18',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '272' ],		#self : OmReference [ '273' ],		#time : DateAndTime [ '2017-09-20T16:48:02.401895-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #timer,			#protocol : #accessing,			#sourceCode : 'timer \r\t^ timer',			#stamp : 'CaroHernandez 5/20/2016 20:37',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '273' ],		#self : OmReference [ '274' ],		#time : DateAndTime [ '2017-09-20T16:48:02.402779-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #'timer:',			#protocol : #accessing,			#sourceCode : 'timer: anInt \r\ttimer := anInt',			#stamp : 'CaroHernandez 5/20/2016 20:37',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '274' ],		#self : OmReference [ '275' ],		#time : DateAndTime [ '2017-09-20T16:48:02.403663-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #unsubscribe,			#protocol : #private,			#sourceCode : 'unsubscribe\r\t"subscribes to the NavdataPacketReceived announcement."\r\tarDrone announcer unsubscribe: DroneNavdataPacketReceived.\r\tarDrone announcer unsubscribe: DroneConnectionStart. \r\tarDrone announcer unsubscribe: DroneConnectionStop.\r\tarDrone announcer unsubscribe: DroneConnecting.\t',			#stamp : 'CaroHernandez 5/23/2016 17:51',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '275' ],		#self : OmReference [ '276' ],		#time : DateAndTime [ '2017-09-20T16:48:02.404538-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #watchdogDelay,			#protocol : #accessing,			#sourceCode : 'watchdogDelay\r\t"Delay for every watchdog cycle"\r\t^ 0.1',			#stamp : 'CaroHernandez 6/28/2016 03:03',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '276' ],		#self : OmReference [ '277' ],		#time : DateAndTime [ '2017-09-20T16:48:02.405424-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDConnectionManager,				#isMetaSide : false			},			#name : #watchdogTimeout,			#protocol : #accessing,			#sourceCode : 'watchdogTimeout\r\t"Maximum time (in seconds) passed between receiving two navdata packets, before considering the connection lost and try to reconnect"\r\t^ 2',			#stamp : 'CaroHernandez 5/24/2016 20:02',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '277' ],		#self : OmReference [ '278' ],		#time : DateAndTime [ '2017-09-20T16:48:02.407939-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #address_DRONE,			#protocol : #address,			#sourceCode : 'address_DRONE\r\t"Returns the drone\'s IP address (set by ar drone\'s firmware)"\r\t^ \'192.168.1.1\'',			#stamp : 'CaroHernandez 5/8/2016 19:18',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '278' ],		#self : OmReference [ '279' ],		#time : DateAndTime [ '2017-09-20T16:48:02.409152-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #connection_CONNECTED,			#protocol : #'connection states',			#sourceCode : 'connection_CONNECTED\r\t^ 1',			#stamp : 'CaroHernandez 5/19/2016 20:28',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '279' ],		#self : OmReference [ '280' ],		#time : DateAndTime [ '2017-09-20T16:48:02.410487-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #connection_CONNECTING,			#protocol : #'connection states',			#sourceCode : 'connection_CONNECTING\r\t^ 2',			#stamp : 'CaroHernandez 5/19/2016 21:50',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '280' ],		#self : OmReference [ '281' ],		#time : DateAndTime [ '2017-09-20T16:48:02.411915-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #connection_DISCONNECTED,			#protocol : #'connection states',			#sourceCode : 'connection_DISCONNECTED\r\t^ 3',			#stamp : 'CaroHernandez 5/19/2016 20:28',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '281' ],		#self : OmReference [ '282' ],		#time : DateAndTime [ '2017-09-20T16:48:02.414262-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #controlMode_ACK_CONTROL_MODE,			#protocol : #'control modes',			#sourceCode : 'controlMode_ACK_CONTROL_MODE\r\t"Used as argument in AT*CTRL, tells the drone to Reset command mask in navdata"\r\t^ 5',			#stamp : 'CaroHernandez 7/19/2016 22:46',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '282' ],		#self : OmReference [ '283' ],		#time : DateAndTime [ '2017-09-20T16:48:02.415587-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #controlMode_CFG_GET_CONTROL_MODE,			#protocol : #'control modes',			#sourceCode : 'controlMode_CFG_GET_CONTROL_MODE\r\t"Used as argument in AT*CTRL, tells the drone to send active configuration file to a client through the \'control\' socket UDP 5559"\r\t^ 4',			#stamp : 'CaroHernandez 7/19/2016 22:45',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '283' ],		#self : OmReference [ '284' ],		#time : DateAndTime [ '2017-09-20T16:48:02.416654-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ctrlStates,			#protocol : #'ctrl states',			#sourceCode : 'ctrlStates\r\t^{\'DEFAULT\'.\'INIT\'.\'LANDED\'.\'FLYING\'.\'HOVERING\'.\'TEST\'.\'FLYING_1\'.\'TAKING_OFF\'.\'LOOPING\'.\'LANDING\'}',			#stamp : 'CaroHernandez 9/20/2016 16:56',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '284' ],		#self : OmReference [ '285' ],		#time : DateAndTime [ '2017-09-20T16:48:02.417706-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #detectType_MULTIPLE_DETECTION_MODE,			#protocol : #'detection types',			#sourceCode : 'detectType_MULTIPLE_DETECTION_MODE\r\t\r\t^ 10',			#stamp : 'CaroHernandez 7/23/2016 17:01',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '285' ],		#self : OmReference [ '286' ],		#time : DateAndTime [ '2017-09-20T16:48:02.41872-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #detectType_NONE,			#protocol : #'detection types',			#sourceCode : 'detectType_NONE\r\r\t^ 3',			#stamp : 'CaroHernandez 6/3/2016 16:24',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '286' ],		#self : OmReference [ '287' ],		#time : DateAndTime [ '2017-09-20T16:48:02.42075-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #detectType_ORIENTED_COCARDE_BW,			#protocol : #'detection types',			#sourceCode : 'detectType_ORIENTED_COCARDE_BW\r\r\t^ 12',			#stamp : 'CaroHernandez 6/20/2016 05:42',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '287' ],		#self : OmReference [ '288' ],		#time : DateAndTime [ '2017-09-20T16:48:02.421802-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #detectType_VISION_V2,			#protocol : #'detection types',			#sourceCode : 'detectType_VISION_V2\r\r\t^ 13',			#stamp : 'CaroHernandez 6/3/2016 21:25',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '288' ],		#self : OmReference [ '289' ],		#time : DateAndTime [ '2017-09-20T16:48:02.422791-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #detectedTag_OR_IN_CV,			#protocol : #'detected tag',			#sourceCode : 'detectedTag_OR_IN_CV\r\t"Tag Oriented roundel detected in vertical camera"\r\t^ 2',			#stamp : 'CaroHernandez 7/25/2016 23:05',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '289' ],		#self : OmReference [ '290' ],		#time : DateAndTime [ '2017-09-20T16:48:02.423777-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #detectedTag_SH_IN_CH,			#protocol : #'detected tag',			#sourceCode : 'detectedTag_SH_IN_CH\r\t"Tag Shell detected in horizontal camera"\r\t^ 1',			#stamp : 'CaroHernandez 7/25/2016 23:06',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '290' ],		#self : OmReference [ '291' ],		#time : DateAndTime [ '2017-09-20T16:48:02.424783-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #detectionColor_ORANGE_BLUE,			#protocol : #'detection colors',			#sourceCode : 'detectionColor_ORANGE_BLUE\r\t^ 3',			#stamp : 'CaroHernandez 5/12/2016 17:55',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '291' ],		#self : OmReference [ '292' ],		#time : DateAndTime [ '2017-09-20T16:48:02.426217-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #detectionColor_ORANGE_GREEN,			#protocol : #'detection colors',			#sourceCode : 'detectionColor_ORANGE_GREEN\r\t^ 1',			#stamp : 'CaroHernandez 5/12/2016 17:55',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '292' ],		#self : OmReference [ '293' ],		#time : DateAndTime [ '2017-09-20T16:48:02.427377-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #detectionColor_ORANGE_YELLOW,			#protocol : #'detection colors',			#sourceCode : 'detectionColor_ORANGE_YELLOW\r\t^ 2',			#stamp : 'CaroHernandez 5/12/2016 17:55',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '293' ],		#self : OmReference [ '294' ],		#time : DateAndTime [ '2017-09-20T16:48:02.428433-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_DOUBLE_PHI_THETA_MIXED,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_DOUBLE_PHI_THETA_MIXED\r\t^ 15',			#stamp : 'CaroHernandez 5/23/2016 21:35',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '294' ],		#self : OmReference [ '295' ],		#time : DateAndTime [ '2017-09-20T16:48:02.429535-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_FLIP_AHEAD,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_FLIP_AHEAD\r\t^ 16',			#stamp : 'CaroHernandez 5/23/2016 21:35',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '295' ],		#self : OmReference [ '296' ],		#time : DateAndTime [ '2017-09-20T16:48:02.431519-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_FLIP_BEHIND,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_FLIP_BEHIND\r\t^ 17',			#stamp : 'CaroHernandez 5/23/2016 21:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '296' ],		#self : OmReference [ '297' ],		#time : DateAndTime [ '2017-09-20T16:48:02.4325-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_FLIP_LEFT,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_FLIP_LEFT\r\t^ 18',			#stamp : 'CaroHernandez 5/23/2016 21:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '297' ],		#self : OmReference [ '298' ],		#time : DateAndTime [ '2017-09-20T16:48:02.433512-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_FLIP_RIGHT,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_FLIP_RIGHT\r\t^ 19',			#stamp : 'CaroHernandez 5/23/2016 21:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '298' ],		#self : OmReference [ '299' ],		#time : DateAndTime [ '2017-09-20T16:48:02.434486-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_PHI_30_DEG,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_PHI_30_DEG\r\t^ 1',			#stamp : 'CaroHernandez 5/23/2016 21:33',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '299' ],		#self : OmReference [ '300' ],		#time : DateAndTime [ '2017-09-20T16:48:02.435458-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_PHI_DANCE,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_PHI_DANCE\r\t^ 10',			#stamp : 'CaroHernandez 5/23/2016 21:34',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '300' ],		#self : OmReference [ '301' ],		#time : DateAndTime [ '2017-09-20T16:48:02.436416-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_PHI_M30_DEG,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_PHI_M30_DEG\r\t^ 0',			#stamp : 'CaroHernandez 5/23/2016 21:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '301' ],		#self : OmReference [ '302' ],		#time : DateAndTime [ '2017-09-20T16:48:02.437364-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_PHI_THETA_MIXED,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_PHI_THETA_MIXED\r\t^ 14',			#stamp : 'CaroHernandez 5/23/2016 21:35',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '302' ],		#self : OmReference [ '303' ],		#time : DateAndTime [ '2017-09-20T16:48:02.438322-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_THETA_20DEG_YAW_200DEG,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_THETA_20DEG_YAW_200DEG\r\t^ 4',			#stamp : 'CaroHernandez 5/23/2016 21:33',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '303' ],		#self : OmReference [ '304' ],		#time : DateAndTime [ '2017-09-20T16:48:02.439377-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_THETA_20DEG_YAW_M200DEG,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_THETA_20DEG_YAW_M200DEG\r\t^ 5',			#stamp : 'CaroHernandez 5/23/2016 21:33',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '304' ],		#self : OmReference [ '305' ],		#time : DateAndTime [ '2017-09-20T16:48:02.440689-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_THETA_30_DEG,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_THETA_30_DEG\r\t^ 3',			#stamp : 'CaroHernandez 5/23/2016 21:33',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '305' ],		#self : OmReference [ '306' ],		#time : DateAndTime [ '2017-09-20T16:48:02.442908-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_THETA_DANCE,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_THETA_DANCE\r\t^ 11',			#stamp : 'CaroHernandez 5/23/2016 21:34',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '306' ],		#self : OmReference [ '307' ],		#time : DateAndTime [ '2017-09-20T16:48:02.444293-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_THETA_M30_DEG,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_THETA_M30_DEG\r\t^ 2',			#stamp : 'CaroHernandez 5/23/2016 21:33',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '307' ],		#self : OmReference [ '308' ],		#time : DateAndTime [ '2017-09-20T16:48:02.445652-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_TURNAROUND,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_TURNAROUND\r\t^ 6',			#stamp : 'CaroHernandez 5/23/2016 21:34',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '308' ],		#self : OmReference [ '309' ],		#time : DateAndTime [ '2017-09-20T16:48:02.447318-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_TURNAROUND_GODOWN,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_TURNAROUND_GODOWN\r\t^ 7',			#stamp : 'CaroHernandez 5/23/2016 21:34',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '309' ],		#self : OmReference [ '310' ],		#time : DateAndTime [ '2017-09-20T16:48:02.448509-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_VZ_DANCE,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_VZ_DANCE\r\t^ 12',			#stamp : 'CaroHernandez 5/23/2016 21:34',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '310' ],		#self : OmReference [ '311' ],		#time : DateAndTime [ '2017-09-20T16:48:02.449684-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_WAVE,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_WAVE\r\t^ 13',			#stamp : 'CaroHernandez 5/23/2016 21:35',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '311' ],		#self : OmReference [ '312' ],		#time : DateAndTime [ '2017-09-20T16:48:02.450762-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_YAW_DANCE,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_YAW_DANCE\r\t^ 9',			#stamp : 'CaroHernandez 5/23/2016 21:34',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '312' ],		#self : OmReference [ '313' ],		#time : DateAndTime [ '2017-09-20T16:48:02.451806-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flightAnimation_YAW_SHAKE,			#protocol : #'flight animations',			#sourceCode : 'flightAnimation_YAW_SHAKE\r\t^ 8',			#stamp : 'CaroHernandez 5/23/2016 21:34',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '313' ],		#self : OmReference [ '314' ],		#time : DateAndTime [ '2017-09-20T16:48:02.452798-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flyingMode_FREE_FLIGHT,			#protocol : #'flying modes',			#sourceCode : 'flyingMode_FREE_FLIGHT\r\t"Flying mode for using in ARCommand >> configFlyingMode"\r\t^ 0 ',			#stamp : 'CaroHernandez 5/22/2016 11:50',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '314' ],		#self : OmReference [ '315' ],		#time : DateAndTime [ '2017-09-20T16:48:02.45483-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flyingMode_HOVER_ON_TOP_OF_ORIENTED_ROUNDEL,			#protocol : #'flying modes',			#sourceCode : 'flyingMode_HOVER_ON_TOP_OF_ORIENTED_ROUNDEL\r\t"Flying mode for using in ARCommand >> configFlyingMode"\r\t^ 1 << 1',			#stamp : 'CaroHernandez 5/22/2016 11:49',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '315' ],		#self : OmReference [ '316' ],		#time : DateAndTime [ '2017-09-20T16:48:02.455975-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #flyingMode_HOVER_ON_TOP_OF_ROUNDEL,			#protocol : #'flying modes',			#sourceCode : 'flyingMode_HOVER_ON_TOP_OF_ROUNDEL\r\t"Flying mode for using in ARCommand >> configFlyingMode"\r\t^ 1 << 0',			#stamp : 'CaroHernandez 5/22/2016 11:50',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '316' ],		#self : OmReference [ '317' ],		#time : DateAndTime [ '2017-09-20T16:48:02.457239-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_BLANK,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_BLANK\r\t\r\t^ 10',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '317' ],		#self : OmReference [ '318' ],		#time : DateAndTime [ '2017-09-20T16:48:02.458323-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_BLINK_GREEN,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_BLINK_GREEN\r\t\r\t^ 1',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '318' ],		#self : OmReference [ '319' ],		#time : DateAndTime [ '2017-09-20T16:48:02.459339-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_BLINK_GREEN_RED,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_BLINK_GREEN_RED\r\t\r\t^ 0',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '319' ],		#self : OmReference [ '320' ],		#time : DateAndTime [ '2017-09-20T16:48:02.460403-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_BLINK_ORANGE,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_BLINK_ORANGE\r\t\r\t^ 3',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '320' ],		#self : OmReference [ '321' ],		#time : DateAndTime [ '2017-09-20T16:48:02.461407-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_BLINK_RED,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_BLINK_RED\r\t\r\t^ 2',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '321' ],		#self : OmReference [ '322' ],		#time : DateAndTime [ '2017-09-20T16:48:02.462467-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_BLINK_STANDARD,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_BLINK_STANDARD\r\t\r\t^ 20',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '322' ],		#self : OmReference [ '323' ],		#time : DateAndTime [ '2017-09-20T16:48:02.463445-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_DOUBLE_MISSILE,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_DOUBLE_MISSILE\r\t\r\t^ 13',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '323' ],		#self : OmReference [ '324' ],		#time : DateAndTime [ '2017-09-20T16:48:02.465424-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_FIRE,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_FIRE\r\t\r\t^ 5',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '324' ],		#self : OmReference [ '325' ],		#time : DateAndTime [ '2017-09-20T16:48:02.466478-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_FRONT_LEFT_GREEN_OTHERS_RED,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_FRONT_LEFT_GREEN_OTHERS_RED\r\t\r\t^ 14',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '325' ],		#self : OmReference [ '326' ],		#time : DateAndTime [ '2017-09-20T16:48:02.467461-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_FRONT_RIGHT_GREEN_OTHERS_RED,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_FRONT_RIGHT_GREEN_OTHERS_RED\r\t\r\t^ 15',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '326' ],		#self : OmReference [ '327' ],		#time : DateAndTime [ '2017-09-20T16:48:02.46847-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_GREEN,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_GREEN\r\t\r\t^ 8',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '327' ],		#self : OmReference [ '328' ],		#time : DateAndTime [ '2017-09-20T16:48:02.469539-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_LEFT_GREEN_RIGHT_RED,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_LEFT_GREEN_RIGHT_RED\r\t\r\t^ 18',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '328' ],		#self : OmReference [ '329' ],		#time : DateAndTime [ '2017-09-20T16:48:02.470524-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_LEFT_MISSILE,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_LEFT_MISSILE\r\t\r\t^ 12',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '329' ],		#self : OmReference [ '330' ],		#time : DateAndTime [ '2017-09-20T16:48:02.471515-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_LEFT_RED_RIGHT_GREEN,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_LEFT_RED_RIGHT_GREEN\r\t\r\t^ 19',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '330' ],		#self : OmReference [ '331' ],		#time : DateAndTime [ '2017-09-20T16:48:02.472528-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_READ_LEFT_GREEN_OTHERS_RED,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_READ_LEFT_GREEN_OTHERS_RED\r\t\r\t^ 17',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '331' ],		#self : OmReference [ '332' ],		#time : DateAndTime [ '2017-09-20T16:48:02.473502-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_READ_RIGHT_GREEN_OTHERS_RED,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_READ_RIGHT_GREEN_OTHERS_RED\r\t\r\t^ 16',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '332' ],		#self : OmReference [ '333' ],		#time : DateAndTime [ '2017-09-20T16:48:02.47608-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_RED,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_RED\r\t\r\t^ 7',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '333' ],		#self : OmReference [ '334' ],		#time : DateAndTime [ '2017-09-20T16:48:02.477511-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_RED_SNAKE,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_RED_SNAKE\r\t\r\t^ 9',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '334' ],		#self : OmReference [ '335' ],		#time : DateAndTime [ '2017-09-20T16:48:02.479069-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_RIGHT_MISSILE,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_RIGHT_MISSILE\r\t\r\t^ 11',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '335' ],		#self : OmReference [ '336' ],		#time : DateAndTime [ '2017-09-20T16:48:02.480605-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_SNAKE_GREEN_RED,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_SNAKE_GREEN_RED\r\t\r\t^ 4',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '336' ],		#self : OmReference [ '337' ],		#time : DateAndTime [ '2017-09-20T16:48:02.481627-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #ledAnimation_STANDARD,			#protocol : #'led animations',			#sourceCode : 'ledAnimation_STANDARD\r\t\r\t^ 6',			#stamp : 'CaroHernandez 5/8/2016 02:32',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '337' ],		#self : OmReference [ '338' ],		#time : DateAndTime [ '2017-09-20T16:48:02.482499-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #option_DEMO,			#protocol : #'navdata options',			#sourceCode : 'option_DEMO\r\r\t^ 0',			#stamp : 'CaroHernandez 6/30/2016 18:49',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '338' ],		#self : OmReference [ '339' ],		#time : DateAndTime [ '2017-09-20T16:48:02.483385-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #option_VISION_DETECT,			#protocol : #'navdata options',			#sourceCode : 'option_VISION_DETECT\r\r\t^ 16',			#stamp : 'CaroHernandez 5/8/2016 02:37',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '339' ],		#self : OmReference [ '340' ],		#time : DateAndTime [ '2017-09-20T16:48:02.484239-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #port_AUTH,			#protocol : #ports,			#sourceCode : 'port_AUTH\r\t"Returns the port used for authenticating to the drone (set by ar drone\'s firmware)"\r\t^ 5552',			#stamp : 'CaroHernandez 5/8/2016 19:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '340' ],		#self : OmReference [ '341' ],		#time : DateAndTime [ '2017-09-20T16:48:02.485124-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #port_COMMAND,			#protocol : #ports,			#sourceCode : 'port_COMMAND \r\t"Returns the port used by the ar drone to receive AT commands (set by ar drone\'s firmware)"\r\t^ 5556',			#stamp : 'CaroHernandez 5/8/2016 19:15',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '341' ],		#self : OmReference [ '342' ],		#time : DateAndTime [ '2017-09-20T16:48:02.487378-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #port_CONFIGURATION,			#protocol : #ports,			#sourceCode : 'port_CONFIGURATION\r\t"Returns the port used by the ar drone to send the configuration file (set by ar drone\'s firmware)"\r\t^ 5559',			#stamp : 'CaroHernandez 5/22/2016 13:49',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '342' ],		#self : OmReference [ '343' ],		#time : DateAndTime [ '2017-09-20T16:48:02.488519-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #port_NAVDATA,			#protocol : #ports,			#sourceCode : 'port_NAVDATA\r\t"Returns the port used by the ar drone to send navdata (set by ar drone\'s firmware)"\r\t^ 5554',			#stamp : 'CaroHernandez 5/8/2016 19:15',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '343' ],		#self : OmReference [ '344' ],		#time : DateAndTime [ '2017-09-20T16:48:02.489705-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #tagType_BLACK_ROUNDEL,			#protocol : #'tag type',			#sourceCode : 'tagType_BLACK_ROUNDEL\r\t\r\t^ 1<<7',			#stamp : 'CaroHernandez 6/28/2016 03:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '344' ],		#self : OmReference [ '345' ],		#time : DateAndTime [ '2017-09-20T16:48:02.490774-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #tagType_NONE,			#protocol : #'tag type',			#sourceCode : 'tagType_NONE\r\t\r\t^ 0',			#stamp : 'CaroHernandez 5/8/2016 02:39',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '345' ],		#self : OmReference [ '346' ],		#time : DateAndTime [ '2017-09-20T16:48:02.491821-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #tagType_SHELL_TAG_V2,			#protocol : #'tag type',			#sourceCode : 'tagType_SHELL_TAG_V2\r\t\r\t^ 1<<5',			#stamp : 'CaroHernandez 6/3/2016 15:49',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '346' ],		#self : OmReference [ '347' ],		#time : DateAndTime [ '2017-09-20T16:48:02.492853-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #videoChannel_ZAP_CHANNEL_HORI,			#protocol : #'video channels',			#sourceCode : 'videoChannel_ZAP_CHANNEL_HORI\r\t^ 0',			#stamp : 'CaroHernandez 5/9/2016 02:45',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '347' ],		#self : OmReference [ '348' ],		#time : DateAndTime [ '2017-09-20T16:48:02.494002-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #videoChannel_ZAP_CHANNEL_VERT,			#protocol : #'video channels',			#sourceCode : 'videoChannel_ZAP_CHANNEL_VERT\r\t^ 1',			#stamp : 'CaroHernandez 5/9/2016 02:56',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '348' ],		#self : OmReference [ '349' ],		#time : DateAndTime [ '2017-09-20T16:48:02.495169-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #videoCodec_H264_360P_CODEC,			#protocol : #'video codecs',			#sourceCode : 'videoCodec_H264_360P_CODEC\r\t^ 129',			#stamp : 'CaroHernandez 6/2/2016 21:21',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '349' ],		#self : OmReference [ '350' ],		#time : DateAndTime [ '2017-09-20T16:48:02.49632-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDConstant class',				#isMetaSide : true			},			#name : #videoCodec_H264_720P_CODEC,			#protocol : #'video codecs',			#sourceCode : 'videoCodec_H264_720P_CODEC\r\t^ 131',			#stamp : 'CaroHernandez 6/2/2016 21:21',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '350' ],		#self : OmReference [ '351' ],		#time : DateAndTime [ '2017-09-20T16:48:02.497268-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDDetectedTag class',				#isMetaSide : true			},			#name : #'anglesAreEquivalent:and:tolerance:',			#protocol : #calculating,			#sourceCode : 'anglesAreEquivalent: angle1 and: angle2 tolerance: toleranceFactor\r\t^ ((((180 + (angle1 - angle2) abs) % 360) - 180) abs) < (toleranceFactor * 360).\r\t',			#stamp : 'CaroHernandez 7/29/2016 14:58',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '351' ],		#self : OmReference [ '352' ],		#time : DateAndTime [ '2017-09-20T16:48:02.499655-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #cameraSource,			#protocol : #accessing,			#sourceCode : 'cameraSource\r\t^ cameraSource',			#stamp : 'CaroHernandez 7/23/2016 15:47',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '352' ],		#self : OmReference [ '353' ],		#time : DateAndTime [ '2017-09-20T16:48:02.50066-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'cameraSource:',			#protocol : #accessing,			#sourceCode : 'cameraSource: anInt\r\tcameraSource := anInt',			#stamp : 'CaroHernandez 7/23/2016 15:47',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '353' ],		#self : OmReference [ '354' ],		#time : DateAndTime [ '2017-09-20T16:48:02.501609-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #checkConsistency,			#protocol : #'type check',			#sourceCode : 'checkConsistency\r\tself detectedTagType = ARDConstant detectedTag_OR_IN_CV \r\t\tifTrue: [ ^ (self isOR & self inCV) ].\r\tself detectedTagType = ARDConstant detectedTag_SH_IN_CH \r\t\tifTrue: [ ^ (self isSH & self inCH) ].\r\tException new: \'Incorrect detected tag type\' signal.',			#stamp : 'CaroHernandez 7/25/2016 23:31',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '354' ],		#self : OmReference [ '355' ],		#time : DateAndTime [ '2017-09-20T16:48:02.502633-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #currentIndex,			#protocol : #accessing,			#sourceCode : 'currentIndex\r\t^ (count % (self registersSize - 1) + 1)',			#stamp : 'CaroHernandez 7/24/2016 22:41',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '355' ],		#self : OmReference [ '356' ],		#time : DateAndTime [ '2017-09-20T16:48:02.503593-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #detected,			#protocol : #accessing,			#sourceCode : 'detected\r\t^ detected = 1',			#stamp : 'CaroHernandez 7/24/2016 22:24',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '356' ],		#self : OmReference [ '357' ],		#time : DateAndTime [ '2017-09-20T16:48:02.504492-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'detected:',			#protocol : #accessing,			#sourceCode : 'detected: aBoolean\r\tdetected := aBoolean ifTrue: [ 1 ] ifFalse: [ 0 ]',			#stamp : 'CaroHernandez 7/25/2016 22:06',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '357' ],		#self : OmReference [ '358' ],		#time : DateAndTime [ '2017-09-20T16:48:02.505423-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #detectedTagType,			#protocol : #accessing,			#sourceCode : 'detectedTagType\r\t"aDetectedTagType is an enumeration from ARDConstant >> detectedTag_xxx"\r\t^ detectedTagType',			#stamp : 'CaroHernandez 7/25/2016 23:27',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '358' ],		#self : OmReference [ '359' ],		#time : DateAndTime [ '2017-09-20T16:48:02.506666-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'detectedTagType:',			#protocol : #accessing,			#sourceCode : 'detectedTagType: aDetectedTagType\r\t"aDetectedTagType is an enumeration from ARDConstant >> detectedTag_xxx"\r\tdetectedTagType := aDetectedTagType ',			#stamp : 'CaroHernandez 7/25/2016 23:27',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '359' ],		#self : OmReference [ '360' ],		#time : DateAndTime [ '2017-09-20T16:48:02.50795-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #detectedWeighted,			#protocol : #'weighted values',			#sourceCode : 'detectedWeighted\r\t^ ((((lastDetections \r\t\t\tcollect: [ :each | each]) \r\t\t\tinject: 0 \r\t\t\tinto: [:sum :total | sum + total]) / (self registersSize)) rounded) = 1',			#stamp : 'CaroHernandez 7/29/2016 14:59',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '360' ],		#self : OmReference [ '361' ],		#time : DateAndTime [ '2017-09-20T16:48:02.509271-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #distance,			#protocol : #accessing,			#sourceCode : 'distance\r\t^ distance',			#stamp : 'CaroHernandez 7/23/2016 15:46',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '361' ],		#self : OmReference [ '362' ],		#time : DateAndTime [ '2017-09-20T16:48:02.510582-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'distance:',			#protocol : #accessing,			#sourceCode : 'distance: anInt\r\tdistance := anInt',			#stamp : 'CaroHernandez 7/23/2016 15:47',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '362' ],		#self : OmReference [ '363' ],		#time : DateAndTime [ '2017-09-20T16:48:02.511883-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #height,			#protocol : #accessing,			#sourceCode : 'height\r\t^ height',			#stamp : 'CaroHernandez 7/23/2016 15:47',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '363' ],		#self : OmReference [ '364' ],		#time : DateAndTime [ '2017-09-20T16:48:02.513432-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'height:',			#protocol : #accessing,			#sourceCode : 'height: anInt\r\theight := anInt',			#stamp : 'CaroHernandez 7/23/2016 15:47',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '364' ],		#self : OmReference [ '365' ],		#time : DateAndTime [ '2017-09-20T16:48:02.514677-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #inCH,			#protocol : #'type check',			#sourceCode : 'inCH\r\t"returns true if tag is detected in the Horizontal camera"\r\t^ self cameraSource = ARDConstant videoChannel_ZAP_CHANNEL_HORI ',			#stamp : 'CaroHernandez 7/24/2016 21:10',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '365' ],		#self : OmReference [ '366' ],		#time : DateAndTime [ '2017-09-20T16:48:02.515808-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #inCV,			#protocol : #'type check',			#sourceCode : 'inCV\r\t"returns true if tag is detected in the Vertical Camera"\r\t^ self cameraSource = ARDConstant videoChannel_ZAP_CHANNEL_VERT ',			#stamp : 'CaroHernandez 7/24/2016 21:10',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '366' ],		#self : OmReference [ '367' ],		#time : DateAndTime [ '2017-09-20T16:48:02.516827-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\torientationAngle := -1.\r\tdetected := 0.\r\tcount := 0.\r\tlastPositions := Array new: self registersSize.\r\tlastDetections := Array new: self registersSize.\r\t \r\t1 to: self registersSize \r\t\tdo: [:i | lastDetections at: i put: 0.\r\t\t\t\t\t lastPositions at: i put: RTVector new].\r\r\t',			#stamp : 'CaroHernandez 7/29/2016 16:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '367' ],		#self : OmReference [ '368' ],		#time : DateAndTime [ '2017-09-20T16:48:02.51786-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'isAtDistance:tolerance:',			#protocol : #queries,			#sourceCode : 'isAtDistance: aDistance tolerance: aTolerance\r\r\t^ (self position z - aDistance) abs <= (aTolerance * aDistance)',			#stamp : 'CaroHernandez 8/23/2016 20:52',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '368' ],		#self : OmReference [ '369' ],		#time : DateAndTime [ '2017-09-20T16:48:02.518868-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #isCentered,			#protocol : #queries,			#sourceCode : 'isCentered\r\t"returns true if the tag is in the center of the camera image (considering a tolerance of 15%)"\r\r\t^ (self isCenteredWithTolerance: 0.15)  ',			#stamp : 'CaroHernandez 7/29/2016 14:56',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '369' ],		#self : OmReference [ '370' ],		#time : DateAndTime [ '2017-09-20T16:48:02.520079-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'isCenteredInXWithTolerance:',			#protocol : #queries,			#sourceCode : 'isCenteredInXWithTolerance: aToleranceFactor\r\t"aToleranceFactor must be a float in [0, 1["\r\r\t^ (self position x - 500) abs <= (aToleranceFactor * 500)',			#stamp : 'CaroHernandez 7/29/2016 13:57',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '370' ],		#self : OmReference [ '371' ],		#time : DateAndTime [ '2017-09-20T16:48:02.521028-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'isCenteredInYWithTolerance:',			#protocol : #queries,			#sourceCode : 'isCenteredInYWithTolerance: aToleranceFactor\r\t"aToleranceFactor must be a float in [0, 1["\r\r\t^ (self position y - 500) abs <= (aToleranceFactor * 500)',			#stamp : 'CaroHernandez 7/29/2016 13:56',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '371' ],		#self : OmReference [ '372' ],		#time : DateAndTime [ '2017-09-20T16:48:02.522005-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'isCenteredWithTolerance:',			#protocol : #queries,			#sourceCode : 'isCenteredWithTolerance: aToleranceFactor\r\t"aToleranceFactor must be a float in [0, 1["\r\r\t^ (self isCenteredInXWithTolerance: aToleranceFactor) &\r\t(self isCenteredInYWithTolerance: aToleranceFactor) ',			#stamp : 'CaroHernandez 7/29/2016 14:03',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '372' ],		#self : OmReference [ '373' ],		#time : DateAndTime [ '2017-09-20T16:48:02.522937-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #isOR,			#protocol : #'type check',			#sourceCode : 'isOR\r\t"returns true if the informed type matches the OrientedRoundel type or the BW Cocarde type. \r\tThe orientation angle is used as reference because the drone fails to inform the tag type when the detection mode is Multidetection"\r\t^ (self orientationAngle ~= 0)',			#stamp : 'CaroHernandez 7/24/2016 21:04',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '373' ],		#self : OmReference [ '374' ],		#time : DateAndTime [ '2017-09-20T16:48:02.523858-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #isOriented,			#protocol : #queries,			#sourceCode : 'isOriented\r\t^ self isOrientedIn: 0 tolerance: 0.1 ',			#stamp : 'CaroHernandez 7/29/2016 16:27',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '374' ],		#self : OmReference [ '375' ],		#time : DateAndTime [ '2017-09-20T16:48:02.524779-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'isOrientedIn:tolerance:',			#protocol : #queries,			#sourceCode : 'isOrientedIn: anAngle tolerance: aToleranceFactor\r\t"anAngle must be sexagesimal degrees. aTolerance must be a float in [0, 1["\r\t^ ((self isOR) &\r\t  (self orientationAngle > 0)) \r\t\t\tand: [ (self class \r\t\t\t\t\t\tanglesAreEquivalent:  (self orientationAngle)\r\t\t\t\t\t\tand:  anAngle\r\t\t\t\t\t\ttolerance: aToleranceFactor) ]  \r\t  ',			#stamp : 'CaroHernandez 7/29/2016 16:33',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '375' ],		#self : OmReference [ '376' ],		#time : DateAndTime [ '2017-09-20T16:48:02.525826-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #isSH,			#protocol : #'type check',			#sourceCode : 'isSH\r\t"returns true if the informed type is Shell type"\r\t^ (self orientationAngle = 0)',			#stamp : 'CaroHernandez 7/23/2016 17:25',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '376' ],		#self : OmReference [ '377' ],		#time : DateAndTime [ '2017-09-20T16:48:02.527124-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'offsetInDistance:',			#protocol : #queries,			#sourceCode : 'offsetInDistance: desiredDistance\r\t"returns a float in [-1,1] that represents how far is the tag from the center of the camera according to the Y axis, considering 0 the center, -1 the top and 1 the bottom"\r\t^ ((self position z - desiredDistance ) / desiredDistance) asFloat',			#stamp : 'CaroHernandez 8/23/2016 20:40',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '377' ],		#self : OmReference [ '378' ],		#time : DateAndTime [ '2017-09-20T16:48:02.52827-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #offsetInX,			#protocol : #queries,			#sourceCode : 'offsetInX\r\t"returns a float in [-1,1] that represents how far is the tag from the center of the camera according to the X axis, considering 0 the center, -1 the left side and 1 the right side"\r\t^ (self position x - 500) / 500',			#stamp : 'CaroHernandez 8/22/2016 19:37',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '378' ],		#self : OmReference [ '379' ],		#time : DateAndTime [ '2017-09-20T16:48:02.529562-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #offsetInY,			#protocol : #queries,			#sourceCode : 'offsetInY\r\t"returns a float in [-1,1] that represents how far is the tag from the center of the camera according to the Y axis, considering 0 the center, -1 the top and 1 the bottom"\r\t^ ((self position y - 500) / 500) asFloat',			#stamp : 'CaroHernandez 8/22/2016 19:41',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '379' ],		#self : OmReference [ '380' ],		#time : DateAndTime [ '2017-09-20T16:48:02.530611-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #orientationAngle,			#protocol : #accessing,			#sourceCode : 'orientationAngle\r\t^ orientationAngle',			#stamp : 'CaroHernandez 7/23/2016 15:47',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '380' ],		#self : OmReference [ '381' ],		#time : DateAndTime [ '2017-09-20T16:48:02.531624-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'orientationAngle:',			#protocol : #accessing,			#sourceCode : 'orientationAngle: aFloat\r\torientationAngle := aFloat',			#stamp : 'CaroHernandez 7/23/2016 15:48',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '381' ],		#self : OmReference [ '382' ],		#time : DateAndTime [ '2017-09-20T16:48:02.532685-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #position,			#protocol : #accessing,			#sourceCode : 'position\r\t^ lastPositions at: self currentIndex ',			#stamp : 'CaroHernandez 7/24/2016 22:42',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '382' ],		#self : OmReference [ '383' ],		#time : DateAndTime [ '2017-09-20T16:48:02.533781-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #registersSize,			#protocol : #accessing,			#sourceCode : 'registersSize\r\t^ 3',			#stamp : 'CaroHernandez 7/24/2016 22:27',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '383' ],		#self : OmReference [ '384' ],		#time : DateAndTime [ '2017-09-20T16:48:02.534868-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #type,			#protocol : #accessing,			#sourceCode : 'type\r\t^ type',			#stamp : 'CaroHernandez 7/23/2016 15:46',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '384' ],		#self : OmReference [ '385' ],		#time : DateAndTime [ '2017-09-20T16:48:02.535935-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'type:',			#protocol : #accessing,			#sourceCode : 'type: aTagType\r\ttype := aTagType',			#stamp : 'CaroHernandez 7/23/2016 15:48',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '385' ],		#self : OmReference [ '386' ],		#time : DateAndTime [ '2017-09-20T16:48:02.537227-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'updateFrom:index:',			#protocol : #updating,			#sourceCode : 'updateFrom: anARDNavigationDatagramVisionDetect index: anIndex\r\t| dg i |\r\ti := anIndex.\r\tdg := anARDNavigationDatagramVisionDetect.\r\tcount := count + 1.\r\txc \t\t\t:= dg xc \t\t\tat:i.\r\tyc \t\t\t:= dg yc \t\t\tat:i.\r\tdistance \t:= dg distance \tat:i.\r\torientationAngle := dg orientationAngle at:i.\r\tcameraSource := dg cameraSource at:i.\r\t\r\t(cameraSource = 2) ifTrue: [ cameraSource := 1 ]. "Camera source is 2 for oriented roundel when it is detected by the vertical camera wile the drone is in flying mode \'hover on top of oriented roundel"\r\t(lastPositions at: self currentIndex) \r\t\tx: xc\r\t\ty: yc\r\t\tz: distance.\r\t\t\r\tself detected: true.\r\tself checkConsistency \r\t\tifFalse: [ NotYetImplemented new signal  ]\r\t\t\r\t\r',			#stamp : 'CaroHernandez 8/24/2016 17:40',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '386' ],		#self : OmReference [ '387' ],		#time : DateAndTime [ '2017-09-20T16:48:02.53886-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #width,			#protocol : #accessing,			#sourceCode : 'width\r\t^ width',			#stamp : 'CaroHernandez 7/23/2016 15:47',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '387' ],		#self : OmReference [ '388' ],		#time : DateAndTime [ '2017-09-20T16:48:02.540344-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'width:',			#protocol : #accessing,			#sourceCode : 'width: anInt\r\twidth := anInt',			#stamp : 'CaroHernandez 7/23/2016 15:48',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '388' ],		#self : OmReference [ '389' ],		#time : DateAndTime [ '2017-09-20T16:48:02.541527-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #xc,			#protocol : #accessing,			#sourceCode : 'xc\r\t^ xc',			#stamp : 'CaroHernandez 7/23/2016 15:46',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '389' ],		#self : OmReference [ '390' ],		#time : DateAndTime [ '2017-09-20T16:48:02.542969-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'xc:',			#protocol : #accessing,			#sourceCode : 'xc: anInt\r\txc := anInt',			#stamp : 'CaroHernandez 7/23/2016 15:48',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '390' ],		#self : OmReference [ '391' ],		#time : DateAndTime [ '2017-09-20T16:48:02.545108-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #yc,			#protocol : #accessing,			#sourceCode : 'yc\r\t^ yc',			#stamp : 'CaroHernandez 7/23/2016 15:46',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '391' ],		#self : OmReference [ '392' ],		#time : DateAndTime [ '2017-09-20T16:48:02.547733-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDDetectedTag,				#isMetaSide : false			},			#name : #'yc:',			#protocol : #accessing,			#sourceCode : 'yc: anInt\r\tyc := anInt',			#stamp : 'CaroHernandez 7/23/2016 15:49',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '392' ],		#self : OmReference [ '393' ],		#time : DateAndTime [ '2017-09-20T16:48:02.549186-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDMotionState,				#isMetaSide : false			},			#name : #angularSpeed,			#protocol : #accessing,			#sourceCode : 'angularSpeed\r\t" Represents the drone\'s angularSpeed \r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum angular speed \r\t\t\t- (+) for spinning right, (-) for spinning left."\r\t^ angularSpeed',			#stamp : 'CaroHernandez 3/20/2016 23:54',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '393' ],		#self : OmReference [ '394' ],		#time : DateAndTime [ '2017-09-20T16:48:02.550897-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDMotionState,				#isMetaSide : false			},			#name : #'angularSpeed:',			#protocol : #accessing,			#sourceCode : 'angularSpeed: aFloat\r\t" Represents the drone\'s angularSpeed \r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum angular speed \r\t\t\t- (+) for spinning right, (-) for spinning left."\r\tangularSpeed := aFloat asFloat',			#stamp : 'CaroHernandez 3/21/2016 00:17',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '394' ],		#self : OmReference [ '395' ],		#time : DateAndTime [ '2017-09-20T16:48:02.552822-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDMotionState,				#isMetaSide : false			},			#name : #containsOnlyZeros,			#protocol : #accessing,			#sourceCode : 'containsOnlyZeros\r\t^ (self angularSpeed = 0) &\r\t  (self verticalSpeed = 0) &\r\t  (self frontBackTilt = 0) &\r\t  (self leftRightTilt = 0)',			#stamp : 'CaroHernandez 5/26/2016 03:15',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '395' ],		#self : OmReference [ '396' ],		#time : DateAndTime [ '2017-09-20T16:48:02.554678-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDMotionState,				#isMetaSide : false			},			#name : #frontBackTilt,			#protocol : #accessing,			#sourceCode : 'frontBackTilt\r\t" Represents the drone\'s pitch or theta angle\r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max pitch inclination set for the drone \r\t\t\t- (-) for front (drone lowers its nose), (+) for back (drone raise its nose)"\r\t^ frontBackTilt ',			#stamp : 'CaroHernandez 3/20/2016 23:52',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '396' ],		#self : OmReference [ '397' ],		#time : DateAndTime [ '2017-09-20T16:48:02.556896-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDMotionState,				#isMetaSide : false			},			#name : #'frontBackTilt:',			#protocol : #accessing,			#sourceCode : 'frontBackTilt: aFloat\r\t" Represents the drone\'s pitch or theta angle\r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max pitch inclination set for the drone \r\t\t\t- (-) for front (drone lowers its nose), (+) for back (drone raise its nose)"\r\tfrontBackTilt := aFloat asFloat',			#stamp : 'CaroHernandez 3/21/2016 00:17',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '397' ],		#self : OmReference [ '398' ],		#time : DateAndTime [ '2017-09-20T16:48:02.55874-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDMotionState,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\tsuper initialize.\r\tleftRightTilt := 0.0.\r\tfrontBackTilt := 0.0.\r\tverticalSpeed := 0.0.\r\tangularSpeed := 0.0',			#stamp : 'CaroHernandez 3/20/2016 23:52',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '398' ],		#self : OmReference [ '399' ],		#time : DateAndTime [ '2017-09-20T16:48:02.560448-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDMotionState,				#isMetaSide : false			},			#name : #leftRightTilt,			#protocol : #accessing,			#sourceCode : 'leftRightTilt\r\t" Represents the drone\'s roll or phi angle \t\r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max roll inclination set for the drone \t\t\t\t\t\t\t\t\t \t\t\t\r\t\t\t- (-) for left, (+) for right."\r\t^ leftRightTilt ',			#stamp : 'CaroHernandez 3/26/2016 11:35',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '399' ],		#self : OmReference [ '400' ],		#time : DateAndTime [ '2017-09-20T16:48:02.562083-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDMotionState,				#isMetaSide : false			},			#name : #'leftRightTilt:',			#protocol : #accessing,			#sourceCode : 'leftRightTilt: aFloat\r\t" Represents the drone\'s roll or phi angle \t\r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max roll inclination set for the drone \t\t\t\t\t\t\t\t\t \t\t\t\r\t\t\t- (-) for left, (+) for right."\r\tleftRightTilt := aFloat asFloat ',			#stamp : 'CaroHernandez 3/26/2016 11:35',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '400' ],		#self : OmReference [ '401' ],		#time : DateAndTime [ '2017-09-20T16:48:02.563632-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDMotionState,				#isMetaSide : false			},			#name : #verticalSpeed,			#protocol : #accessing,			#sourceCode : 'verticalSpeed\r\t" Represents the drone\'s verticalSpeed (gaz) \r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum vertical speed \r\t\t\t- (+) for elevating, (-) for descending."\r\t^ verticalSpeed',			#stamp : 'CaroHernandez 3/20/2016 23:53',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '401' ],		#self : OmReference [ '402' ],		#time : DateAndTime [ '2017-09-20T16:48:02.565156-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDMotionState,				#isMetaSide : false			},			#name : #'verticalSpeed:',			#protocol : #accessing,			#sourceCode : 'verticalSpeed: aFloat\r\t" Represents the drone\'s verticalSpeed (gaz) \r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum vertical speed \r\t\t\t- (+) for elevating, (-) for descending."\r\tverticalSpeed := aFloat asFloat',			#stamp : 'CaroHernandez 3/21/2016 00:18',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '402' ],		#self : OmReference [ '403' ],		#time : DateAndTime [ '2017-09-20T16:48:02.566878-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDNavdataManager class',				#isMetaSide : true			},			#name : #'announceStateChangesFrom:and:using:',			#protocol : #'instance creation',			#sourceCode : 'announceStateChangesFrom: lastARDNavigationDatagram and: previousARDNavigationDatagram using: anAnnouncer\r"Announces (through the arDrone\'s announcer instance) the drone\'s state changes (if happened), based on the information carried in the navigation datagrams (navdata) sent by the drone"\r\t| lastND prevND |\r\t\r\tanAnnouncer announce: DroneNavdataPacketReceived.\r\tlastND := lastARDNavigationDatagram.\r\tprevND := previousARDNavigationDatagram.\r\t\r\t(lastND containsData not | \r\t prevND containsData not) \r\tifTrue: [ ^ 0 ].\r\t"Announce: DroneTookOff"\r\t(lastND droneIsFlying & (prevND droneIsFlying not))\r\tifTrue: [ anAnnouncer announce: DroneTookOff. Transcript show: \'TookOff\';cr. ].\r\t\r\t"Announce: DroneLanded"\r\t((lastND droneIsFlying not) & prevND droneIsFlying)\r\tifTrue: [ anAnnouncer announce: DroneLanded. Transcript show: \'Landed\';cr.  ].\r\t\t\r\t',			#stamp : 'CaroHernandez 5/31/2016 15:40',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '403' ],		#self : OmReference [ '404' ],		#time : DateAndTime [ '2017-09-20T16:48:02.568496-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDNavdataManager class',				#isMetaSide : true			},			#name : #'withARDrone:',			#protocol : #'instance creation',			#sourceCode : 'withARDrone: anARDrone\r\t"Returns a Navdata manager for receiving navigation data from anARDrone"\r\t^ (self new)\r\t\t\tarDrone: anARDrone',			#stamp : 'CaroHernandez 7/23/2016 14:46',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '404' ],		#self : OmReference [ '405' ],		#time : DateAndTime [ '2017-09-20T16:48:02.570169-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavdataManager,				#isMetaSide : false			},			#name : #arDrone,			#protocol : #accessing,			#sourceCode : 'arDrone\r\t"Returns the ARDrone instance for which this Navdata Manager was created"\r\t^ arDrone\r\t',			#stamp : 'CaroHernandez 3/13/2016 17:40',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '405' ],		#self : OmReference [ '406' ],		#time : DateAndTime [ '2017-09-20T16:48:02.572047-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavdataManager,				#isMetaSide : false			},			#name : #'arDrone:',			#protocol : #accessing,			#sourceCode : 'arDrone: anARDrone\r\t"Sets the ARDrone instance for which this Navdata Manager was created"\r\tarDrone := anARDrone\r\t',			#stamp : 'CaroHernandez 3/13/2016 17:40',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '406' ],		#self : OmReference [ '407' ],		#time : DateAndTime [ '2017-09-20T16:48:02.573569-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavdataManager,				#isMetaSide : false			},			#name : #connected,			#protocol : #accessing,			#sourceCode : 'connected\r\t\r\t^ true',			#stamp : 'CaroHernandez 3/11/2016 19:47',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '407' ],		#self : OmReference [ '408' ],		#time : DateAndTime [ '2017-09-20T16:48:02.575345-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavdataManager,				#isMetaSide : false			},			#name : #hasReceivedNavdata,			#protocol : #api,			#sourceCode : 'hasReceivedNavdata\r\r\t^ self lastDatagramReceived containsData\t\r\t',			#stamp : 'CaroHernandez 5/26/2016 02:22',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '408' ],		#self : OmReference [ '409' ],		#time : DateAndTime [ '2017-09-20T16:48:02.577139-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavdataManager,				#isMetaSide : false			},			#name : #initialize,			#protocol : #api,			#sourceCode : 'initialize\r\tsuper initialize.\r\tsuspendProcess := true.\r\tterminateProcess := false.\r\tlastDatagramReceived := ARDNavigationDatagramDemo new.\r\tpreviousDatagramReceived := ARDNavigationDatagramDemo new.\r\t\r\t"starts receiving navdata"\r\treceiverProcess := self receiverProcessCallback: [ :datagram | ].\r',			#stamp : 'CaroHernandez 7/23/2016 14:38',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '409' ],		#self : OmReference [ '410' ],		#time : DateAndTime [ '2017-09-20T16:48:02.57908-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavdataManager,				#isMetaSide : false			},			#name : #lastDatagramReceived,			#protocol : #api,			#sourceCode : 'lastDatagramReceived\r\t\r\t^ lastDatagramReceived',			#stamp : 'CaroHernandez 5/26/2016 01:20',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '410' ],		#self : OmReference [ '411' ],		#time : DateAndTime [ '2017-09-20T16:48:02.581173-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavdataManager,				#isMetaSide : false			},			#name : #previousDatagramReceived,			#protocol : #private,			#sourceCode : 'previousDatagramReceived\r\t\r\t^ previousDatagramReceived',			#stamp : 'CaroHernandez 5/26/2016 01:21',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '411' ],		#self : OmReference [ '412' ],		#time : DateAndTime [ '2017-09-20T16:48:02.583201-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavdataManager,				#isMetaSide : false			},			#name : #receive,			#protocol : #private,			#sourceCode : 'receive\r\t"Receives a navigation datagram from the drone, and uses it to update its lastNavigationDatagram. If no datagram was received returns nil; otherwise returns the datagram"\r\t| datagram  buffer  |\r\tbuffer := arDrone navdataAdapter receive.\r\t\r\t( buffer = 0 )  \r\t\tifFalse: [  self previousDatagramReceived updateFrom: self lastDatagramReceived.\r\t\t\t\t\t\t(self lastDatagramReceived updateFromByteArray: buffer)\r\t\t\t\t\t\tifTrue: [\r\t\t\t\t\t\t\t"Transcript show: \'received\';cr."\r\t\t\t\t\t\t\tdatagram := self lastDatagramReceived.\r\t\t\t\t\t\t\tself class \r\t\t\t\t\t\t\t\tannounceStateChangesFrom: self lastDatagramReceived \r\t\t\t\t\t\t\t\tand: self previousDatagramReceived \r\t\t\t\t\t\t\t\tusing: arDrone announcer .\r\t\t\t\t\t\t\t].\r\t\t\t\t\t\t ].\r\t^ datagram.',			#stamp : 'CaroHernandez 9/20/2016 15:28',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '412' ],		#self : OmReference [ '413' ],		#time : DateAndTime [ '2017-09-20T16:48:02.584875-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavdataManager,				#isMetaSide : false			},			#name : #'receiverProcessCallback:',			#protocol : #api,			#sourceCode : 'receiverProcessCallback: aBlock\r\t"Redefines the receiverProcess, so it includes the callback aBlock inside its loop.\r\tThe receiverProcess excecutes an infinite loop, in each cycle receives one navigation packet."\r\treceiverProcess ifNotNil: [ receiverProcess terminate ].\r\t\r\treceiverProcess :=\r\t[[ | datagram |\r\t\tsuspendProcess ifTrue: [ Processor activeProcess suspend ].\t\r\t\tdatagram := self receive .\r\t\t(datagram isNotNil) \r\t\t\tifTrue: [ \r\t\t\t\taBlock value: datagram ].\r\t\tterminateProcess ifTrue: [ Processor activeProcess terminate ].\r\t\t(Delay forMilliseconds: 20) wait.\r\t] repeat ] newProcess.\r\t^ receiverProcess.',			#stamp : 'CaroHernandez 8/21/2016 20:15',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '413' ],		#self : OmReference [ '414' ],		#time : DateAndTime [ '2017-09-20T16:48:02.586576-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavdataManager,				#isMetaSide : false			},			#name : #resume,			#protocol : #api,			#sourceCode : 'resume\r\t"Resumes all processes associated with this instance."\r\tsuspendProcess := false.\r\treceiverProcess resume.\r',			#stamp : 'CaroHernandez 7/20/2016 22:30',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '414' ],		#self : OmReference [ '415' ],		#time : DateAndTime [ '2017-09-20T16:48:02.588441-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavdataManager,				#isMetaSide : false			},			#name : #stopReceiving,			#protocol : #api,			#sourceCode : 'stopReceiving\r\t"Finishes the process that receives navdata."\r\tterminateProcess := true',			#stamp : 'CaroHernandez 7/20/2016 22:35',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '415' ],		#self : OmReference [ '416' ],		#time : DateAndTime [ '2017-09-20T16:48:02.589991-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavdataManager,				#isMetaSide : false			},			#name : #suspend,			#protocol : #api,			#sourceCode : 'suspend\r\t"Suspends all processes associated with this instance."\r\tsuspendProcess := true\r',			#stamp : 'CaroHernandez 7/20/2016 22:28',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '416' ],		#self : OmReference [ '417' ],		#time : DateAndTime [ '2017-09-20T16:48:02.591498-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavdataManager,				#isMetaSide : false			},			#name : #terminate,			#protocol : #api,			#sourceCode : 'terminate\r\t"Finishes all processes associated with this instance."\r\treceiverProcess terminate.\r',			#stamp : 'CaroHernandez 6/2/2016 18:58',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '417' ],		#self : OmReference [ '418' ],		#time : DateAndTime [ '2017-09-20T16:48:02.593197-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #asString,			#protocol : #converting,			#sourceCode : 'asString\r\t| cr |\r\tcr := Character cr asString .\r\tself containsData ifFalse: [ ^ \'No data\',cr ].\r\t^ header asString, cr, cr,\r\t  (options at:1) asString, cr, cr,\r\t  (options at:2) asString. ',			#stamp : 'CaroHernandez 7/20/2016 21:00',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '418' ],		#self : OmReference [ '419' ],		#time : DateAndTime [ '2017-09-20T16:48:02.594915-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #'asStringVerbose:',			#protocol : #converting,			#sourceCode : 'asStringVerbose: showExplanations\r\t| cr |\r\tcr := Character cr asString .\r\tself containsData ifFalse: [ ^ \'No data\',cr ].\r\t^ header asString, cr, cr, \r\t  (showExplanations \r\t\tifTrue: [header state asStringVerbose] \r\t\tifFalse: [header state asString]), cr,  \r\t  (options at:1) asString, cr, cr,\r\t  (options at:2) asString. ',			#stamp : 'CaroHernandez 7/19/2016 21:46',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '419' ],		#self : OmReference [ '420' ],		#time : DateAndTime [ '2017-09-20T16:48:02.596634-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #containsData,			#protocol : #accessing,			#sourceCode : 'containsData\r\r\t^ containsData',			#stamp : 'CaroHernandez 5/26/2016 01:22',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '420' ],		#self : OmReference [ '421' ],		#time : DateAndTime [ '2017-09-20T16:48:02.598256-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #'containsData:',			#protocol : #accessing,			#sourceCode : 'containsData: aBoolean\r\r\tcontainsData := aBoolean',			#stamp : 'CaroHernandez 5/26/2016 01:22',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '421' ],		#self : OmReference [ '422' ],		#time : DateAndTime [ '2017-09-20T16:48:02.599909-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #droneAltitude,			#protocol : #api,			#sourceCode : 'droneAltitude\r\t"returns the current altitude (as an int in centimeters)"\r\t^ (self options at:1) altitude',			#stamp : 'CaroHernandez 5/26/2016 03:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '422' ],		#self : OmReference [ '423' ],		#time : DateAndTime [ '2017-09-20T16:48:02.601398-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #droneBatteryLevel,			#protocol : #api,			#sourceCode : 'droneBatteryLevel\r\t"returns the remaining battery percentage as an integer"\r\t^ (self options at:1) vbatFlyingPercentage.',			#stamp : 'CaroHernandez 5/26/2016 03:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '423' ],		#self : OmReference [ '424' ],		#time : DateAndTime [ '2017-09-20T16:48:02.602961-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #droneIsFlying,			#protocol : #api,			#sourceCode : 'droneIsFlying\r\t"returns true if the drone is flying"\r\t^ self header state flyMask = 1',			#stamp : 'CaroHernandez 5/26/2016 02:09',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '424' ],		#self : OmReference [ '425' ],		#time : DateAndTime [ '2017-09-20T16:48:02.604876-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #droneIsInEmergencyState,			#protocol : #api,			#sourceCode : 'droneIsInEmergencyState\r\t"returns true if the drone is in emergency state"\r\t^ self header state emergencyLanding = 1',			#stamp : 'CaroHernandez 5/26/2016 02:09',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '425' ],		#self : OmReference [ '426' ],		#time : DateAndTime [ '2017-09-20T16:48:02.606632-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #droneLowBattery,			#protocol : #api,			#sourceCode : 'droneLowBattery\r\t"returns true if the battery level is too low"\r\tself header state vBatLow ifNil: [ ^ false ].\r\t^ self header state vBatLow = 1',			#stamp : 'CaroHernandez 6/3/2016 21:30',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '426' ],		#self : OmReference [ '427' ],		#time : DateAndTime [ '2017-09-20T16:48:02.608639-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #header,			#protocol : #accessing,			#sourceCode : 'header\r\r\t^ header',			#stamp : 'CaroHernandez 5/7/2016 19:59',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '427' ],		#self : OmReference [ '428' ],		#time : DateAndTime [ '2017-09-20T16:48:02.61044-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #'header:',			#protocol : #accessing,			#sourceCode : 'header: aDatagramHeader\r\t\r\theader := aDatagramHeader',			#stamp : 'CaroHernandez 5/7/2016 19:59',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '428' ],		#self : OmReference [ '429' ],		#time : DateAndTime [ '2017-09-20T16:48:02.612204-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #initialize,			#protocol : #accessing,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself containsData: false.\r\theader  := ARDNavigationDatagramHeader new.\r\toptions := { ARDNavigationDatagramDemoOption new. \r\t\t\t\t\t ARDNavigationDatagramVisionDetect new }',			#stamp : 'CaroHernandez 5/26/2016 01:22',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '429' ],		#self : OmReference [ '430' ],		#time : DateAndTime [ '2017-09-20T16:48:02.614077-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #options,			#protocol : #accessing,			#sourceCode : 'options\r\t\r\t^ options ',			#stamp : 'CaroHernandez 5/7/2016 20:01',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '430' ],		#self : OmReference [ '431' ],		#time : DateAndTime [ '2017-09-20T16:48:02.616064-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #'options:',			#protocol : #accessing,			#sourceCode : 'options: anArray\r\t\r\toptions := anArray ',			#stamp : 'CaroHernandez 5/7/2016 20:04',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '431' ],		#self : OmReference [ '432' ],		#time : DateAndTime [ '2017-09-20T16:48:02.618651-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #'updateFrom:',			#protocol : #updating,			#sourceCode : 'updateFrom: anARDNavigationDatagramDemo\r\t\r\t(anARDNavigationDatagramDemo containsData) ifFalse: [ ^ false ].\r\t \r\t(header updateFrom: anARDNavigationDatagramDemo header) ifFalse: [ ^ false  ] .\r\t((options at:1) updateFrom:  (anARDNavigationDatagramDemo options at:1)) ifFalse: [^ false ].\r\t((options at:2) updateFrom:  (anARDNavigationDatagramDemo options at:2)) ifFalse: [ ^ false ].\r\tself containsData: true.\r\t^ true\r\r',			#stamp : 'CaroHernandez 6/28/2016 18:56',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '432' ],		#self : OmReference [ '433' ],		#time : DateAndTime [ '2017-09-20T16:48:02.620706-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemo,				#isMetaSide : false			},			#name : #'updateFromByteArray:',			#protocol : #updating,			#sourceCode : 'updateFromByteArray: aByteArray\r\t| nextTag |\r\t"update header"\r\t(header updateFromByteArray: aByteArray) \r\t\tifFalse: [ "Transcript show: \'Header\';cr."^ false ] .\r\t"update options demo tag 0"\r\t"nextTag := ARDNavigationDatagramOption nextOptionTagIn: aByteArray at: (1 + header size).\r\t(nextTag = 0) ifTrue: [ \r\t\t ]. "\r\t((options at:1) updateFromByteArray: aByteArray at: (1 + header size)) \r\tifTrue: [ \r\t\t"update options vision tag 16"\r\t\t(options at:2) updateFromByteArray: aByteArray at: (1 + (header size) + ((options at:1) size)) ].\r\tself containsData: true.\r\t^ true\r\r',			#stamp : 'CaroHernandez 7/1/2016 14:29',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '433' ],		#self : OmReference [ '434' ],		#time : DateAndTime [ '2017-09-20T16:48:02.623371-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDNavigationDatagramHeader class',				#isMetaSide : true			},			#name : #validHeader,			#protocol : #validation,			#sourceCode : 'validHeader\r\t^ \'16r55667788\'',			#stamp : 'CaroHernandez 6/30/2016 18:40',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '434' ],		#self : OmReference [ '435' ],		#time : DateAndTime [ '2017-09-20T16:48:02.625168-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramHeader,				#isMetaSide : false			},			#name : #asString,			#protocol : #converting,			#sourceCode : 'asString\r\t| cr |\r\tcr := Character cr asString.\r\r\t^ header asString, \':header\', \tcr,  \r\t  ardState hexState hex asString, \':state \', cr, \r\t  seq asString,  \':seq\', cr, \r\t  vision asString, \':vision\'',			#stamp : 'CaroHernandez 7/20/2016 21:00',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '435' ],		#self : OmReference [ '436' ],		#time : DateAndTime [ '2017-09-20T16:48:02.626673-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramHeader,				#isMetaSide : false			},			#name : #header,			#protocol : #accessing,			#sourceCode : 'header\r\r\t^ header',			#stamp : 'CaroHernandez 1/29/2016 05:41',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '436' ],		#self : OmReference [ '437' ],		#time : DateAndTime [ '2017-09-20T16:48:02.628013-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramHeader,				#isMetaSide : false			},			#name : #'header:',			#protocol : #accessing,			#sourceCode : 'header: anHex\r\r\theader := anHex',			#stamp : 'CaroHernandez 1/29/2016 05:15',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '437' ],		#self : OmReference [ '438' ],		#time : DateAndTime [ '2017-09-20T16:48:02.629739-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramHeader,				#isMetaSide : false			},			#name : #initialize,			#protocol : #accessing,			#sourceCode : 'initialize\r\tself state: ARDState new.',			#stamp : 'CaroHernandez 5/26/2016 03:10',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '438' ],		#self : OmReference [ '439' ],		#time : DateAndTime [ '2017-09-20T16:48:02.631341-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramHeader,				#isMetaSide : false			},			#name : #seq,			#protocol : #accessing,			#sourceCode : 'seq\r\r\t^ seq',			#stamp : 'CaroHernandez 1/29/2016 05:30',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '439' ],		#self : OmReference [ '440' ],		#time : DateAndTime [ '2017-09-20T16:48:02.633118-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramHeader,				#isMetaSide : false			},			#name : #'seq:',			#protocol : #accessing,			#sourceCode : 'seq: anInt\r\r\tseq := anInt',			#stamp : 'CaroHernandez 1/29/2016 05:40',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '440' ],		#self : OmReference [ '441' ],		#time : DateAndTime [ '2017-09-20T16:48:02.634511-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramHeader,				#isMetaSide : false			},			#name : #size,			#protocol : #accessing,			#sourceCode : 'size\r\t"Fixed Navdata Header size in bytes, defined by ArDrone firmware"\r\t^ 16',			#stamp : 'CaroHernandez 3/13/2016 17:31',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '441' ],		#self : OmReference [ '442' ],		#time : DateAndTime [ '2017-09-20T16:48:02.635636-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramHeader,				#isMetaSide : false			},			#name : #state,			#protocol : #accessing,			#sourceCode : 'state\r\t\r\t^ ardState',			#stamp : 'CaroHernandez 3/15/2016 17:58',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '442' ],		#self : OmReference [ '443' ],		#time : DateAndTime [ '2017-09-20T16:48:02.637041-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramHeader,				#isMetaSide : false			},			#name : #'state:',			#protocol : #accessing,			#sourceCode : 'state: anARDState\r\r\tardState := anARDState',			#stamp : 'CaroHernandez 5/26/2016 00:48',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '443' ],		#self : OmReference [ '444' ],		#time : DateAndTime [ '2017-09-20T16:48:02.638195-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramHeader,				#isMetaSide : false			},			#name : #'stateFromHex:',			#protocol : #accessing,			#sourceCode : 'stateFromHex: anHex\r\t\r\tardState ifNil: [ ardState new. ].\r\tardState updateFromHex: anHex',			#stamp : 'CaroHernandez 5/26/2016 03:11',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '444' ],		#self : OmReference [ '445' ],		#time : DateAndTime [ '2017-09-20T16:48:02.639439-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramHeader,				#isMetaSide : false			},			#name : #stateVerbose,			#protocol : #converting,			#sourceCode : 'stateVerbose\r\t"returns drone\'s state as string "\r\t^ ardState asString',			#stamp : 'CaroHernandez 3/12/2016 13:43',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '445' ],		#self : OmReference [ '446' ],		#time : DateAndTime [ '2017-09-20T16:48:02.640691-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramHeader,				#isMetaSide : false			},			#name : #'updateFrom:',			#protocol : #updating,			#sourceCode : 'updateFrom: anARDNavigationDatagramHeader\r\t"Update NavigationDatagramHeader from another object"\r\t(anARDNavigationDatagramHeader header = self class validHeader) \r\tifFalse: [ ^ false. ].\r\tself \r\t\theader: \tanARDNavigationDatagramHeader header;\r\t\tstateFromHex: \tanARDNavigationDatagramHeader state hexState;\r\t\tseq: \t\tanARDNavigationDatagramHeader seq;\r\t\tvision: \tanARDNavigationDatagramHeader vision.\r\t^ true',			#stamp : 'CaroHernandez 6/28/2016 18:53',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '446' ],		#self : OmReference [ '447' ],		#time : DateAndTime [ '2017-09-20T16:48:02.641939-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramHeader,				#isMetaSide : false			},			#name : #'updateFromByteArray:',			#protocol : #updating,			#sourceCode : 'updateFromByteArray: aByteArray\r\t"Update NavigationDatagramHeader from a ByteArray"\r\t(((aByteArray unsignedLongAt: 1 bigEndian: false) hex) = self class validHeader) \r\tifFalse: [ ^ false. ].\r\t\t\r\tself \r\t\theader: (aByteArray unsignedLongAt: 1 bigEndian: false) hex ;\r\t\tstateFromHex: (aByteArray unsignedLongAt: 5 bigEndian: false) ;\r\t\tseq: (aByteArray unsignedLongAt: 9 bigEndian: false) ;\r\t\tvision: (aByteArray unsignedLongAt: 13 bigEndian: false).\r\t\r\t^ true',			#stamp : 'CaroHernandez 7/1/2016 14:20',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '447' ],		#self : OmReference [ '448' ],		#time : DateAndTime [ '2017-09-20T16:48:02.64304-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramHeader,				#isMetaSide : false			},			#name : #vision,			#protocol : #accessing,			#sourceCode : 'vision\r\r\t^ vision',			#stamp : 'CaroHernandez 1/29/2016 05:30',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '448' ],		#self : OmReference [ '449' ],		#time : DateAndTime [ '2017-09-20T16:48:02.644309-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramHeader,				#isMetaSide : false			},			#name : #'vision:',			#protocol : #accessing,			#sourceCode : 'vision: aInt\r\r\tvision := aInt',			#stamp : 'CaroHernandez 1/29/2016 05:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '449' ],		#self : OmReference [ '450' ],		#time : DateAndTime [ '2017-09-20T16:48:02.645617-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDNavigationDatagramDemoOption class',				#isMetaSide : true			},			#name : #validSize,			#protocol : #validation,			#sourceCode : 'validSize\r\t^ 148',			#stamp : 'CaroHernandez 6/28/2016 18:46',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '450' ],		#self : OmReference [ '451' ],		#time : DateAndTime [ '2017-09-20T16:48:02.64722-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDNavigationDatagramDemoOption class',				#isMetaSide : true			},			#name : #validTag,			#protocol : #validation,			#sourceCode : 'validTag\r\t^ 0',			#stamp : 'CaroHernandez 6/28/2016 18:45',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '451' ],		#self : OmReference [ '452' ],		#time : DateAndTime [ '2017-09-20T16:48:02.648764-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #altitude,			#protocol : #accessing,			#sourceCode : 'altitude\r\t"altitude in centimeters"\r\t^ altitude',			#stamp : 'CaroHernandez 3/13/2016 17:50',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '452' ],		#self : OmReference [ '453' ],		#time : DateAndTime [ '2017-09-20T16:48:02.649913-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #'altitude:',			#protocol : #accessing,			#sourceCode : 'altitude: anInt\r\t"altitude in centimeters"\r\taltitude := anInt',			#stamp : 'CaroHernandez 3/13/2016 17:50',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '453' ],		#self : OmReference [ '454' ],		#time : DateAndTime [ '2017-09-20T16:48:02.651044-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #asString,			#protocol : #accessing,			#sourceCode : 'asString\r\t"Returns the datagram demo option contents as string"\r\t| cr tab |\r\tcr := Character cr asString .\r\ttab := Character tab asString .\r\t^ tag \t\t\tasString, \' :tag \', cr ,\r\tsize \t\t\tasString, \' :size \', cr ,\r\t(self ctrlStateString) \tasString, \' :control state \', cr ,\r\tvbatFlyingPercentage \r\t\t\t\t\tasString, \' :batery \', cr ,\r\ttheta \t\t\tasString, \' :pitch angle\', cr ,\r\tphi \t\t\tasString, \' :roll angle\', cr ,\r\tpsi \t\t\tasString, \' :yaw angle\', cr ,\r\taltitude \t\tasString, \' :altitude\', cr ,\r\tvx \t\t\t\tasString, \' :estimated velocity x\', cr ,\r\tvy \t\t\t\tasString, \' :estimated velocity y\', cr ,\r\tvz \t\t\t\tasString, \' :estimated velocity z\'',			#stamp : 'CaroHernandez 9/12/2016 16:26',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '454' ],		#self : OmReference [ '455' ],		#time : DateAndTime [ '2017-09-20T16:48:02.65217-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #ctrlState,			#protocol : #accessing,			#sourceCode : 'ctrlState\r\t"Flying state (landed, flying, hovering, etc.) defined in CTRL_STATES enum."\r\t^ ctrlState',			#stamp : 'CaroHernandez 2/22/2016 17:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '455' ],		#self : OmReference [ '456' ],		#time : DateAndTime [ '2017-09-20T16:48:02.653264-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #'ctrlState:',			#protocol : #accessing,			#sourceCode : 'ctrlState: anInt\r\t"Flying state (landed, flying, hovering, etc.) defined in CTRL_STATES enum."\r\tctrlState := anInt',			#stamp : 'CaroHernandez 2/22/2016 17:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '456' ],		#self : OmReference [ '457' ],		#time : DateAndTime [ '2017-09-20T16:48:02.654362-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #ctrlStateString,			#protocol : #accessing,			#sourceCode : 'ctrlStateString\r\t"Flying state (landed, flying, hovering, etc.) defined in CTRL_STATES enum."\r\tself ctrlState ifNil: [ ^ \'\' ].\r\t^ ARDConstant ctrlStates at: ((self ctrlState>>16) + 1)',			#stamp : 'CaroHernandez 9/20/2016 15:20',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '457' ],		#self : OmReference [ '458' ],		#time : DateAndTime [ '2017-09-20T16:48:02.655464-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #numFrames,			#protocol : #accessing,			#sourceCode : 'numFrames\r\t"for video stream"\r\t^ numFrames',			#stamp : 'CaroHernandez 2/22/2016 17:18',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '458' ],		#self : OmReference [ '459' ],		#time : DateAndTime [ '2017-09-20T16:48:02.656609-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #'numFrames:',			#protocol : #accessing,			#sourceCode : 'numFrames: anInt\r\t"for video stream"\r\tnumFrames := anInt',			#stamp : 'CaroHernandez 2/22/2016 17:17',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '459' ],		#self : OmReference [ '460' ],		#time : DateAndTime [ '2017-09-20T16:48:02.658406-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #phi,			#protocol : #accessing,			#sourceCode : 'phi\r\t"roll angle in milli-degrees"\r\t^ phi',			#stamp : 'CaroHernandez 2/22/2016 17:15',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '460' ],		#self : OmReference [ '461' ],		#time : DateAndTime [ '2017-09-20T16:48:02.66068-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #'phi:',			#protocol : #accessing,			#sourceCode : 'phi: aFloat\r\t"roll angle in milli-degrees"\r\tphi := aFloat',			#stamp : 'CaroHernandez 2/22/2016 17:16',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '461' ],		#self : OmReference [ '462' ],		#time : DateAndTime [ '2017-09-20T16:48:02.662465-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #psi,			#protocol : #accessing,			#sourceCode : 'psi\r\t"yaw angle in milli-degrees"\r\t^ psi',			#stamp : 'CaroHernandez 2/22/2016 17:16',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '462' ],		#self : OmReference [ '463' ],		#time : DateAndTime [ '2017-09-20T16:48:02.663699-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #'psi:',			#protocol : #accessing,			#sourceCode : 'psi: aFloat\r\t"yaw angle in milli-degrees"\r\tpsi := aFloat',			#stamp : 'CaroHernandez 2/22/2016 17:16',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '463' ],		#self : OmReference [ '464' ],		#time : DateAndTime [ '2017-09-20T16:48:02.664708-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #theta,			#protocol : #accessing,			#sourceCode : 'theta\r\t"pitch angle in milli-degrees"\r\t^ theta',			#stamp : 'CaroHernandez 2/22/2016 17:15',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '464' ],		#self : OmReference [ '465' ],		#time : DateAndTime [ '2017-09-20T16:48:02.665714-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #'theta:',			#protocol : #accessing,			#sourceCode : 'theta: aFloat\r\t"pitch angle in milli-degrees"\r\ttheta := aFloat',			#stamp : 'CaroHernandez 2/22/2016 17:15',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '465' ],		#self : OmReference [ '466' ],		#time : DateAndTime [ '2017-09-20T16:48:02.666729-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #'updateFrom:',			#protocol : #updating,			#sourceCode : 'updateFrom: anARDNavigationDatagramDemoOption\r\t(anARDNavigationDatagramDemoOption size asInteger = self class validSize & \r\tanARDNavigationDatagramDemoOption tag asInteger = self class validTag) \r\tifFalse: [^ false].\r\t\r\tself \r\t\ttag: \t\t\tanARDNavigationDatagramDemoOption tag; \r\t\tsize: \t\t\tanARDNavigationDatagramDemoOption size;\t\t\r\t\tctrlState: \tanARDNavigationDatagramDemoOption ctrlState;\r\t\tvbatFlyingPercentage: \r\t\t\t\t\t\tanARDNavigationDatagramDemoOption vbatFlyingPercentage; \r\t\ttheta: \t\tanARDNavigationDatagramDemoOption theta;\r\t\tphi: \t\t\tanARDNavigationDatagramDemoOption phi;\r\t\tpsi: \t\t\tanARDNavigationDatagramDemoOption psi;\r\t\taltitude: \tanARDNavigationDatagramDemoOption altitude;\r\t\tvx: \t\t\tanARDNavigationDatagramDemoOption vx;\r\t\tvy: \t\t\tanARDNavigationDatagramDemoOption vy;\r\t\tvz: \t\t\tanARDNavigationDatagramDemoOption vz;\r\t\tnumFrames: \tanARDNavigationDatagramDemoOption numFrames.\r\t^ true.',			#stamp : 'CaroHernandez 6/28/2016 18:50',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '466' ],		#self : OmReference [ '467' ],		#time : DateAndTime [ '2017-09-20T16:48:02.667917-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #'updateFromByteArray:at:',			#protocol : #updating,			#sourceCode : 'updateFromByteArray: aByteArray at: startByteIndex\r\t| i aTag aSize |\r\ti := startByteIndex .\r\taTag := (aByteArray unsignedShortAt: i bigEndian: false).\r\taSize := (aByteArray unsignedShortAt: i + 2 bigEndian: false).\r\t(aTag = self class validTag & aSize = self class validSize) ifFalse: [ Transcript show: \'tag \',(aTag asString),\' size\', (aSize asString) ;cr. ^ false ].\r\tself \r\t\ttag: \t\t\taTag ;\r\t\tsize: \t\t\taSize ;\r\t\tctrlState: \t(aByteArray unsignedLongAt: i + 4 bigEndian: false) ;\r\t\tvbatFlyingPercentage: \r\t\t\t\t\t\t(aByteArray unsignedLongAt: i + 8 bigEndian: false) ;\r\t\ttheta: \t\t(aByteArray floatAt: i + 12 bigEndian: false) ;\r\t\tphi: \t\t\t(aByteArray floatAt: i + 16 bigEndian: false) ;\r\t\tpsi: \t\t\t(aByteArray floatAt: i + 20 bigEndian: false) ;\r\t\taltitude: \t(aByteArray unsignedLongAt: i + 24 bigEndian: false) ;\r\t\tvx: \t\t\t(aByteArray floatAt: i + 28 bigEndian: false) ;\r\t\tvy: \t\t\t(aByteArray floatAt: i + 32 bigEndian: false) ;\r\t\tvz: \t\t\t(aByteArray floatAt: i + 36 bigEndian: false) ;\r\t\tnumFrames: \t(aByteArray unsignedLongAt: i + 40 bigEndian: false) .\r\t^ true',			#stamp : 'CaroHernandez 6/30/2016 21:56',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '467' ],		#self : OmReference [ '468' ],		#time : DateAndTime [ '2017-09-20T16:48:02.669033-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #vbatFlyingPercentage,			#protocol : #accessing,			#sourceCode : 'vbatFlyingPercentage\r\t"battery voltage filtered (mV)"\r\t^ vbatFlyingPercentage',			#stamp : 'CaroHernandez 2/22/2016 17:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '468' ],		#self : OmReference [ '469' ],		#time : DateAndTime [ '2017-09-20T16:48:02.670004-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #'vbatFlyingPercentage:',			#protocol : #accessing,			#sourceCode : 'vbatFlyingPercentage: anInt\r\t"battery voltage filtered (mV)"\r\tvbatFlyingPercentage := anInt',			#stamp : 'CaroHernandez 2/22/2016 17:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '469' ],		#self : OmReference [ '470' ],		#time : DateAndTime [ '2017-09-20T16:48:02.671265-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #vx,			#protocol : #accessing,			#sourceCode : 'vx\r\t"estimated linear velocity"\r\t^ vx',			#stamp : 'CaroHernandez 2/22/2016 17:13',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '470' ],		#self : OmReference [ '471' ],		#time : DateAndTime [ '2017-09-20T16:48:02.672194-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #'vx:',			#protocol : #accessing,			#sourceCode : 'vx: aFloat\r\t"estimated linear velocity"\r\tvx := aFloat',			#stamp : 'CaroHernandez 2/22/2016 17:13',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '471' ],		#self : OmReference [ '472' ],		#time : DateAndTime [ '2017-09-20T16:48:02.673149-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #vy,			#protocol : #accessing,			#sourceCode : 'vy\r\t"estimated linear velocity"\r\t^ vy',			#stamp : 'CaroHernandez 2/22/2016 17:13',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '472' ],		#self : OmReference [ '473' ],		#time : DateAndTime [ '2017-09-20T16:48:02.674083-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #'vy:',			#protocol : #accessing,			#sourceCode : 'vy: aFloat\r\t"estimated linear velocity"\r\tvy := aFloat',			#stamp : 'CaroHernandez 2/22/2016 17:13',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '473' ],		#self : OmReference [ '474' ],		#time : DateAndTime [ '2017-09-20T16:48:02.675245-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #vz,			#protocol : #accessing,			#sourceCode : 'vz\r\t"estimated linear velocity"\r\t^ vz',			#stamp : 'CaroHernandez 2/22/2016 17:13',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '474' ],		#self : OmReference [ '475' ],		#time : DateAndTime [ '2017-09-20T16:48:02.676372-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramDemoOption,				#isMetaSide : false			},			#name : #'vz:',			#protocol : #accessing,			#sourceCode : 'vz: aFloat\r\t"estimated linear velocity"\r\tvz := aFloat',			#stamp : 'CaroHernandez 2/22/2016 17:13',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '475' ],		#self : OmReference [ '476' ],		#time : DateAndTime [ '2017-09-20T16:48:02.677588-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDNavigationDatagramOption class',				#isMetaSide : true			},			#name : #'nextOptionTagIn:at:',			#protocol : #validation,			#sourceCode : 'nextOptionTagIn: aByteArray at: anIndex\r\t"returns the tag of the option encoded in the bytearray at the index anIndex"\r\t^ aByteArray unsignedShortAt: anIndex bigEndian: false',			#stamp : 'CaroHernandez 7/1/2016 14:26',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '476' ],		#self : OmReference [ '477' ],		#time : DateAndTime [ '2017-09-20T16:48:02.678943-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDNavigationDatagramOption class',				#isMetaSide : true			},			#name : #validSize,			#protocol : #validation,			#sourceCode : 'validSize\r\t^ self subclassResponsibility ',			#stamp : 'CaroHernandez 6/28/2016 18:44',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '477' ],		#self : OmReference [ '478' ],		#time : DateAndTime [ '2017-09-20T16:48:02.680542-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDNavigationDatagramOption class',				#isMetaSide : true			},			#name : #validTag,			#protocol : #validation,			#sourceCode : 'validTag\r\t^ self subclassResponsibility ',			#stamp : 'CaroHernandez 6/28/2016 18:44',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '478' ],		#self : OmReference [ '479' ],		#time : DateAndTime [ '2017-09-20T16:48:02.681929-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramOption,				#isMetaSide : false			},			#name : #asString,			#protocol : #converting,			#sourceCode : 'asString\r\t\r\tself subclassResponsibility ',			#stamp : 'CaroHernandez 5/7/2016 19:02',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '479' ],		#self : OmReference [ '480' ],		#time : DateAndTime [ '2017-09-20T16:48:02.682809-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramOption,				#isMetaSide : false			},			#name : #size,			#protocol : #accessing,			#sourceCode : 'size\r\t"size of this structure"\r\t^ size',			#stamp : 'CaroHernandez 5/7/2016 20:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '480' ],		#self : OmReference [ '481' ],		#time : DateAndTime [ '2017-09-20T16:48:02.683586-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramOption,				#isMetaSide : false			},			#name : #'size:',			#protocol : #accessing,			#sourceCode : 'size: anInt\r\t"size of this structure"\r\tsize := anInt',			#stamp : 'CaroHernandez 5/7/2016 20:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '481' ],		#self : OmReference [ '482' ],		#time : DateAndTime [ '2017-09-20T16:48:02.68436-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramOption,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\t"Navdata block (\'option\') identifier"\r\t^ tag',			#stamp : 'CaroHernandez 5/7/2016 20:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '482' ],		#self : OmReference [ '483' ],		#time : DateAndTime [ '2017-09-20T16:48:02.685141-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramOption,				#isMetaSide : false			},			#name : #'tag:',			#protocol : #accessing,			#sourceCode : 'tag: anInt\r\t"Navdata block (\'option\') identifier"\r\ttag := anInt',			#stamp : 'CaroHernandez 5/7/2016 20:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '483' ],		#self : OmReference [ '484' ],		#time : DateAndTime [ '2017-09-20T16:48:02.685906-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramOption,				#isMetaSide : false			},			#name : #'updateFrom:',			#protocol : #updating,			#sourceCode : 'updateFrom: anObject\r\r\tself subclassResponsibility. ',			#stamp : 'CaroHernandez 5/26/2016 01:25',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '484' ],		#self : OmReference [ '485' ],		#time : DateAndTime [ '2017-09-20T16:48:02.686667-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramOption,				#isMetaSide : false			},			#name : #'updateFromByteArray:at:',			#protocol : #updating,			#sourceCode : 'updateFromByteArray: aByteArray at: startByteIndex\r\r\tself subclassResponsibility. ',			#stamp : 'CaroHernandez 5/26/2016 01:25',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '485' ],		#self : OmReference [ '486' ],		#time : DateAndTime [ '2017-09-20T16:48:02.687503-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDNavigationDatagramVisionDetect class',				#isMetaSide : true			},			#name : #validSize,			#protocol : #validation,			#sourceCode : 'validSize\r\t^ 328',			#stamp : 'CaroHernandez 6/28/2016 18:46',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '486' ],		#self : OmReference [ '487' ],		#time : DateAndTime [ '2017-09-20T16:48:02.688278-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDNavigationDatagramVisionDetect class',				#isMetaSide : true			},			#name : #validTag,			#protocol : #validation,			#sourceCode : 'validTag\r\t^ 16',			#stamp : 'CaroHernandez 6/28/2016 18:45',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '487' ],		#self : OmReference [ '488' ],		#time : DateAndTime [ '2017-09-20T16:48:02.689158-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #asString,			#protocol : #converting,			#sourceCode : 'asString\r\t"Returns the datagram vision detect option contents as string"\r\t| cr |\r\tcr := Character cr asString .\r\t^ tag \t\t\t\tasString, \' :tag \', cr ,\r\t  size \t\t\tasString, \' :size \', cr,\r\t  nbDetected \tasString, \' :nb Detected\', cr,\r\t  type \t\t\tasString, \' :type\', cr,\r\t  xc\t\t\t\tasString, \' :xc\', cr,\r\t  yc \t\t\t\tasString, \' :yc\', cr,\r\t  width \t\t\tasString, \' :width\', cr,\r\t  height \t\t\tasString, \' :height\',cr,\r\t  distance \t\tasString, \' :distance\', cr,\r\t  (orientationAngle collect: [ :angle | (angle isNil) ifTrue: [0]ifFalse: [angle rounded ] ])\r\t\t\t\t\t\tasString, \' :orientation angle\', cr,\r\t  cameraSource \tasString, \' :camera source\', cr.',			#stamp : 'CaroHernandez 9/20/2016 15:21',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '488' ],		#self : OmReference [ '489' ],		#time : DateAndTime [ '2017-09-20T16:48:02.690595-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #cameraSource,			#protocol : #accessing,			#sourceCode : 'cameraSource\r\t^ cameraSource',			#stamp : 'CaroHernandez 5/15/2016 20:43',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '489' ],		#self : OmReference [ '490' ],		#time : DateAndTime [ '2017-09-20T16:48:02.691616-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'cameraSource:',			#protocol : #accessing,			#sourceCode : 'cameraSource: anArray\r\tcameraSource := anArray',			#stamp : 'CaroHernandez 5/8/2016 21:37',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '490' ],		#self : OmReference [ '491' ],		#time : DateAndTime [ '2017-09-20T16:48:02.692627-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'containsDetectedTag:atIndex:',			#protocol : #accessing,			#sourceCode : 'containsDetectedTag: aDetectedTag atIndex: anIndex\r\t"returns true if the vision datagram contains information about aDetectedTag (refers about tag type and camera source) in the specific index"\r\t\r\t(aDetectedTag = ARDConstant detectedTag_OR_IN_CV) \r\t\tifTrue: [ ^ ((self orientationAngle at: anIndex) ~= 0) & \r\t\t\t\t\t\t(((self cameraSource at:anIndex) = ARDConstant videoChannel_ZAP_CHANNEL_VERT) | \r\t\t\t\t\t\t((self cameraSource at:anIndex) = 2))]. "the camera source = 2 case, occurs when the drone is in \'hover on top of oriented roundel\' flying mode and detects the oriented roundel tag in its vertical camera"\r\t \r\t(aDetectedTag = ARDConstant detectedTag_SH_IN_CH) \r\t\tifTrue: [ ^ ((self orientationAngle at: anIndex) = 0) & \r\t\t\t\t\t\t((self cameraSource at:anIndex) = ARDConstant videoChannel_ZAP_CHANNEL_HORI )].\r\t\r\tException new: \'Detected tag type requested doesnt exists\' signal.',			#stamp : 'CaroHernandez 8/24/2016 17:39',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '491' ],		#self : OmReference [ '492' ],		#time : DateAndTime [ '2017-09-20T16:48:02.693766-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #distance,			#protocol : #accessing,			#sourceCode : 'distance\r\t^ distance',			#stamp : 'CaroHernandez 5/15/2016 20:43',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '492' ],		#self : OmReference [ '493' ],		#time : DateAndTime [ '2017-09-20T16:48:02.694821-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'distance:',			#protocol : #accessing,			#sourceCode : 'distance: anArray\r\tdistance := anArray',			#stamp : 'CaroHernandez 5/8/2016 21:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '493' ],		#self : OmReference [ '494' ],		#time : DateAndTime [ '2017-09-20T16:48:02.695799-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #height,			#protocol : #accessing,			#sourceCode : 'height\r\t^ height',			#stamp : 'CaroHernandez 5/15/2016 20:43',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '494' ],		#self : OmReference [ '495' ],		#time : DateAndTime [ '2017-09-20T16:48:02.696725-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'height:',			#protocol : #accessing,			#sourceCode : 'height: anArray\r\theight := anArray',			#stamp : 'CaroHernandez 5/8/2016 21:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '495' ],		#self : OmReference [ '496' ],		#time : DateAndTime [ '2017-09-20T16:48:02.697734-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\tnbDetected := 0.\r\tdataTypes := \'HHIIIIIIIIIIIIIIIIIIIIIIIIIffffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIffffIIII\'.\r\tdataset \t\t\t\t:= Array new: dataTypes size.\r\ttype \t\t\t\t\t:= Array new: 4.\r\txc \t\t\t\t\t\t:= \tArray new: 4.\r\tyc \t\t\t\t\t\t:= \tArray new: 4.\r\twidth \t\t\t\t\t:= Array new: 4.\t\r\theight \t\t\t\t:= Array new: 4.\t\r\tdistance \t\t\t\t:= Array new: 4.\r\torientationAngle \t:= Array new: 4.\r\tcameraSource \t\t:= Array new: 4.\r\t',			#stamp : 'CaroHernandez 6/20/2016 04:24',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '496' ],		#self : OmReference [ '497' ],		#time : DateAndTime [ '2017-09-20T16:48:02.698754-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #nbDetected,			#protocol : #accessing,			#sourceCode : 'nbDetected\r\t^ nbDetected',			#stamp : 'CaroHernandez 5/7/2016 19:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '497' ],		#self : OmReference [ '498' ],		#time : DateAndTime [ '2017-09-20T16:48:02.700145-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'nbDetected:',			#protocol : #accessing,			#sourceCode : 'nbDetected: anInt\r\tnbDetected := anInt',			#stamp : 'CaroHernandez 5/7/2016 19:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '498' ],		#self : OmReference [ '499' ],		#time : DateAndTime [ '2017-09-20T16:48:02.701155-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #orientationAngle,			#protocol : #accessing,			#sourceCode : 'orientationAngle\r\t^ orientationAngle',			#stamp : 'CaroHernandez 5/15/2016 20:44',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '499' ],		#self : OmReference [ '500' ],		#time : DateAndTime [ '2017-09-20T16:48:02.702156-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'orientationAngle:',			#protocol : #accessing,			#sourceCode : 'orientationAngle: anArray\r\torientationAngle := anArray',			#stamp : 'CaroHernandez 5/9/2016 01:21',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '500' ],		#self : OmReference [ '501' ],		#time : DateAndTime [ '2017-09-20T16:48:02.703132-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #rotation,			#protocol : #accessing,			#sourceCode : 'rotation\r\t^ rotation',			#stamp : 'CaroHernandez 5/15/2016 20:44',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '501' ],		#self : OmReference [ '502' ],		#time : DateAndTime [ '2017-09-20T16:48:02.704089-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'rotation:',			#protocol : #accessing,			#sourceCode : 'rotation: anArray\r\trotation := anArray',			#stamp : 'CaroHernandez 5/8/2016 21:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '502' ],		#self : OmReference [ '503' ],		#time : DateAndTime [ '2017-09-20T16:48:02.705049-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'tagsDetectedFrom:',			#protocol : #private,			#sourceCode : 'tagsDetectedFrom: anArray\r\tself nbDetected = 0\r\t\tifTrue: [ ^ { } ].\r\t^ anArray copyFrom: 1 to: self nbDetected.',			#stamp : 'CaroHernandez 5/15/2016 20:52',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '503' ],		#self : OmReference [ '504' ],		#time : DateAndTime [ '2017-09-20T16:48:02.706024-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #translation,			#protocol : #accessing,			#sourceCode : 'translation\r\t^ translation',			#stamp : 'CaroHernandez 5/15/2016 20:44',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '504' ],		#self : OmReference [ '505' ],		#time : DateAndTime [ '2017-09-20T16:48:02.70699-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'translation:',			#protocol : #accessing,			#sourceCode : 'translation: anArray\r\ttranslation := anArray',			#stamp : 'CaroHernandez 5/8/2016 21:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '505' ],		#self : OmReference [ '506' ],		#time : DateAndTime [ '2017-09-20T16:48:02.707946-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #type,			#protocol : #accessing,			#sourceCode : 'type\r\r\t^ type',			#stamp : 'CaroHernandez 6/7/2016 21:04',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '506' ],		#self : OmReference [ '507' ],		#time : DateAndTime [ '2017-09-20T16:48:02.709224-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'type:',			#protocol : #accessing,			#sourceCode : 'type: anArray\r\r\ttype := anArray',			#stamp : 'CaroHernandez 6/7/2016 21:03',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '507' ],		#self : OmReference [ '508' ],		#time : DateAndTime [ '2017-09-20T16:48:02.710413-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'unpackByteArray:from:startAt:',			#protocol : #accessing,			#sourceCode : 'unpackByteArray: aByteArray from: anArray startAt: startByteIndex\r\t| b r |\r\tr := 1.\r\tb := startByteIndex.\r\tanArray do: [ :each |\r\t\t(each = $I) \r\t\t\tifTrue: [ dataset at: r put: (aByteArray unsignedLongAt: b bigEndian: false). b := b+4. ].\r\t\t(each = $H) \r\t\t\tifTrue: [ dataset at: r put: (aByteArray unsignedShortAt: b bigEndian: false). b := b+2. ].\r\t\t(each = $f) \r\t\t\tifTrue: [ dataset at: r put: (aByteArray floatAt: b bigEndian: false). b := b+4. ].\r\t\tr := r+1.\r\t].',			#stamp : 'CaroHernandez 6/7/2016 21:01',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '508' ],		#self : OmReference [ '509' ],		#time : DateAndTime [ '2017-09-20T16:48:02.711845-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'updateFrom:',			#protocol : #updating,			#sourceCode : 'updateFrom: anARDNavigationDatagramVisionDetect\r\t(anARDNavigationDatagramVisionDetect tag asInteger = self class validTag &\r\tanARDNavigationDatagramVisionDetect size asInteger = self class validSize)\r\tifFalse: [ ^ false ].\r\t\r\tself \r\t\ttag: \t\t\tanARDNavigationDatagramVisionDetect tag;\r\t\tsize: \t\t\tanARDNavigationDatagramVisionDetect size;\r\t\tnbDetected: \tanARDNavigationDatagramVisionDetect nbDetected;\r\t \ttype: \t\t\tanARDNavigationDatagramVisionDetect type;\r\t \txc:    \t\tanARDNavigationDatagramVisionDetect xc;\r\t \tyc:    \t\tanARDNavigationDatagramVisionDetect yc; \r\t \twidth: \t\tanARDNavigationDatagramVisionDetect width;\r\t \theight: \t\tanARDNavigationDatagramVisionDetect height; \r\t \tdistance:  \tanARDNavigationDatagramVisionDetect distance;\r\t \torientationAngle: \r\t\t\t\t\t\tanARDNavigationDatagramVisionDetect orientationAngle;\r\t \trotation:  \tanARDNavigationDatagramVisionDetect rotation;\r\t \ttranslation: anARDNavigationDatagramVisionDetect translation;\r\t \tcameraSource:anARDNavigationDatagramVisionDetect cameraSource.\r\t^ true.',			#stamp : 'CaroHernandez 6/28/2016 18:48',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '509' ],		#self : OmReference [ '510' ],		#time : DateAndTime [ '2017-09-20T16:48:02.713687-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'updateFromByteArray:at:',			#protocol : #updating,			#sourceCode : 'updateFromByteArray: aByteArray at: startByteIndex\r\t"unpack ByteArray info into the instance variable \'dataset\'"\r\tself unpackByteArray: aByteArray from: dataTypes startAt: startByteIndex .\r\t((dataset at:1) = self class validTag & (dataset at:2) = self class validSize) \r\tifFalse: [ Transcript show: \'tag \',((dataset at:1) asString),\' size\', ((dataset at:2) asString) ;cr.^ false ].\r\tself \ttag: \t\t\t(dataset at:1);\r\t\t\tsize: \t\t\t(dataset at:2);\r\t\t\tnbDetected: \t(dataset at:3).\r\t1 to: 4 do: [ :i | self type     at: i put: ( dataset at: i+3) ].\r\t1 to: 4 do: [ :i | self xc \t  \t at: i put: ( dataset at: i+7) ].\r\t1 to: 4 do: [ :i | self yc \t  \t at: i put: ( dataset at: i+11) ].\r\t1 to: 4 do: [ :i | self width  \t at: i put: ( dataset at: i+15) ].\r\t1 to: 4 do: [ :i | self height \t at: i put: ( dataset at: i+19) ].\r\t1 to: 4 do: [ :i | self distance at: i put: ( dataset at: i+23) ].\r\t1 to: 4 do: [ :i | self orientationAngle at: i put: ( dataset at: i+27) ].\r\t"self\trotation:  \t(Array new: 4).(1 to: 4) do: [ :i | self rotation at: i put: (Array new: 9).\r\t\t\t\t\t\t\t\t\t\t\t\t\t(1 to: 9) do: [ :j |(self rotation at: i) at:j put: (dataset at: (i-1)*9+j+31)]].\r\tself\ttranslation: \t(Array new: 4).(1 to: 4) do: [ :i | self translation at: i put: (Array new: 3).\r\t\t\t\t\t\t\t\t\t\t\t\t\t(1 to: 3) do: [ :j |(self translation at: i) at:j put: (dataset at: (i-1)*3+j+67)]]."\r\t1 to: 4 do: [ :i | self cameraSource at: i put: ( dataset at: i+79) ].\r\t^ true.\r\t',			#stamp : 'CaroHernandez 6/30/2016 18:44',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '510' ],		#self : OmReference [ '511' ],		#time : DateAndTime [ '2017-09-20T16:48:02.71491-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #width,			#protocol : #accessing,			#sourceCode : 'width\r\t^ width',			#stamp : 'CaroHernandez 5/15/2016 20:44',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '511' ],		#self : OmReference [ '512' ],		#time : DateAndTime [ '2017-09-20T16:48:02.71596-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'width:',			#protocol : #accessing,			#sourceCode : 'width: anArray\r\twidth := anArray',			#stamp : 'CaroHernandez 5/8/2016 21:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '512' ],		#self : OmReference [ '513' ],		#time : DateAndTime [ '2017-09-20T16:48:02.717115-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #xc,			#protocol : #accessing,			#sourceCode : 'xc\r\t^ xc',			#stamp : 'CaroHernandez 5/15/2016 20:45',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '513' ],		#self : OmReference [ '514' ],		#time : DateAndTime [ '2017-09-20T16:48:02.718164-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'xc:',			#protocol : #accessing,			#sourceCode : 'xc: anArray\r\txc := anArray',			#stamp : 'CaroHernandez 5/7/2016 19:21',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '514' ],		#self : OmReference [ '515' ],		#time : DateAndTime [ '2017-09-20T16:48:02.719154-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #yc,			#protocol : #accessing,			#sourceCode : 'yc\r\t^ yc',			#stamp : 'CaroHernandez 5/15/2016 20:45',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '515' ],		#self : OmReference [ '516' ],		#time : DateAndTime [ '2017-09-20T16:48:02.72045-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDNavigationDatagramVisionDetect,				#isMetaSide : false			},			#name : #'yc:',			#protocol : #accessing,			#sourceCode : 'yc: anArray\r\tyc := anArray',			#stamp : 'CaroHernandez 5/7/2016 19:21',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '516' ],		#self : OmReference [ '517' ],		#time : DateAndTime [ '2017-09-20T16:48:02.721453-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #adcWatchdog,			#protocol : #accessing,			#sourceCode : 'adcWatchdog\r\t^ (hexState bitAt:30)',			#stamp : 'CaroHernandez 3/12/2016 13:31',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '517' ],		#self : OmReference [ '518' ],		#time : DateAndTime [ '2017-09-20T16:48:02.72239-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #altitudeControlAlgo,			#protocol : #accessing,			#sourceCode : 'altitudeControlAlgo\r\t^ (hexState bitAt:5)',			#stamp : 'CaroHernandez 3/12/2016 13:33',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '518' ],		#self : OmReference [ '519' ],		#time : DateAndTime [ '2017-09-20T16:48:02.723291-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #angles,			#protocol : #accessing,			#sourceCode : 'angles\r\t^ (hexState bitAt:20)',			#stamp : 'CaroHernandez 3/12/2016 13:27',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '519' ],		#self : OmReference [ '520' ],		#time : DateAndTime [ '2017-09-20T16:48:02.724198-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #aquisitionThread,			#protocol : #accessing,			#sourceCode : 'aquisitionThread\r\t^ (hexState bitAt:28)',			#stamp : 'CaroHernandez 3/12/2016 13:30',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '520' ],		#self : OmReference [ '521' ],		#time : DateAndTime [ '2017-09-20T16:48:02.725201-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #asString,			#protocol : #converting,			#sourceCode : 'asString\r\t"returns drone\'s state as string "\r\t| message tab cr |\r\ttab := Character tab asString .\r\tcr := Character cr asString .\r\tmessage :=  \r\t\t\t\ttab, self flyMask  asString, \' : FLY MASK\', cr,\r\t\t\t\ttab, self videoMask asString, \' : VIDEO MASK\', cr,\r\t\t\t\ttab, self visionMask asString, \' : VISION MASK\' , cr, \r\t\t\t\ttab, self controlAlgo asString, \' : CONTROL ALGO\' , cr,\r\t\t\t\ttab, self altitudeControlAlgo asString, \' : ALTITUDE CONTROL ALGO\' , cr,\r\t\t\t\ttab, self userFeedback asString, \' : USER feedback\' , cr,\r\t\t\t\ttab, self controlCommandAck asString, \' : Control command ACK\' , cr,\r\t\t\t\ttab, self cameraEnable asString, \' : Camera enable\' , cr,\r\t\t\t\ttab, self travelingEnable asString, \' : Travelling enable\' , cr,\r\t\t\t\ttab, self usbKey asString, \' : USB key\' , cr,\r\t\t\t\ttab, self navdataDemo asString, \' : Navdata demo\' , cr,\r\t\t\t\ttab, self navdataBootstrap asString, \' : Navdata bootstrap\' , cr,\r\t\t\t\ttab, self motorStatus asString, \' : Motors status\' , cr,\r\t\t\t\ttab, self communicationLost asString, \' : Communication Lost\' , cr,\r\t\t\t\ttab, self problemWithGyromometers asString, \' : Problem with gyrometers\' , cr,\r\t\t\t\ttab, self vBatLow asString, \' : VBat low\' , cr,\r\t\t\t\ttab, self userEmergencyLanding asString, \' : User Emergency Landing\' , cr, \r\t\t\t\ttab, self timerElapsed asString, \' : Timer elapsed\' , cr,\r\t\t\t\ttab, self magnetometerCalibrationState asString, \' : Magnetometer calibration state\' , cr,\r\t\t\t\ttab, self angles asString, \' : Angles\' , cr,\r\t\t\t\ttab, self wind asString, \' : WIND MASK\' , cr,\r\t\t\t\ttab, self ultrasonicSensor asString, \' : Ultrasonic sensor\' , cr,\r\t\t\t\ttab, self cutoutSystemDetection asString, \' : Cutout system detection\' , cr,\r\t\t\t\ttab, self picVersionNumberOk asString, \' : PIC Version number OK\' , cr,\r\t\t\t\ttab, self atCodecThread asString, \' : ATCodec thread ON\' , cr,\r\t\t\t\ttab, self navdataThread asString, \' : Navdata thread ON\' , cr,\r\t\t\t\ttab, self videoThread asString, \' : Video thread ON\' , cr,\r\t\t\t\ttab, self aquisitionThread asString, \' : Aquisition thread ON\' , cr,\r\t\t\t\ttab, self ctrlWatchdog asString, \' : CTRL Watchdog\' , cr,\r\t\t\t\ttab, self adcWatchdog asString, \' : ADC Watchdog\' , cr,\r\t\t\t\ttab, self communicationWatchdog asString, \' : Communication Watchdog\' , cr,\r\t\t\t\ttab, self emergencyLanding asString, \' : Emergency landing\' , cr.\r\t\t\t\t\r\t^ message',			#stamp : 'CaroHernandez 7/20/2016 21:02',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '521' ],		#self : OmReference [ '522' ],		#time : DateAndTime [ '2017-09-20T16:48:02.726734-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #asStringVerbose,			#protocol : #converting,			#sourceCode : 'asStringVerbose\r\t"returns drone\'s state as string "\r\t| message tab cr |\r\ttab := Character tab asString .\r\tcr := Character cr asString .\r\t\r\tmessage := \'DRONE STATE :\' ,cr , \r\t\t\t\ttab, self flyMask  asString, \' : FLY MASK, (0) ardrone is landed, (1) ardrone is flying\' , cr,\r\t\t\t\ttab, self videoMask asString, \' : VIDEO MASK, (0) video disable, (1) video enable\' , cr,\r\t\t\t\ttab, self visionMask asString, \' : VISION MASK , (0) vision disable, (1) vision enable\' , cr, \r\t\t\t\ttab, self controlAlgo asString, \' : CONTROL ALGO, (0) euler angles control, (1) angular speed control\' , cr,\r\t\t\t\ttab, self altitudeControlAlgo asString, \' : ALTITUDE CONTROL ALGO, (0) altitude control inactive (1) altitude control active\' , cr,\r\t\t\t\ttab, self userFeedback asString, \' : USER feedback, Start button state\' , cr,\r\t\t\t\ttab, self controlCommandAck asString, \' : Control command ACK, (0) None, (1) one received\' , cr,\r\t\t\t\ttab, self cameraEnable asString, \' : Camera enable, (0) Camera enable, (1) camera disable\' , cr,\r\t\t\t\ttab, self travelingEnable asString, \' : Travelling enable, (0) disable, (1) enable\' , cr,\r\t\t\t\ttab, self usbKey asString, \' : USB key, (0) usb key not ready, (1) usb key ready\' , cr,\r\t\t\t\ttab, self navdataDemo asString, \' : Navdata demo, (0) All navdata, (1) only navdata demo\' , cr,\r\t\t\t\ttab, self navdataBootstrap asString, \' : Navdata bootstrap, (0) options sent in all or demo mode, (1) no navdata options sent\' , cr,\r\t\t\t\ttab, self motorStatus asString, \' : Motors status, (0) Ok, (1) Motors Com is down\' , cr,\r\t\t\t\ttab, self communicationLost asString, \' : Communication Lost, (1) com problem, (0) Com is ok\' , cr,\r\t\t\t\ttab, self problemWithGyromometers asString, \' : Problem with gyrometers\' , cr,\r\t\t\t\ttab, self vBatLow asString, \' : VBat low, (1) too low, (0) Ok\' , cr,\r\t\t\t\ttab, self userEmergencyLanding asString, \' : User Emergency Landing, (1) User EL is ON, (0) User EL is OFF\' , cr, \r\t\t\t\ttab, self timerElapsed asString, \' : Timer elapsed, (1) elapsed, (0) not elapsed\' , cr,\r\t\t\t\ttab, self magnetometerCalibrationState asString, \' : Magnetometer calibration state : (0) Ok, no calibration needed, (1) not ok, calibration needed\' , cr,\r\t\t\t\ttab, self angles asString, \' : Angles, (0) Ok, (1) out of range\' , cr,\r\t\t\t\ttab, self wind asString, \' : WIND MASK, (0) ok, (1) Too much wind\' , cr,\r\t\t\t\ttab, self ultrasonicSensor asString, \' : Ultrasonic sensor, (0) Ok, (1) deaf\' , cr,\r\t\t\t\ttab, self cutoutSystemDetection asString, \' : Cutout system detection, (0) Not detected, (1) detected\' , cr,\r\t\t\t\ttab, self picVersionNumberOk asString, \' : PIC Version number OK, (0) a bad version number, (1) version number is OK\' , cr,\r\t\t\t\ttab, self atCodecThread asString, \' : ATCodec thread ON, (0) thread OFF (1) thread ON\' , cr,\r\t\t\t\ttab, self navdataThread asString, \' : Navdata thread ON, (0) thread OFF (1) thread ON\' , cr,\r\t\t\t\ttab, self videoThread asString, \' : Video thread ON, (0) thread OFF (1) thread ON\' , cr,\r\t\t\t\ttab, self aquisitionThread asString, \' : Aquisition thread ON, (0) thread OFF (1) thread ON\' , cr,\r\t\t\t\ttab, self ctrlWatchdog asString, \' : CTRL Watchdog, (1) delay in control execution (> 5ms), (0) control is well scheduled // Check frequency of control loop\' , cr,\r\t\t\t\ttab, self adcWatchdog asString, \' : ADC Watchdog, (1) delay in uart2 dsr (> 5ms), (0) uart2 is good // Check frequency of uart2 dsr (com with adc)\' , cr,\r\t\t\t\ttab, self communicationWatchdog asString, \' : Communication Watchdog, (1) com problem, (0) Com is ok // Check if we have an active connection with a client\' , cr,\r\t\t\t\ttab, self emergencyLanding asString, \' : Emergency landing, (0) no emergency, (1) emergency\' , cr.\r\t\t\t\t\r\t^ message',			#stamp : 'CaroHernandez 7/19/2016 21:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '522' ],		#self : OmReference [ '523' ],		#time : DateAndTime [ '2017-09-20T16:48:02.728101-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #atCodecThread,			#protocol : #accessing,			#sourceCode : 'atCodecThread\r\t^ (hexState bitAt:25)',			#stamp : 'CaroHernandez 3/12/2016 13:30',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '523' ],		#self : OmReference [ '524' ],		#time : DateAndTime [ '2017-09-20T16:48:02.729518-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #cameraEnable,			#protocol : #accessing,			#sourceCode : 'cameraEnable\r\t^ (hexState bitAt:8)',			#stamp : 'CaroHernandez 3/15/2016 16:17',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '524' ],		#self : OmReference [ '525' ],		#time : DateAndTime [ '2017-09-20T16:48:02.730575-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #communicationLost,			#protocol : #accessing,			#sourceCode : 'communicationLost\r\t^ (hexState bitAt:14)',			#stamp : 'CaroHernandez 3/12/2016 13:26',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '525' ],		#self : OmReference [ '526' ],		#time : DateAndTime [ '2017-09-20T16:48:02.731512-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #communicationWatchdog,			#protocol : #accessing,			#sourceCode : 'communicationWatchdog\r\t^ (hexState bitAt:31)',			#stamp : 'CaroHernandez 3/12/2016 13:31',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '526' ],		#self : OmReference [ '527' ],		#time : DateAndTime [ '2017-09-20T16:48:02.732458-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #controlAlgo,			#protocol : #accessing,			#sourceCode : 'controlAlgo\r\t^ (hexState bitAt:4)',			#stamp : 'CaroHernandez 3/12/2016 13:24',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '527' ],		#self : OmReference [ '528' ],		#time : DateAndTime [ '2017-09-20T16:48:02.73336-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #controlCommandAck,			#protocol : #accessing,			#sourceCode : 'controlCommandAck\r\t^ (hexState bitAt:7)',			#stamp : 'CaroHernandez 3/12/2016 13:25',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '528' ],		#self : OmReference [ '529' ],		#time : DateAndTime [ '2017-09-20T16:48:02.734411-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #ctrlWatchdog,			#protocol : #accessing,			#sourceCode : 'ctrlWatchdog\r\t^ (hexState bitAt:29)',			#stamp : 'CaroHernandez 3/12/2016 13:30',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '529' ],		#self : OmReference [ '530' ],		#time : DateAndTime [ '2017-09-20T16:48:02.735436-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #cutoutSystemDetection,			#protocol : #accessing,			#sourceCode : 'cutoutSystemDetection\r\t^ (hexState bitAt:23)',			#stamp : 'CaroHernandez 3/12/2016 13:28',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '530' ],		#self : OmReference [ '531' ],		#time : DateAndTime [ '2017-09-20T16:48:02.736433-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #emergencyLanding,			#protocol : #accessing,			#sourceCode : 'emergencyLanding\r\t^ (hexState bitAt:32)',			#stamp : 'CaroHernandez 4/21/2016 12:37',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '531' ],		#self : OmReference [ '532' ],		#time : DateAndTime [ '2017-09-20T16:48:02.737406-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #flyMask,			#protocol : #accessing,			#sourceCode : 'flyMask\r\t^ (hexState bitAt:1)',			#stamp : 'CaroHernandez 3/12/2016 13:23',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '532' ],		#self : OmReference [ '533' ],		#time : DateAndTime [ '2017-09-20T16:48:02.738384-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #hexState,			#protocol : #accessing,			#sourceCode : 'hexState\r\t^ hexState',			#stamp : 'CaroHernandez 3/12/2016 13:22',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '533' ],		#self : OmReference [ '534' ],		#time : DateAndTime [ '2017-09-20T16:48:02.739717-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #'hexState:',			#protocol : #accessing,			#sourceCode : 'hexState: anHex\r\thexState := anHex',			#stamp : 'CaroHernandez 3/12/2016 13:22',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '534' ],		#self : OmReference [ '535' ],		#time : DateAndTime [ '2017-09-20T16:48:02.74084-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #magnetometerCalibrationState,			#protocol : #accessing,			#sourceCode : 'magnetometerCalibrationState\r\t^ (hexState bitAt:19)',			#stamp : 'CaroHernandez 3/15/2016 16:20',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '535' ],		#self : OmReference [ '536' ],		#time : DateAndTime [ '2017-09-20T16:48:02.741906-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #motorStatus,			#protocol : #accessing,			#sourceCode : 'motorStatus\r\t^ (hexState bitAt:13)',			#stamp : 'CaroHernandez 3/12/2016 13:26',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '536' ],		#self : OmReference [ '537' ],		#time : DateAndTime [ '2017-09-20T16:48:02.74294-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #navdataBootstrap,			#protocol : #accessing,			#sourceCode : 'navdataBootstrap\r\t^ (hexState bitAt:12)',			#stamp : 'CaroHernandez 3/12/2016 13:26',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '537' ],		#self : OmReference [ '538' ],		#time : DateAndTime [ '2017-09-20T16:48:02.744176-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #navdataDemo,			#protocol : #accessing,			#sourceCode : 'navdataDemo\r\t^ (hexState bitAt:11)',			#stamp : 'CaroHernandez 3/12/2016 13:25',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '538' ],		#self : OmReference [ '539' ],		#time : DateAndTime [ '2017-09-20T16:48:02.745461-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #navdataThread,			#protocol : #accessing,			#sourceCode : 'navdataThread\r\t^ (hexState bitAt:26)',			#stamp : 'CaroHernandez 3/12/2016 13:30',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '539' ],		#self : OmReference [ '540' ],		#time : DateAndTime [ '2017-09-20T16:48:02.747012-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #picVersionNumberOk,			#protocol : #accessing,			#sourceCode : 'picVersionNumberOk\r\t^ (hexState bitAt:24)',			#stamp : 'CaroHernandez 3/12/2016 13:29',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '540' ],		#self : OmReference [ '541' ],		#time : DateAndTime [ '2017-09-20T16:48:02.747967-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #problemWithGyromometers,			#protocol : #accessing,			#sourceCode : 'problemWithGyromometers\r\t^ (hexState bitAt:15)',			#stamp : 'CaroHernandez 3/12/2016 13:26',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '541' ],		#self : OmReference [ '542' ],		#time : DateAndTime [ '2017-09-20T16:48:02.748719-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #timerElapsed,			#protocol : #accessing,			#sourceCode : 'timerElapsed\r\t^ (hexState bitAt:18)',			#stamp : 'CaroHernandez 3/12/2016 13:27',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '542' ],		#self : OmReference [ '543' ],		#time : DateAndTime [ '2017-09-20T16:48:02.749896-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #travelingEnable,			#protocol : #accessing,			#sourceCode : 'travelingEnable\r\t^ (hexState bitAt:9)',			#stamp : 'CaroHernandez 3/15/2016 16:17',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '543' ],		#self : OmReference [ '544' ],		#time : DateAndTime [ '2017-09-20T16:48:02.750693-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #ultrasonicSensor,			#protocol : #accessing,			#sourceCode : 'ultrasonicSensor\r\t^ (hexState bitAt:22)',			#stamp : 'CaroHernandez 3/12/2016 13:28',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '544' ],		#self : OmReference [ '545' ],		#time : DateAndTime [ '2017-09-20T16:48:02.751483-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #'updateFromHex:',			#protocol : #updating,			#sourceCode : 'updateFromHex: anHex\r\t"updates this ARDState instance, based on the anHex value\r\tDrone state is stored as 32 bit hexadecimal value. Each bit indicates the state for a drone feature."\r\t^ self hexState: anHex ',			#stamp : 'CaroHernandez 5/26/2016 03:09',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '545' ],		#self : OmReference [ '546' ],		#time : DateAndTime [ '2017-09-20T16:48:02.752288-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #usbKey,			#protocol : #accessing,			#sourceCode : 'usbKey\r\t^ (hexState bitAt:10)',			#stamp : 'CaroHernandez 3/15/2016 16:18',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '546' ],		#self : OmReference [ '547' ],		#time : DateAndTime [ '2017-09-20T16:48:02.753113-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #userEmergencyLanding,			#protocol : #accessing,			#sourceCode : 'userEmergencyLanding\r\t^ (hexState bitAt:17)',			#stamp : 'CaroHernandez 3/15/2016 16:19',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '547' ],		#self : OmReference [ '548' ],		#time : DateAndTime [ '2017-09-20T16:48:02.75391-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #userFeedback,			#protocol : #accessing,			#sourceCode : 'userFeedback\r\t^ (hexState bitAt:6)',			#stamp : 'CaroHernandez 3/12/2016 13:24',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '548' ],		#self : OmReference [ '549' ],		#time : DateAndTime [ '2017-09-20T16:48:02.754715-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #vBatLow,			#protocol : #accessing,			#sourceCode : 'vBatLow\r\thexState ifNil: [^nil].\r\t^ (hexState bitAt:16)',			#stamp : 'CaroHernandez 6/28/2016 00:54',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '549' ],		#self : OmReference [ '550' ],		#time : DateAndTime [ '2017-09-20T16:48:02.755513-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #videoMask,			#protocol : #accessing,			#sourceCode : 'videoMask\r\t^ (hexState bitAt:2)',			#stamp : 'CaroHernandez 3/12/2016 13:23',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '550' ],		#self : OmReference [ '551' ],		#time : DateAndTime [ '2017-09-20T16:48:02.756355-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #videoThread,			#protocol : #accessing,			#sourceCode : 'videoThread\r\t^ (hexState bitAt:27)',			#stamp : 'CaroHernandez 3/12/2016 13:30',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '551' ],		#self : OmReference [ '552' ],		#time : DateAndTime [ '2017-09-20T16:48:02.757586-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #visionMask,			#protocol : #accessing,			#sourceCode : 'visionMask\r\t^ (hexState bitAt:3)',			#stamp : 'CaroHernandez 3/12/2016 13:23',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '552' ],		#self : OmReference [ '553' ],		#time : DateAndTime [ '2017-09-20T16:48:02.758461-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDState,				#isMetaSide : false			},			#name : #wind,			#protocol : #accessing,			#sourceCode : 'wind\r\t^ (hexState bitAt:21)',			#stamp : 'CaroHernandez 3/12/2016 13:27',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '553' ],		#self : OmReference [ '554' ],		#time : DateAndTime [ '2017-09-20T16:48:02.759417-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDVisionDetectAnalyst class',				#isMetaSide : true			},			#name : #'withARDrone:',			#protocol : #'instance creation',			#sourceCode : 'withARDrone: anARDrone\r\t"Returns a visionDetectAnalyst analizing the vision detect information received from the drone via navdata"\r\t^ (self new)\r\t\t\tarDrone: anARDrone',			#stamp : 'CaroHernandez 7/23/2016 14:46',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '554' ],		#self : OmReference [ '555' ],		#time : DateAndTime [ '2017-09-20T16:48:02.760489-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDVisionDetectAnalyst,				#isMetaSide : false			},			#name : #arDrone,			#protocol : #accessing,			#sourceCode : 'arDrone\r\r\t^ arDrone',			#stamp : 'CaroHernandez 7/23/2016 14:54',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '555' ],		#self : OmReference [ '556' ],		#time : DateAndTime [ '2017-09-20T16:48:02.76151-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDVisionDetectAnalyst,				#isMetaSide : false			},			#name : #'arDrone:',			#protocol : #accessing,			#sourceCode : 'arDrone: anARDrone\r\r\tarDrone := anARDrone.\r\tself unsubscribe.\r\tself subscribe.',			#stamp : 'CaroHernandez 7/23/2016 15:04',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '556' ],		#self : OmReference [ '557' ],		#time : DateAndTime [ '2017-09-20T16:48:02.762594-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDVisionDetectAnalyst,				#isMetaSide : false			},			#name : #arrayLength,			#protocol : #accessing-parameters,			#sourceCode : 'arrayLength\r\t"size of the visionDatagrams array (used for storing the last n datagrams received from the drone"\r\t^ 3',			#stamp : 'CaroHernandez 7/23/2016 14:54',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '557' ],		#self : OmReference [ '558' ],		#time : DateAndTime [ '2017-09-20T16:48:02.763669-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDVisionDetectAnalyst,				#isMetaSide : false			},			#name : #destroy,			#protocol : #initialization,			#sourceCode : 'destroy\r\tself unsubscribe ',			#stamp : 'CaroHernandez 7/23/2016 14:55',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '558' ],		#self : OmReference [ '559' ],		#time : DateAndTime [ '2017-09-20T16:48:02.764695-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDVisionDetectAnalyst,				#isMetaSide : false			},			#name : #'detectedTag:',			#protocol : #'tags detection',			#sourceCode : 'detectedTag: aDetectedTagType\r\t"Returns the ARDDetectedTag object that represent the detected tag of the type and from the camera specified by the argument aDetectedType. \r\taDetectedTagType is an enumeration, it is defined in ARDConstant. Its values can be:\r\t- detectedTag_OR_IN_CV: Oriented roundel detected in vertical camera\r\t- detectedTag_SH_IN_CH: Shell tag detected in horizontal camera "\r\t^ [(detectedTags select: \r\t\t\t[ :dt | dt detectedTagType = aDetectedTagType ]) \r\t\tat:1\r\t\t] on: SubscriptOutOfBounds do: [ ^ nil ]\r\t',			#stamp : 'CaroHernandez 8/22/2016 17:53',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '559' ],		#self : OmReference [ '560' ],		#time : DateAndTime [ '2017-09-20T16:48:02.765703-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDVisionDetectAnalyst,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tlastVisionDatagram := ARDNavigationDatagramVisionDetect new.\r\r\tdetectedTags := \r\t\t{ "for OR_IN_CV (Oriented roundel in vertical camera)" \r\t\t\tARDDetectedTag new detectedTagType: \r\t\t\t\tARDConstant detectedTag_OR_IN_CV.\r\t\t\t"for SH_IN_CH (Shell in horizontal camera)" \r\t\t\tARDDetectedTag new detectedTagType: \r\t\t\t\tARDConstant detectedTag_SH_IN_CH }\r\t',			#stamp : 'CaroHernandez 7/29/2016 16:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '560' ],		#self : OmReference [ '561' ],		#time : DateAndTime [ '2017-09-20T16:48:02.767079-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDVisionDetectAnalyst,				#isMetaSide : false			},			#name : #nTagsDetected,			#protocol : #'tags detection',			#sourceCode : 'nTagsDetected\r\t"returns the number of tags detected informed by the last datagram received"\r\t^ lastVisionDatagram nbDetected .\r\t',			#stamp : 'CaroHernandez 7/24/2016 22:50',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '561' ],		#self : OmReference [ '562' ],		#time : DateAndTime [ '2017-09-20T16:48:02.768127-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDVisionDetectAnalyst,				#isMetaSide : false			},			#name : #subscribe,			#protocol : #subscription,			#sourceCode : 'subscribe\r\tself arDrone announcer \r\t\tsubscribe: DroneNavdataPacketReceived\r\t\tdo: [ self updateFromVisionDatagram: (arDrone lastNavdataPacketReceived options at:2). ].',			#stamp : 'CaroHernandez 7/25/2016 23:08',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '562' ],		#self : OmReference [ '563' ],		#time : DateAndTime [ '2017-09-20T16:48:02.769342-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDVisionDetectAnalyst,				#isMetaSide : false			},			#name : #unsubscribe,			#protocol : #subscription,			#sourceCode : 'unsubscribe\r\tself arDrone announcer unsubscribe: DroneNavdataPacketReceived\r\t\t',			#stamp : 'CaroHernandez 7/23/2016 14:51',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '563' ],		#self : OmReference [ '564' ],		#time : DateAndTime [ '2017-09-20T16:48:02.770565-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDVisionDetectAnalyst,				#isMetaSide : false			},			#name : #'updateFromVisionDatagram:',			#protocol : #private,			#sourceCode : 'updateFromVisionDatagram: anARDNavigationDatagramVisionDetect\r\t| dg |\r\tdg := anARDNavigationDatagramVisionDetect.\r\tlastVisionDatagram := dg.\r\tdetectedTags \r\t\tdo: [ :each | each detected: false].\r\t\r\t1 to: dg nbDetected \r\t\tdo: [ :i |\r\t\t\t\tdetectedTags do: \r\t\t\t\t[ :dt |\r\t\t\t\t\t(dg\r\t\t\t\t\t\tcontainsDetectedTag: (dt detectedTagType) \r\t\t\t\t\t\tatIndex: i)\r\t\t\t\t\t\tifTrue: [ dt updateFrom: dg index: i ]]]',			#stamp : 'CaroHernandez 7/26/2016 00:14',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '564' ],		#self : OmReference [ '565' ],		#time : DateAndTime [ '2017-09-20T16:48:02.77162-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDrone class',				#isMetaSide : true			},			#name : #'CRC32From:',			#protocol : #'as yet unclassified',			#sourceCode : 'CRC32From: aString\r\t^ (((CRC crc32FromCollection: aString asString) hex asString substrings: \'r\') at:2) asLowercase ',			#stamp : 'CaroHernandez 9/16/2016 01:01',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '565' ],		#self : OmReference [ '566' ],		#time : DateAndTime [ '2017-09-20T16:48:02.772617-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDrone class',				#isMetaSide : true			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\t\r\tself error: \'Should use ARDrone singleton\'',			#stamp : 'CaroHernandez 3/25/2016 18:10',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '566' ],		#self : OmReference [ '567' ],		#time : DateAndTime [ '2017-09-20T16:48:02.773677-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDrone class',				#isMetaSide : true			},			#name : #newUniqueInstance,			#protocol : #'instance creation',			#sourceCode : 'newUniqueInstance\r\tuniqueInstance ifNotNil: [ uniqueInstance destroyExceptionHandlers ].\r\tuniqueInstance := self basicNew.\r\tuniqueInstance \tannouncer subscriptions reset.\r\r\t^ uniqueInstance',			#stamp : 'CaroHernandez 8/21/2016 19:43',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '567' ],		#self : OmReference [ '568' ],		#time : DateAndTime [ '2017-09-20T16:48:02.774908-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ARDrone class',				#isMetaSide : true			},			#name : #uniqueInstance,			#protocol : #'instance creation',			#sourceCode : 'uniqueInstance\r\t\r\tuniqueInstance ifNil: [ uniqueInstance := self basicNew ].\r\tuniqueInstance destroyExceptionHandlers.\r\tuniqueInstance \tannouncer subscriptions reset.\r\t^ uniqueInstance.',			#stamp : 'CaroHernandez 8/21/2016 19:44',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '568' ],		#self : OmReference [ '569' ],		#time : DateAndTime [ '2017-09-20T16:48:02.776112-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'addHandlerFor:do:',			#protocol : #'public api',			#sourceCode : 'addHandlerFor: anExceptionClass do: aBlock\r\t"Adds a handler for a specific exception. This handler is specially designed for drone exceptions. \r\tArguments:\r\t\t- anExceptionClass: the exception as a class\r\t\t- aBlock: a block of code, it must receive the exception as argument.\r\tExample: \r\t\tself addHandlerFor: DroneConnectionInterrupted do: [ :ex | Transcript show: \'connection interrumpted!\';cr ]"\r\t\t\r\tself exceptionHandlers at: anExceptionClass name asSymbol put: aBlock.\r',			#stamp : 'CaroHernandez 6/25/2016 19:11',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '569' ],		#self : OmReference [ '570' ],		#time : DateAndTime [ '2017-09-20T16:48:02.777912-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #altitude,			#protocol : #'public api-state',			#sourceCode : 'altitude\r\t"return the current altitude (as an int in centimeters)"\r\tself connectionState ~= ARDConstant connection_CONNECTED ifTrue: [ ^ nil ]. \r\t^ self navdataManager lastDatagramReceived droneAltitude.',			#stamp : 'CaroHernandez 6/27/2016 21:33',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '570' ],		#self : OmReference [ '571' ],		#time : DateAndTime [ '2017-09-20T16:48:02.779578-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'animateFlight:duration:',			#protocol : #'public api',			#sourceCode : 'animateFlight: aFlightAnimationNumber duration: aDuration\r\t"Animates the drone LEDs. Arguments:\r\t- LedAnimation - [ Integer ] Enumeration, its values are defined in the ARDCommand class side.\r\t- Duration - [ milliseconds ]"\r\t\r\tcommandManager \r\t\tanimateFlight: aFlightAnimationNumber \r\t\tduration: aDuration \r\r\t',			#stamp : 'CaroHernandez 5/2/2016 14:30',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '571' ],		#self : OmReference [ '572' ],		#time : DateAndTime [ '2017-09-20T16:48:02.781013-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'animateLEDs:frequency:duration:',			#protocol : #'public api',			#sourceCode : 'animateLEDs: aLEDAnimationNumber frequency: aFrequency duration: aDuration\r\t"Animates the drone LEDs. Arguments:\r\t- LedAnimation - [ Integer ] Enumeration, its values are defined in the ARDCommand class side.\r\t- Frequency - [ Hertz ]\r\t- Duration - [ seconds ]"\r\t\r\tcommandManager \r\t\tanimateLEDs: aLEDAnimationNumber \r\t\tfrequency: aFrequency \r\t\tduration: aDuration \r\r\t',			#stamp : 'CaroHernandez 4/9/2016 08:17',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '572' ],		#self : OmReference [ '573' ],		#time : DateAndTime [ '2017-09-20T16:48:02.782216-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #announcer,			#protocol : #accessing,			#sourceCode : 'announcer\r\t"Returns an announcer for announcing drone\'s state changes"\r\t^ announcer ifNil: [ announcer := Announcer new ]',			#stamp : 'CaroHernandez 3/16/2016 14:08',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '573' ],		#self : OmReference [ '574' ],		#time : DateAndTime [ '2017-09-20T16:48:02.783346-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #authAdapter,			#protocol : #accessing-adapters,			#sourceCode : 'authAdapter\r\t"Returns the ARDAdapterUDP used for authenticate to the drone"\r\t^ authAdapter',			#stamp : 'CaroHernandez 4/30/2016 17:11',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '574' ],		#self : OmReference [ '575' ],		#time : DateAndTime [ '2017-09-20T16:48:02.784501-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #authTimeout,			#protocol : #constants,			#sourceCode : 'authTimeout\r\t"Returns the timeout for trying to authenticate to the drone\'s firmware."\r\t^ 5 second',			#stamp : 'CaroHernandez 3/24/2016 20:52',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '575' ],		#self : OmReference [ '576' ],		#time : DateAndTime [ '2017-09-20T16:48:02.785694-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #batteryLevel,			#protocol : #'public api-state',			#sourceCode : 'batteryLevel\r\t"returns the remaining battery percentage as an integer"\r\tself connectionState ~= ARDConstant connection_CONNECTED ifTrue: [ ^ nil ].\r\t^ self navdataManager lastDatagramReceived droneBatteryLevel. ',			#stamp : 'CaroHernandez 6/27/2016 21:33',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '576' ],		#self : OmReference [ '577' ],		#time : DateAndTime [ '2017-09-20T16:48:02.786947-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #changeVideoChannel,			#protocol : #'public api-video',			#sourceCode : 'changeVideoChannel\r\r\tcurrentVideoChannel :=\r\t\t(currentVideoChannel isNil) \r\t\tifTrue: [ ARDConstant videoChannel_ZAP_CHANNEL_VERT ]\r\t\tifFalse: [ (currentVideoChannel asInteger+ 1) % 2 ] .\r\tself commandManager configVideoChannel: currentVideoChannel. ',			#stamp : 'CaroHernandez 9/12/2016 15:34',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '577' ],		#self : OmReference [ '578' ],		#time : DateAndTime [ '2017-09-20T16:48:02.788187-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #commandAdapter,			#protocol : #accessing-adapters,			#sourceCode : 'commandAdapter\r\t"Returns the ARDBridge used for sending AT commands"\r\t^ commandAdapter',			#stamp : 'CaroHernandez 3/25/2016 12:23',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '578' ],		#self : OmReference [ '579' ],		#time : DateAndTime [ '2017-09-20T16:48:02.789818-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #commandManager,			#protocol : #accessing-managers,			#sourceCode : 'commandManager\r\t"Returns the ARDCommandManager used for managing AT commands"\r\t^ commandManager.',			#stamp : 'CaroHernandez 3/24/2016 18:08',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '579' ],		#self : OmReference [ '580' ],		#time : DateAndTime [ '2017-09-20T16:48:02.790991-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #configFlightWithoutShell,			#protocol : #'public api-config',			#sourceCode : 'configFlightWithoutShell\r\t"Returns the configurated value inside the drone for the control:flight_without_shell variable, it can be true of false"\r\t^ self configurationManager valueForParameter: \'control:flight_without_shell\' .\r',			#stamp : 'CaroHernandez 6/27/2016 21:45',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '580' ],		#self : OmReference [ '581' ],		#time : DateAndTime [ '2017-09-20T16:48:02.792247-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'configFlightWithoutShell:',			#protocol : #'public api-config',			#sourceCode : 'configFlightWithoutShell: aBoolean\r\t"Tells the drone firmware wether the drone is using the outdoor hull or not. Set to false if the drone is using the indoor hull. \r\tArgument: \r\t- aBoolean: True for outdoor hull, False for indoor hull."\r\tself commandManager configFlightWithoutShell: aBoolean.\r',			#stamp : 'CaroHernandez 5/25/2016 14:04',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '581' ],		#self : OmReference [ '582' ],		#time : DateAndTime [ '2017-09-20T16:48:02.79346-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #configFlyingMode,			#protocol : #'public api-config',			#sourceCode : 'configFlyingMode\r\r\t^ self configurationManager valueForParameter: \'control:flying_mode\' .\r',			#stamp : 'CaroHernandez 7/19/2016 20:00',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '582' ],		#self : OmReference [ '583' ],		#time : DateAndTime [ '2017-09-20T16:48:02.794692-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'configFlyingMode:',			#protocol : #'public api-config',			#sourceCode : 'configFlyingMode: aFlyingMode\r\r\tself commandManager configFlyingMode: aFlyingMode.\r',			#stamp : 'CaroHernandez 5/22/2016 12:52',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '583' ],		#self : OmReference [ '584' ],		#time : DateAndTime [ '2017-09-20T16:48:02.79591-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #configFlyingModeFreeFlight,			#protocol : #'public api-config',			#sourceCode : 'configFlyingModeFreeFlight\r\t\r\tself commandManager configDetectionsDefault.\r\tself commandManager configFlyingMode: ARDConstant flyingMode_FREE_FLIGHT.\r\t \r\t ',			#stamp : 'CaroHernandez 7/23/2016 17:10',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '584' ],		#self : OmReference [ '585' ],		#time : DateAndTime [ '2017-09-20T16:48:02.797134-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #configFlyingModeHoverOnTopOfOrientedRoundel,			#protocol : #'public api-config',			#sourceCode : 'configFlyingModeHoverOnTopOfOrientedRoundel\r\t\r\tself commandManager configDetectType: ARDConstant detectType_ORIENTED_COCARDE_BW.\r\tself commandManager configFlyingMode: ARDConstant flyingMode_HOVER_ON_TOP_OF_ORIENTED_ROUNDEL.',			#stamp : 'CaroHernandez 9/12/2016 20:37',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '585' ],		#self : OmReference [ '586' ],		#time : DateAndTime [ '2017-09-20T16:48:02.798464-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #configOutdoor,			#protocol : #'public api-config',			#sourceCode : 'configOutdoor\r\t"Returns the configurated value inside the drone for the control: outdoor variable, it can be true of false"\r\t^ self configurationManager valueForParameter: \'control:outdoor\' .\r',			#stamp : 'CaroHernandez 6/27/2016 21:40',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '586' ],		#self : OmReference [ '587' ],		#time : DateAndTime [ '2017-09-20T16:48:02.799724-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'configOutdoor:',			#protocol : #'public api-config',			#sourceCode : 'configOutdoor: aBoolean\r\t"Tells the drone firmware if the drone is flying outdoors. (Changes the max velocity and tilts, and enabled the wind estimator)\r\tArgument: \r\t- aBoolean: True for outdoors, False for indoors."\r\tself commandManager configOutdoor: aBoolean.\r',			#stamp : 'CaroHernandez 5/25/2016 14:03',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '587' ],		#self : OmReference [ '588' ],		#time : DateAndTime [ '2017-09-20T16:48:02.801262-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'configReconnectTimeout:',			#protocol : #'public api-config',			#sourceCode : 'configReconnectTimeout: anInt\r\t"Maximum time (in seconds) for trying to reconnect before signaling the DroneConnectionTimeout exception. If no automatic reconnection mechanism is needed, set this value to 0. (Default value is 5)"\r\tself connectionManager reconnectTimeout: anInt',			#stamp : 'CaroHernandez 5/19/2016 23:54',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '588' ],		#self : OmReference [ '589' ],		#time : DateAndTime [ '2017-09-20T16:48:02.802394-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #configVideoChannel,			#protocol : #'public api-video',			#sourceCode : 'configVideoChannel\r\t"Returns the configurated value inside the drone for the video:video_channel variable, it can be 0 or 1"\r\t^ self configurationManager valueForParameter: \'video:video_channel\' .',			#stamp : 'CaroHernandez 7/10/2016 15:48',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '589' ],		#self : OmReference [ '590' ],		#time : DateAndTime [ '2017-09-20T16:48:02.803514-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'configVideoChannel:',			#protocol : #'public api-video',			#sourceCode : 'configVideoChannel: anInt\r\tcurrentVideoChannel := anInt.\r\tself commandManager configVideoChannel: anInt ',			#stamp : 'CaroHernandez 5/16/2016 00:23',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '590' ],		#self : OmReference [ '591' ],		#time : DateAndTime [ '2017-09-20T16:48:02.804641-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #configurationManager,			#protocol : #accessing-managers,			#sourceCode : 'configurationManager\r\t"Returns the ARDConfigurationManager used for receiving the drone\'s configuration"\r\t^ configurationManager.',			#stamp : 'CaroHernandez 5/22/2016 13:57',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '591' ],		#self : OmReference [ '592' ],		#time : DateAndTime [ '2017-09-20T16:48:02.805783-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #connectionManager,			#protocol : #accessing-managers,			#sourceCode : 'connectionManager\t\r\t^ connectionManager',			#stamp : 'CaroHernandez 4/29/2016 21:01',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '592' ],		#self : OmReference [ '593' ],		#time : DateAndTime [ '2017-09-20T16:48:02.80705-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #connectionState,			#protocol : #'public api-state',			#sourceCode : 'connectionState\r\t\r\t^ self connectionManager connectionState',			#stamp : 'CaroHernandez 6/19/2016 18:01',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '593' ],		#self : OmReference [ '594' ],		#time : DateAndTime [ '2017-09-20T16:48:02.808522-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #destroyExceptionHandlers,			#protocol : #'private ',			#sourceCode : 'destroyExceptionHandlers\r\texceptionHandlers := nil.',			#stamp : 'CaroHernandez 5/5/2016 20:25',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '594' ],		#self : OmReference [ '595' ],		#time : DateAndTime [ '2017-09-20T16:48:02.810273-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'droneConfigurationFor:',			#protocol : #'public api-config',			#sourceCode : 'droneConfigurationFor: aParameter\r\t"Argument:\r\t- aString -> is the parameter name as String (ie: \'general:num_version_config\')"\r\t^ self configurationManager valueForParameter: aParameter.\r\t',			#stamp : 'CaroHernandez 9/20/2016 20:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '595' ],		#self : OmReference [ '596' ],		#time : DateAndTime [ '2017-09-20T16:48:02.81261-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'droneSetConfigurationFor:value:',			#protocol : #'public api-config',			#sourceCode : 'droneSetConfigurationFor: aParameter value: aVal\r\t"Argument:\r\t- aParameter -> is the parameter name as String (ie: \'control:hovering_range\')\r\t- aVal -> the value for that parameter as String (ie: \'1000\')"\r\t^ self commandManager setConfigFor: aParameter value: aVal.\r\t',			#stamp : 'CaroHernandez 9/20/2016 20:37',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '596' ],		#self : OmReference [ '597' ],		#time : DateAndTime [ '2017-09-20T16:48:02.81496-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'elevate:',			#protocol : #'public api-move',			#sourceCode : 'elevate: verticalSpeed\r\t"Makes the drone elevate or descend according to the velocity specified by verticalSpeed.\r\tThe drone will keep elevating or descending at verticalSpeed velocity until its verticalSpeed is set again by this function or by moveByLeftRightTilt:frontBackTilt:angularSpeed:verticalSpeed:\r\tArgument:\r\t- verticalSpeed (gaz) \r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum vertical speed \r\t\t\t- (+) for elevating, (-) for descending."\r\r\tself motionState \r\t\tverticalSpeed: verticalSpeed.',			#stamp : 'CaroHernandez 7/29/2016 17:40',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '597' ],		#self : OmReference [ '598' ],		#time : DateAndTime [ '2017-09-20T16:48:02.816108-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'elevateTo:atSpeed:',			#protocol : #'public api-move',			#sourceCode : 'elevateTo: anAltitude atSpeed: aSpeed\r\t"elevates (ascend or descend) the drone, to the desired altitude (confirmed via navdata).\r\tArgument: \r\t\t- anAltitude: Integer representing the desired altitude in centimeters\r\t\t- aSpeed: Float in [0, 1] representing a percentage of the max elevation velocity configured for the drone"\r\tself commandManager elevateTo: anAltitude atSpeed: aSpeed ',			#stamp : 'CaroHernandez 5/26/2016 02:26',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '598' ],		#self : OmReference [ '599' ],		#time : DateAndTime [ '2017-09-20T16:48:02.817129-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'excecuteHandlerFor:',			#protocol : #'private ',			#sourceCode : 'excecuteHandlerFor: anException\r\r\t^ (self exceptionHandlers \r\t\t\t\t\tat: anException className asSymbol \r\t\t\t\t\tifAbsent: [ anException defaultAction ] ) value: anException.',			#stamp : 'CaroHernandez 6/25/2016 19:15',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '599' ],		#self : OmReference [ '600' ],		#time : DateAndTime [ '2017-09-20T16:48:02.818188-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #exceptionHandlers,			#protocol : #'private ',			#sourceCode : 'exceptionHandlers\r\t"Returns a dictionary of exception handlers, that can be used by the user to replace an exception\'s the default action with a custom block of code"\r\t^ exceptionHandlers ifNil: [ exceptionHandlers := Dictionary new. ]',			#stamp : 'CaroHernandez 5/20/2016 18:41',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '600' ],		#self : OmReference [ '601' ],		#time : DateAndTime [ '2017-09-20T16:48:02.819248-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #hasReceivedNavdata,			#protocol : #'public api-state',			#sourceCode : 'hasReceivedNavdata\r\r\t^ self navdataManager hasReceivedNavdata',			#stamp : 'CaroHernandez 5/26/2016 02:22',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '601' ],		#self : OmReference [ '602' ],		#time : DateAndTime [ '2017-09-20T16:48:02.820197-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #initializeAdapters,			#protocol : #'private ',			#sourceCode : 'initializeAdapters\r\t"Initializes adapters for sending and receiving messages."\r\tnavdataAdapter := ARDAdapterUDP withARDrone: self\r\t\t\t\t\t\t\t\t\t\t\tport: ARDConstant port_NAVDATA \r\t\t\t\t\t\t\t\t\t\t\tisMulticast: true\r\t\t\t\t\t\t\t\t\t\t\tdelayInterval: 30.\r\tcommandAdapter := ARDAdapterUDP withARDrone: self\r\t\t\t\t\t\t\t\t\t\t\tport: ARDConstant port_COMMAND  \r\t\t\t\t\t\t\t\t\t\t\tisMulticast: false\r\t\t\t\t\t\t\t\t\t\t\tdelayInterval: 30.\r\tauthAdapter := ARDAdapterUDP withARDrone: self\r\t\t\t\t\t\t\t\t\t\tport: ARDConstant port_AUTH \r\t\t\t\t\t\t\t\t\t\tisMulticast: false\r\t\t\t\t\t\t\t\t\t\tdelayInterval: 30.\r',			#stamp : 'CaroHernandez 5/8/2016 19:16',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '602' ],		#self : OmReference [ '603' ],		#time : DateAndTime [ '2017-09-20T16:48:02.821076-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #initializeManagers,			#protocol : #'private ',			#sourceCode : 'initializeManagers\r\t"First initializes the connection manager"\r\tconnectionManager := ARDConnectionManager withARDrone: self.\r\t"Initializes the managers for receiving navdata, sending AT commands and announcing changes in the drone\'s state"\r\tnavdataManager := ARDNavdataManager withARDrone: self.\r\tcommandManager := ARDCommandManager withARDrone: self.\r\tconfigurationManager := ARDConfigurationManager withARDrone: self.\r\tvisionDetectAnalyst := ARDVisionDetectAnalyst withARDrone: self.\r\t\r\tmotionState := ARDMotionState new.\r\tconnectionManager startWatchdog.\r\r\t^ true.\r\t\r\t',			#stamp : 'CaroHernandez 7/23/2016 15:03',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '603' ],		#self : OmReference [ '604' ],		#time : DateAndTime [ '2017-09-20T16:48:02.822019-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #isConnected,			#protocol : #'public api-state',			#sourceCode : 'isConnected\r\t^ self connectionManager isNotNil and: [ self connectionState = ARDConstant connection_CONNECTED ]. ',			#stamp : 'CaroHernandez 7/22/2016 22:04',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '604' ],		#self : OmReference [ '605' ],		#time : DateAndTime [ '2017-09-20T16:48:02.823159-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #isFlying,			#protocol : #'public api-state',			#sourceCode : 'isFlying\r\t"returns true if the drone is flying, false if it\'s landed"\r\t^ self navdataManager lastDatagramReceived droneIsFlying.',			#stamp : 'CaroHernandez 6/27/2016 22:57',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '605' ],		#self : OmReference [ '606' ],		#time : DateAndTime [ '2017-09-20T16:48:02.824456-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #isInEmergencyState,			#protocol : #'public api-state',			#sourceCode : 'isInEmergencyState\r\t"returns true if the drone is in emergency state"\r\tself connectionState ~= ARDConstant connection_CONNECTED ifTrue: [ ^ nil ].\r\t^ self navdataManager lastDatagramReceived droneIsInEmergencyState. ',			#stamp : 'CaroHernandez 6/27/2016 21:34',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '606' ],		#self : OmReference [ '607' ],		#time : DateAndTime [ '2017-09-20T16:48:02.825588-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #land,			#protocol : #'public api-move',			#sourceCode : 'land\r\t"Lands the drone"\r\tcommandManager land.',			#stamp : 'CaroHernandez 3/25/2016 17:16',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '607' ],		#self : OmReference [ '608' ],		#time : DateAndTime [ '2017-09-20T16:48:02.826786-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #lastNavdataPacketReceived,			#protocol : #'public api-state',			#sourceCode : 'lastNavdataPacketReceived\r\t^ self navdataManager lastDatagramReceived',			#stamp : 'CaroHernandez 7/19/2016 20:50',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '608' ],		#self : OmReference [ '609' ],		#time : DateAndTime [ '2017-09-20T16:48:02.827915-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #lowBattery,			#protocol : #'public api-state',			#sourceCode : 'lowBattery\r\r\tself connectionState ~= ARDConstant connection_CONNECTED ifTrue: [ ^ nil ].\r \t^ self navdataManager lastDatagramReceived droneLowBattery. ',			#stamp : 'CaroHernandez 6/27/2016 21:38',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '609' ],		#self : OmReference [ '610' ],		#time : DateAndTime [ '2017-09-20T16:48:02.828989-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #motionState,			#protocol : #accessing,			#sourceCode : 'motionState\r\t"Returns the ARDMotionState used for saving the arDrone\'s motion state set by the UI controller"\r\t^ motionState',			#stamp : 'CaroHernandez 3/19/2016 14:44',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '610' ],		#self : OmReference [ '611' ],		#time : DateAndTime [ '2017-09-20T16:48:02.830106-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'moveByLeftRightTilt:frontBackTilt:angularSpeed:verticalSpeed:',			#protocol : #'public api-move',			#sourceCode : 'moveByLeftRightTilt: leftRightTilt frontBackTilt: frontBackTilt angularSpeed: angularSpeed verticalSpeed: verticalSpeed\r\t"Moves the drone according to the tilts and velocities recieved as argumentslrTilt.\r\t\r\tArguments:\r\t- leftRightTilt (roll or phi angle) \t\r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max roll inclination set for the drone \t\t\t\t\t\t\t\t\t \t\t\t- (-) for left, (+) for right.\r\t- frontBackTilt (pitch or theta angle) \r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max pitch inclination set for the drone \r\t\t\t- (-) for front (drone lowers its nose), (+) for back (drone raise its nose)\r\t- verticalSpeed (gaz) \r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum vertical speed \r\t\t\t- (+) for elevating, (-) for descending.\r\t- angularSpeed (yaw)\r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum angular speed \r\t\t\t- (+) for spinning right, (-) for spinning left."\r\tself motionState \r\t\tleftRightTilt: leftRightTilt;\r\t\tfrontBackTilt: frontBackTilt;\r\t\tangularSpeed: angularSpeed;\r\t\tverticalSpeed: verticalSpeed.',			#stamp : 'CaroHernandez 3/26/2016 10:52',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '611' ],		#self : OmReference [ '612' ],		#time : DateAndTime [ '2017-09-20T16:48:02.831163-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'moveFor:atSpeed:withDirection:',			#protocol : #'public api-move',			#sourceCode : 'moveFor: aDuration atSpeed: aSpeed withDirection: anAngle\r\t"Moves the drone progressivelly for aTimeInterval time, with maximum speed aSpeed, in the direction indicated by anAngle.\r\tArgument: \r\t\t- aDuration: Integer, in milli seconds\r\t\t- aSpeed: Float in [0, 1] representing a percentage of the max roll and pitch velocity configured for the drone\r\t\t- anAngle: Integer in [ 0, 360 ], represents the direction in wich the drone will move. Looking the drone from above, the zero is in the drone\'s nose, and increments clockwise."\r\tself commandManager moveFor: aDuration atSpeed: aSpeed withDirection: anAngle.',			#stamp : 'CaroHernandez 5/26/2016 02:26',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '612' ],		#self : OmReference [ '613' ],		#time : DateAndTime [ '2017-09-20T16:48:02.83221-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #mutex,			#protocol : #accessing,			#sourceCode : 'mutex\r\t\r\t^ mutex ifNil: [ mutex := Mutex new ].',			#stamp : 'CaroHernandez 5/15/2016 19:21',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '613' ],		#self : OmReference [ '614' ],		#time : DateAndTime [ '2017-09-20T16:48:02.833171-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #navdataAdapter,			#protocol : #accessing-adapters,			#sourceCode : 'navdataAdapter\r\t"Returns the ARDBridge used for receiving navdata"\r\t^ navdataAdapter',			#stamp : 'CaroHernandez 3/25/2016 12:24',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '614' ],		#self : OmReference [ '615' ],		#time : DateAndTime [ '2017-09-20T16:48:02.834521-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #navdataManager,			#protocol : #accessing-managers,			#sourceCode : 'navdataManager\r\t\r\t^ navdataManager.',			#stamp : 'CaroHernandez 3/15/2016 09:34',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '615' ],		#self : OmReference [ '616' ],		#time : DateAndTime [ '2017-09-20T16:48:02.83553-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #nextSequenceNumber,			#protocol : #'public api',			#sourceCode : 'nextSequenceNumber\r\t"Returns the sequence number for the next AT command datagram "\r\tsequenceNumber := self sequenceNumber + 1.\r\t^ self sequenceNumber ',			#stamp : 'CaroHernandez 5/31/2016 15:02',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '616' ],		#self : OmReference [ '617' ],		#time : DateAndTime [ '2017-09-20T16:48:02.836561-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'pitch:',			#protocol : #'public api-move',			#sourceCode : 'pitch: frontBackTilt\r\t"Makes the drone pitch the amount specified by frontBackTilt.\r\tThe drone will mantain the frontBackTilt inclination until it is set again by this function or by moveByLeftRightTilt:frontBackTilt:angularSpeed:verticalSpeed:\r\tArgument:\r\t- frontBackTilt (pitch or theta angle)  \t\r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max pitch inclination set for the drone \t\t\t\t\t\t\t\t\t \t\t\t\r\t\t\t- (-) for left, (+) for right."\r\tself motionState \r\t\tfrontBackTilt: frontBackTilt.',			#stamp : 'CaroHernandez 3/26/2016 11:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '617' ],		#self : OmReference [ '618' ],		#time : DateAndTime [ '2017-09-20T16:48:02.837584-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #resetManagers,			#protocol : #'private ',			#sourceCode : 'resetManagers\r\tself terminateManagers.\r\t^ self initializeManagers.',			#stamp : 'CaroHernandez 5/1/2016 22:55',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '618' ],		#self : OmReference [ '619' ],		#time : DateAndTime [ '2017-09-20T16:48:02.838738-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #resetSequenceNumber,			#protocol : #'private ',			#sourceCode : 'resetSequenceNumber\r\tsequenceNumber := 0',			#stamp : 'CaroHernandez 7/19/2016 23:22',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '619' ],		#self : OmReference [ '620' ],		#time : DateAndTime [ '2017-09-20T16:48:02.839953-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #retreiveConfigurationFromDrone,			#protocol : #'public api-config',			#sourceCode : 'retreiveConfigurationFromDrone\r\tself configurationManager retrieveConfigurationFile.\r\t',			#stamp : 'CaroHernandez 6/24/2016 00:45',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '620' ],		#self : OmReference [ '621' ],		#time : DateAndTime [ '2017-09-20T16:48:02.841219-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'roll:',			#protocol : #'public api-move',			#sourceCode : 'roll: leftRightTilt\r\t"Makes the drone roll the amount specified by leftRightTilt.\r\tThe drone will mantain the leftRightTilt inclination until it is set again by this function or by moveByLeftRightTilt:frontBackTilt:angularSpeed:verticalSpeed:\r\tArguments:\r\t- leftRightTilt (roll or phi angle) \t\r\t\t\t- float in range [-1,1] \r\t\t\t- represents a percentage of the max roll inclination set for the drone \t\t\t\t\t\t\t\t\t \t\t\t\r\t\t\t- (-) for left, (+) for right."\r\tself motionState \r\t\tleftRightTilt: leftRightTilt.',			#stamp : 'CaroHernandez 3/26/2016 11:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '621' ],		#self : OmReference [ '622' ],		#time : DateAndTime [ '2017-09-20T16:48:02.842633-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #sequenceNumber,			#protocol : #'public api',			#sourceCode : 'sequenceNumber\r\r\t^ sequenceNumber ifNil: [ ^ 1 ]',			#stamp : 'CaroHernandez 5/31/2016 15:04',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '622' ],		#self : OmReference [ '623' ],		#time : DateAndTime [ '2017-09-20T16:48:02.844373-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'setNavdataReceiverCallback:',			#protocol : #'public api',			#sourceCode : 'setNavdataReceiverCallback: aBlock\r\t"Redefines the Navdata receiverProcess, so now in each cycle it receives one datagram and excecutes aBlock using the datagram as argument. \r\tArguments:\r\t- aBlock <Block> Must receive the datagram as argument"\r\tnavdataManager receiverProcessCallback: aBlock\r\t',			#stamp : 'CaroHernandez 8/26/2016 02:09',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '623' ],		#self : OmReference [ '624' ],		#time : DateAndTime [ '2017-09-20T16:48:02.846541-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'signalAndHandle:',			#protocol : #'public api',			#sourceCode : 'signalAndHandle: anExceptionClass\r\t[ anExceptionClass signal ]\r\ton: anExceptionClass \r\tdo: [ :ex | self excecuteHandlerFor: ex  ] .',			#stamp : 'CaroHernandez 6/30/2016 21:35',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '624' ],		#self : OmReference [ '625' ],		#time : DateAndTime [ '2017-09-20T16:48:02.848737-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #stabilize,			#protocol : #'public api-move',			#sourceCode : 'stabilize\r\t"Sets all drone tilts, vertical and angular velocity to zero"\r\tself moveByLeftRightTilt: 0 frontBackTilt: 0 angularSpeed: 0 verticalSpeed: 0',			#stamp : 'CaroHernandez 6/27/2016 23:47',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '625' ],		#self : OmReference [ '626' ],		#time : DateAndTime [ '2017-09-20T16:48:02.849928-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #startSession,			#protocol : #'public api',			#sourceCode : 'startSession\r\t"initializes all processes related to the arDrone uniqueInstance and sets up the connection"\r\r\tTranscript show: \'Starting arDrone session\';cr.\r\r\tself initializeAdapters .\r\t( self resetManagers ) ifFalse: [ Transcript show: \'Couldnt start managers\';cr. ^ false ].\r\r\tself mutex critical: [ self resetSequenceNumber ].\r\t\r\t\r\t"Delay for allowing the reception of some navdata packages"\r\t(Delay forMilliseconds: 100).\r\t^ true\r\t',			#stamp : 'CaroHernandez 7/23/2016 15:05',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '626' ],		#self : OmReference [ '627' ],		#time : DateAndTime [ '2017-09-20T16:48:02.851027-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #state,			#protocol : #'private ',			#sourceCode : 'state\r\t"Returns the state of the drone, based on the last navigation datagram received"\r\tself navdataManager lastDatagramReceived ifNil:[ ^ nil ].\r\t^ self navdataManager lastDatagramReceived header state.',			#stamp : 'CaroHernandez 5/26/2016 00:18',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '627' ],		#self : OmReference [ '628' ],		#time : DateAndTime [ '2017-09-20T16:48:02.85206-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'tagDetected:',			#protocol : #'public api-tags detection',			#sourceCode : 'tagDetected: aDetectedTagType\r\t^ self visionDetectAnalyst detectedTag: aDetectedTagType ',			#stamp : 'CaroHernandez 8/22/2016 19:12',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '628' ],		#self : OmReference [ '629' ],		#time : DateAndTime [ '2017-09-20T16:48:02.853087-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #tagsTotalDetected,			#protocol : #'public api-tags detection',			#sourceCode : 'tagsTotalDetected\r\t^ self visionDetectAnalyst nTagsDetected ',			#stamp : 'CaroHernandez 7/25/2016 22:02',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '629' ],		#self : OmReference [ '630' ],		#time : DateAndTime [ '2017-09-20T16:48:02.854196-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #takeOff,			#protocol : #'public api-move',			#sourceCode : 'takeOff\r\t"Takes off the drone"\r\tcommandManager takeOff.',			#stamp : 'CaroHernandez 3/25/2016 17:16',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '630' ],		#self : OmReference [ '631' ],		#time : DateAndTime [ '2017-09-20T16:48:02.855309-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #terminateAdapters,			#protocol : #'private ',			#sourceCode : 'terminateAdapters\r\tself navdataAdapter ifNotNil: [ self navdataAdapter closeAndDestroy ].\r\tself commandAdapter ifNotNil: [ self commandAdapter closeAndDestroy ].\r\t\r\t',			#stamp : 'CaroHernandez 6/7/2016 20:44',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '631' ],		#self : OmReference [ '632' ],		#time : DateAndTime [ '2017-09-20T16:48:02.856579-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #terminateManagers,			#protocol : #'private ',			#sourceCode : 'terminateManagers\r\t"Terminates all manager\'s processes related to the this ARDrone\'s instance"\r\tconnectionManager ifNotNil: [ connectionManager terminate ].\r\tnavdataManager ifNotNil: [ navdataManager terminate ].\r\tcommandManager ifNotNil: [ commandManager terminate ].\r\tconfigurationManager ifNotNil: [ configurationManager terminate ].\r\t visionDetectAnalyst ifNotNil: [ visionDetectAnalyst destroy ] .',			#stamp : 'CaroHernandez 7/23/2016 15:00',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '632' ],		#self : OmReference [ '633' ],		#time : DateAndTime [ '2017-09-20T16:48:02.857834-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #terminateSession,			#protocol : #'public api',			#sourceCode : 'terminateSession\r\t"Terminates all procecesses used by this arDrone session"\r\tTranscript show: \'Terminating arDrone session\';cr.\r\tself terminateManagers.\r\tself terminateAdapters.\r\t',			#stamp : 'CaroHernandez 7/23/2016 14:59',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '633' ],		#self : OmReference [ '634' ],		#time : DateAndTime [ '2017-09-20T16:48:02.859482-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #visionDetectAnalyst,			#protocol : #accessing,			#sourceCode : 'visionDetectAnalyst\r\t^ visionDetectAnalyst ',			#stamp : 'CaroHernandez 7/23/2016 14:36',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '634' ],		#self : OmReference [ '635' ],		#time : DateAndTime [ '2017-09-20T16:48:02.860637-03:00' ],		#trigger : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ARDrone,				#isMetaSide : false			},			#name : #'yaw:',			#protocol : #'public api-move',			#sourceCode : 'yaw: angularSpeed\r\t"Makes the drone yaw according to the speed specified by angularSpeed.\r\tThe drone will keep rotating at angularSpeed velocity until its angularSpeed is set again by this function or by moveByLeftRightTilt:frontBackTilt:angularSpeed:verticalSpeed:\r\tArguments:\r\t- angularSpeed (yaw)\r\t\t\t- float in range [-1,1] \r\t\t\t- is a percentage of the maximum angular speed \r\t\t\t- (+) for spinning right, (-) for spinning left."\r\tself motionState \r\t\tangularSpeed: angularSpeed.',			#stamp : 'CaroHernandez 3/26/2016 11:02',			#package : #ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T16:48:33.754037-03:00' ],		#prior : OmReference [ '635' ],		#self : OmReference [ '636' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'ARDrone-CaroHernandez.79',		#repositoryDescription : '/home/rodrigo/Downloads/pharo6.1/shared/ArDrone/pharo-local/package-cache'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T16:52:32.520926-03:00' ],		#prior : OmReference [ '636' ],		#self : OmReference [ '637' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'ARDrone-CaroHernandez.88'		]	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:08:59.484522-03:00' ],		#prior : OmReference [ '637' ],		#self : OmReference [ '638' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'LiveRobotics-Bridge-ARDrone-CaroHernandez.37'		]	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '638' ],		#self : OmReference [ '639' ],		#time : DateAndTime [ '2017-09-20T17:08:59.574717-03:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #LiveRobotics-Bridge-ARDrone,		#affectedPackageName : #LiveRobotics-Bridge-ARDrone	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '639' ],		#self : OmReference [ '640' ],		#time : DateAndTime [ '2017-09-20T17:08:59.577114-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ComposableModel',				#traitCompositionSource : '{}',				#definitionSource : 'ComposableModel subclass: #LRPARDroneConfigUI\r\tinstanceVariableNames: \'arDroneInstance labelExternalSettings buttonIndoorHull buttonOutdoor labelFlyingMode buttonFlyFree buttonFlyOnTopOfRoundel enabled\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-Bridge-ARDrone\''			},			#name : #LRPARDroneConfigUI,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneConfigUI,						#isMetaSide : false					},					#name : #arDroneInstance,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneConfigUI,						#isMetaSide : false					},					#name : #labelExternalSettings,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneConfigUI,						#isMetaSide : false					},					#name : #buttonIndoorHull,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneConfigUI,						#isMetaSide : false					},					#name : #buttonOutdoor,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneConfigUI,						#isMetaSide : false					},					#name : #labelFlyingMode,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneConfigUI,						#isMetaSide : false					},					#name : #buttonFlyFree,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneConfigUI,						#isMetaSide : false					},					#name : #buttonFlyOnTopOfRoundel,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneConfigUI,						#isMetaSide : false					},					#name : #enabled,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneConfigUI class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneConfigUI class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneConfigUI,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-Bridge-ARDrone,			#package : #LiveRobotics-Bridge-ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '640' ],		#self : OmReference [ '641' ],		#time : DateAndTime [ '2017-09-20T17:08:59.651465-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ComposableModel',				#traitCompositionSource : '{}',				#definitionSource : 'ComposableModel subclass: #LRPARDroneControlUI\r\tinstanceVariableNames: \'arDroneInstance takeoffButton landButton videoButton changeVideoButton label keyboardListener morphKB videoProcess\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-Bridge-ARDrone\''			},			#name : #LRPARDroneControlUI,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneControlUI,						#isMetaSide : false					},					#name : #arDroneInstance,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneControlUI,						#isMetaSide : false					},					#name : #takeoffButton,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneControlUI,						#isMetaSide : false					},					#name : #landButton,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneControlUI,						#isMetaSide : false					},					#name : #videoButton,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneControlUI,						#isMetaSide : false					},					#name : #changeVideoButton,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneControlUI,						#isMetaSide : false					},					#name : #label,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneControlUI,						#isMetaSide : false					},					#name : #keyboardListener,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneControlUI,						#isMetaSide : false					},					#name : #morphKB,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneControlUI,						#isMetaSide : false					},					#name : #videoProcess,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneControlUI class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneControlUI class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneControlUI,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-Bridge-ARDrone,			#package : #LiveRobotics-Bridge-ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '641' ],		#self : OmReference [ '642' ],		#time : DateAndTime [ '2017-09-20T17:08:59.657049-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ComposableModel',				#traitCompositionSource : '{}',				#definitionSource : 'ComposableModel subclass: #LRPARDroneDisplayerUI\r\tinstanceVariableNames: \'arDroneInstance vision config navdata visionButton configButton navdataButton\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-Bridge-ARDrone\''			},			#name : #LRPARDroneDisplayerUI,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerUI,						#isMetaSide : false					},					#name : #arDroneInstance,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerUI,						#isMetaSide : false					},					#name : #vision,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerUI,						#isMetaSide : false					},					#name : #config,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerUI,						#isMetaSide : false					},					#name : #navdata,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerUI,						#isMetaSide : false					},					#name : #visionButton,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerUI,						#isMetaSide : false					},					#name : #configButton,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerUI,						#isMetaSide : false					},					#name : #navdataButton,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneDisplayerUI class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneDisplayerUI class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneDisplayerUI,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-Bridge-ARDrone,			#package : #LiveRobotics-Bridge-ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '642' ],		#self : OmReference [ '643' ],		#time : DateAndTime [ '2017-09-20T17:08:59.666195-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ComposableModel',				#traitCompositionSource : '{}',				#definitionSource : 'ComposableModel subclass: #LRPARDroneStateBatteryUI\r\tinstanceVariableNames: \'arDroneInstance label message percentage\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-Bridge-ARDrone\''			},			#name : #LRPARDroneStateBatteryUI,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneStateBatteryUI,						#isMetaSide : false					},					#name : #arDroneInstance,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneStateBatteryUI,						#isMetaSide : false					},					#name : #label,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneStateBatteryUI,						#isMetaSide : false					},					#name : #message,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneStateBatteryUI,						#isMetaSide : false					},					#name : #percentage,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneStateBatteryUI class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneStateBatteryUI class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneStateBatteryUI,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-Bridge-ARDrone,			#package : #LiveRobotics-Bridge-ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '643' ],		#self : OmReference [ '644' ],		#time : DateAndTime [ '2017-09-20T17:08:59.674933-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ComposableModel',				#traitCompositionSource : '{}',				#definitionSource : 'ComposableModel subclass: #LRPARDroneStateConnectionUI\r\tinstanceVariableNames: \'arDroneInstance connectionState icon label\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-Bridge-ARDrone\''			},			#name : #LRPARDroneStateConnectionUI,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneStateConnectionUI,						#isMetaSide : false					},					#name : #arDroneInstance,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneStateConnectionUI,						#isMetaSide : false					},					#name : #connectionState,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneStateConnectionUI,						#isMetaSide : false					},					#name : #icon,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneStateConnectionUI,						#isMetaSide : false					},					#name : #label,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneStateConnectionUI class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneStateConnectionUI class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneStateConnectionUI,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-Bridge-ARDrone,			#package : #LiveRobotics-Bridge-ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '644' ],		#self : OmReference [ '645' ],		#time : DateAndTime [ '2017-09-20T17:08:59.686868-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ComposableModel',				#traitCompositionSource : '{}',				#definitionSource : 'ComposableModel subclass: #LRPARDroneStateTagsUI\r\tinstanceVariableNames: \'arDroneInstance message orientation\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-Bridge-ARDrone\''			},			#name : #LRPARDroneStateTagsUI,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneStateTagsUI,						#isMetaSide : false					},					#name : #arDroneInstance,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneStateTagsUI,						#isMetaSide : false					},					#name : #message,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneStateTagsUI,						#isMetaSide : false					},					#name : #orientation,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneStateTagsUI class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneStateTagsUI class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneStateTagsUI,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-Bridge-ARDrone,			#package : #LiveRobotics-Bridge-ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '645' ],		#self : OmReference [ '646' ],		#time : DateAndTime [ '2017-09-20T17:08:59.693145-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ComposableModel',				#traitCompositionSource : '{}',				#definitionSource : 'ComposableModel subclass: #LRPARDroneStateUI\r\tinstanceVariableNames: \'arDroneInstance battery connection tags\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-Bridge-ARDrone\''			},			#name : #LRPARDroneStateUI,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneStateUI,						#isMetaSide : false					},					#name : #arDroneInstance,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneStateUI,						#isMetaSide : false					},					#name : #battery,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneStateUI,						#isMetaSide : false					},					#name : #connection,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneStateUI,						#isMetaSide : false					},					#name : #tags,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneStateUI class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneStateUI class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneStateUI,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-Bridge-ARDrone,			#package : #LiveRobotics-Bridge-ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '646' ],		#self : OmReference [ '647' ],		#time : DateAndTime [ '2017-09-20T17:08:59.702994-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ComposableModel',				#traitCompositionSource : '{}',				#definitionSource : 'ComposableModel subclass: #LRPARDroneUI\r\tinstanceVariableNames: \'arDroneInstance state control config display emergencyButton resetButton connectButton\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-Bridge-ARDrone\''			},			#name : #LRPARDroneUI,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneUI,						#isMetaSide : false					},					#name : #arDroneInstance,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneUI,						#isMetaSide : false					},					#name : #state,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneUI,						#isMetaSide : false					},					#name : #control,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneUI,						#isMetaSide : false					},					#name : #config,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneUI,						#isMetaSide : false					},					#name : #display,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneUI,						#isMetaSide : false					},					#name : #emergencyButton,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneUI,						#isMetaSide : false					},					#name : #resetButton,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneUI,						#isMetaSide : false					},					#name : #connectButton,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneUI class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneUI class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneUI,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-Bridge-ARDrone,			#package : #LiveRobotics-Bridge-ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '647' ],		#self : OmReference [ '648' ],		#time : DateAndTime [ '2017-09-20T17:08:59.707768-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LRPARDroneDisplayerForConfig\r\tinstanceVariableNames: \'arDroneInstance configSelected searchBox window lastConfigFile lastSearchedString configArray configArrayFiltered\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-Bridge-ARDrone\''			},			#name : #LRPARDroneDisplayerForConfig,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForConfig,						#isMetaSide : false					},					#name : #arDroneInstance,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForConfig,						#isMetaSide : false					},					#name : #configSelected,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForConfig,						#isMetaSide : false					},					#name : #searchBox,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForConfig,						#isMetaSide : false					},					#name : #window,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForConfig,						#isMetaSide : false					},					#name : #lastConfigFile,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForConfig,						#isMetaSide : false					},					#name : #lastSearchedString,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForConfig,						#isMetaSide : false					},					#name : #configArray,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForConfig,						#isMetaSide : false					},					#name : #configArrayFiltered,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneDisplayerForConfig class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneDisplayerForConfig class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneDisplayerForConfig,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-Bridge-ARDrone,			#package : #LiveRobotics-Bridge-ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '648' ],		#self : OmReference [ '649' ],		#time : DateAndTime [ '2017-09-20T17:08:59.714361-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LRPARDroneDisplayerForNavdata\r\tinstanceVariableNames: \'arDroneInstance navdataSelected stateSelected window\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-Bridge-ARDrone\''			},			#name : #LRPARDroneDisplayerForNavdata,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForNavdata,						#isMetaSide : false					},					#name : #arDroneInstance,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForNavdata,						#isMetaSide : false					},					#name : #navdataSelected,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForNavdata,						#isMetaSide : false					},					#name : #stateSelected,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForNavdata,						#isMetaSide : false					},					#name : #window,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneDisplayerForNavdata class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneDisplayerForNavdata class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneDisplayerForNavdata,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-Bridge-ARDrone,			#package : #LiveRobotics-Bridge-ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '649' ],		#self : OmReference [ '650' ],		#time : DateAndTime [ '2017-09-20T17:08:59.719487-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LRPARDroneDisplayerForVision\r\tinstanceVariableNames: \'arDroneInstance visionFrontSelected visionBottomSelected window\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-Bridge-ARDrone\''			},			#name : #LRPARDroneDisplayerForVision,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForVision,						#isMetaSide : false					},					#name : #arDroneInstance,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForVision,						#isMetaSide : false					},					#name : #visionFrontSelected,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForVision,						#isMetaSide : false					},					#name : #visionBottomSelected,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneDisplayerForVision,						#isMetaSide : false					},					#name : #window,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneDisplayerForVision class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneDisplayerForVision class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneDisplayerForVision,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-Bridge-ARDrone,			#package : #LiveRobotics-Bridge-ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '650' ],		#self : OmReference [ '651' ],		#time : DateAndTime [ '2017-09-20T17:08:59.72597-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'PluggableMultiColumnListMorph',				#traitCompositionSource : '{}',				#definitionSource : 'PluggableMultiColumnListMorph subclass: #LRPARDroneMultiColumnList\r\tinstanceVariableNames: \'myStepTime\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-Bridge-ARDrone\''			},			#name : #LRPARDroneMultiColumnList,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneMultiColumnList,						#isMetaSide : false					},					#name : #myStepTime,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneMultiColumnList class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneMultiColumnList class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneMultiColumnList,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-Bridge-ARDrone,			#package : #LiveRobotics-Bridge-ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '651' ],		#self : OmReference [ '652' ],		#time : DateAndTime [ '2017-09-20T17:08:59.730883-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'LRPAbstractBridge',				#traitCompositionSource : '{}',				#definitionSource : 'LRPAbstractBridge subclass: #LRPARDroneBridge\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'arDroneInstance\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #LRPARDroneBridge,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneBridge class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneBridge class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneBridge,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m a bridge to ARDrone. I enable communicating with the AR.Drone from LRP',				#stamp : 'CaroHernandez 4/19/2016 12:33'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneBridge,						#isMetaSide : false					},					#name : #arDroneInstance,					#parent : @8				}			],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m a bridge to ARDrone. I enable communicating with the AR.Drone from LRP',		#newStamp : 'CaroHernandez 4/19/2016 12:33'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '652' ],		#self : OmReference [ '653' ],		#time : DateAndTime [ '2017-09-20T17:08:59.734538-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'LRPAbstractBridge',				#traitCompositionSource : '{}',				#definitionSource : 'LRPAbstractBridge subclass: #LRPARDroneBridge\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'arDroneInstance\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-Bridge-ARDrone\''			},			#name : #LRPARDroneBridge,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneBridge class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneBridge class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneBridge,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m a bridge to ARDrone. I enable communicating with the AR.Drone from LRP',				#stamp : 'CaroHernandez 4/19/2016 12:33'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneBridge,						#isMetaSide : false					},					#name : #arDroneInstance,					#parent : @8				}			],			#category : #LiveRobotics-Bridge-ARDrone,			#package : #LiveRobotics-Bridge-ARDrone,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '653' ],		#self : OmReference [ '654' ],		#time : DateAndTime [ '2017-09-20T17:08:59.894693-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LRPARDroneConfigUI class',				#isMetaSide : true			},			#name : #defaultSpec,			#protocol : #specs,			#sourceCode : 'defaultSpec\r\t<spec: #default>\r\t| row1 row2 |\r\t\r\trow1 := SpecLayout composed\r\t\tnewRow: [ :row |\r\t\t\trow add: #labelExternalSettings.\r\t\t\trow add: #buttonIndoorHull.\r\t\t\trow add: #buttonOutdoor. ] \r\t\theight: self toolbarHeight;\r\t\tyourself.\r\t\r\trow2 := SpecLayout composed \r\t\tnewRow: [ :row |\r\t\t\trow add: #labelFlyingMode.\r\t\t\trow add: #buttonFlyFree.\r\t\t\trow add: #buttonFlyOnTopOfRoundel.\r\t\t] height: self toolbarHeight; \r\t\tyourself.\r\t\r\t^ SpecLayout composed \r\t\tnewColumn: [ :col |\r\t\t\tcol add: row1.\r\t\t\tcol add: row2.\r\t\t]; yourself.',			#stamp : 'CaroHernandez 6/23/2016 22:11',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '654' ],		#self : OmReference [ '655' ],		#time : DateAndTime [ '2017-09-20T17:08:59.902576-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #arDroneInstance,			#protocol : #accessing,			#sourceCode : 'arDroneInstance\r\t^arDroneInstance',			#stamp : 'CaroHernandez 5/25/2016 13:44',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '655' ],		#self : OmReference [ '656' ],		#time : DateAndTime [ '2017-09-20T17:08:59.904308-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #'arDroneInstance:',			#protocol : #accessing,			#sourceCode : 'arDroneInstance: anARDrone\r\tarDroneInstance := anARDrone.\r\r',			#stamp : 'CaroHernandez 5/25/2016 13:45',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '656' ],		#self : OmReference [ '657' ],		#time : DateAndTime [ '2017-09-20T17:08:59.906025-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #buttonFlyFree,			#protocol : #accessing,			#sourceCode : 'buttonFlyFree\r\r\t^ buttonFlyFree ',			#stamp : 'CaroHernandez 6/3/2016 15:04',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '657' ],		#self : OmReference [ '658' ],		#time : DateAndTime [ '2017-09-20T17:08:59.907766-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #buttonFlyOnTopOfRoundel,			#protocol : #accessing,			#sourceCode : 'buttonFlyOnTopOfRoundel\r\r\t^ buttonFlyOnTopOfRoundel ',			#stamp : 'CaroHernandez 6/3/2016 15:04',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '658' ],		#self : OmReference [ '659' ],		#time : DateAndTime [ '2017-09-20T17:08:59.909394-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #buttonIndoorHull,			#protocol : #accessing,			#sourceCode : 'buttonIndoorHull\r\r\t^ buttonIndoorHull ',			#stamp : 'CaroHernandez 5/25/2016 13:40',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '659' ],		#self : OmReference [ '660' ],		#time : DateAndTime [ '2017-09-20T17:08:59.913884-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #buttonOutdoor,			#protocol : #accessing,			#sourceCode : 'buttonOutdoor\r\r\t^ buttonOutdoor ',			#stamp : 'CaroHernandez 5/25/2016 14:01',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '660' ],		#self : OmReference [ '661' ],		#time : DateAndTime [ '2017-09-20T17:08:59.91581-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #enabled,			#protocol : #accessing,			#sourceCode : 'enabled\r\t^ enabled\r\t',			#stamp : 'CaroHernandez 6/23/2016 19:41',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '661' ],		#self : OmReference [ '662' ],		#time : DateAndTime [ '2017-09-20T17:08:59.917231-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #'enabled:',			#protocol : #accessing,			#sourceCode : 'enabled: aBoolean\r\tenabled := aBoolean.\r\tbuttonIndoorHull enabled: aBoolean.\r\tbuttonOutdoor enabled: aBoolean.\r\tbuttonFlyFree enabled: aBoolean.\r\tbuttonFlyOnTopOfRoundel enabled: aBoolean\r\t',			#stamp : 'CaroHernandez 7/19/2016 20:17',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '662' ],		#self : OmReference [ '663' ],		#time : DateAndTime [ '2017-09-20T17:08:59.918836-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #initializePresenter,			#protocol : #accessing,			#sourceCode : 'initializePresenter\r\t\r\tbuttonIndoorHull whenActivatedDo: [ arDroneInstance configFlightWithoutShell: false ].\r\tbuttonIndoorHull whenDeactivatedDo: [ arDroneInstance configFlightWithoutShell: true ].\r\tbuttonOutdoor whenActivatedDo: [ arDroneInstance configOutdoor: true ].\r\tbuttonOutdoor whenDeactivatedDo: [ arDroneInstance configOutdoor: false ].\r\t\r\tbuttonFlyFree whenActivatedDo: [ arDroneInstance configFlyingModeFreeFlight ].\r\tbuttonFlyOnTopOfRoundel whenActivatedDo: [ arDroneInstance configFlyingModeHoverOnTopOfOrientedRoundel ].\r\t',			#stamp : 'CaroHernandez 8/26/2016 02:22',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '663' ],		#self : OmReference [ '664' ],		#time : DateAndTime [ '2017-09-20T17:08:59.920175-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #initializeWidgets,			#protocol : #initialization,			#sourceCode : 'initializeWidgets \r\r\tbuttonIndoorHull \t\t\t:= self newCheckBox.\r\tbuttonOutdoor \t\t\t\t:= self newCheckBox.\r\tlabelExternalSettings \t:= self newLabel.\r\tbuttonFlyFree \t\t\t\t:= self newRadioButton.\r\tbuttonFlyOnTopOfRoundel \t:= self newRadioButton.  \r\tlabelFlyingMode \t\t\t:= self newLabel.\r\t\r\tbuttonIndoorHull \t\t\tlabel: \'Indoor Hull\'.\r\tbuttonOutdoor \t\t\t\tlabel: \'Outdoor Flight\'.\r\tlabelExternalSettings \tlabel: \'External settings\'.\r\tbuttonFlyFree \t\t\t\tlabel: \'Free\'.\r\tbuttonFlyOnTopOfRoundel \tlabel: \'On top of Roundel\'.\r\tlabelFlyingMode \t\t\tlabel: \'Flying Mode:\'.\r\t\r\tself setFocus.\r\tself setGroup.\r\t\r\t\t',			#stamp : 'CaroHernandez 6/23/2016 20:33',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '664' ],		#self : OmReference [ '665' ],		#time : DateAndTime [ '2017-09-20T17:08:59.921642-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #labelExternalSettings,			#protocol : #accessing,			#sourceCode : 'labelExternalSettings\r\r\t^ labelExternalSettings',			#stamp : 'CaroHernandez 6/12/2016 00:09',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '665' ],		#self : OmReference [ '666' ],		#time : DateAndTime [ '2017-09-20T17:08:59.92439-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #labelFlyingMode,			#protocol : #accessing,			#sourceCode : 'labelFlyingMode\r\r\t^ labelFlyingMode',			#stamp : 'CaroHernandez 6/3/2016 15:25',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '666' ],		#self : OmReference [ '667' ],		#time : DateAndTime [ '2017-09-20T17:08:59.925976-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #'setARDroneInstance:',			#protocol : #accessing,			#sourceCode : 'setARDroneInstance: anARDrone\r\tself arDroneInstance: anARDrone.',			#stamp : 'CaroHernandez 5/25/2016 13:45',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '667' ],		#self : OmReference [ '668' ],		#time : DateAndTime [ '2017-09-20T17:08:59.927463-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #setFocus,			#protocol : #initialization,			#sourceCode : 'setFocus\r\t\r\tself focusOrder\r\t\tadd: buttonIndoorHull;\r\t\tadd: buttonOutdoor;\r\t\tadd: buttonFlyFree;\r\t\tadd: buttonFlyOnTopOfRoundel.',			#stamp : 'CaroHernandez 6/3/2016 15:14',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '668' ],		#self : OmReference [ '669' ],		#time : DateAndTime [ '2017-09-20T17:08:59.929159-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #setGroup,			#protocol : #initialization,			#sourceCode : 'setGroup\r\r\tRadioButtonGroup new \r\t\taddRadioButton: buttonFlyFree;\r\t\taddRadioButton: buttonFlyOnTopOfRoundel.\r\t',			#stamp : 'CaroHernandez 6/3/2016 15:26',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '669' ],		#self : OmReference [ '670' ],		#time : DateAndTime [ '2017-09-20T17:08:59.930547-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneConfigUI,				#isMetaSide : false			},			#name : #updateStateFromDroneConfiguration,			#protocol : #update,			#sourceCode : 'updateStateFromDroneConfiguration\r\tself buttonIndoorHull state: arDroneInstance configFlightWithoutShell not.\r\tself buttonOutdoor state: arDroneInstance configOutdoor.\r\tself buttonFlyFree state: (arDroneInstance configFlyingMode asInteger = ARDConstant flyingMode_FREE_FLIGHT asInteger).\r\tself buttonFlyOnTopOfRoundel state: (arDroneInstance configFlyingMode asInteger = ARDConstant flyingMode_HOVER_ON_TOP_OF_ORIENTED_ROUNDEL asInteger).',			#stamp : 'CaroHernandez 7/19/2016 20:32',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '670' ],		#self : OmReference [ '671' ],		#time : DateAndTime [ '2017-09-20T17:08:59.932164-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LRPARDroneControlUI class',				#isMetaSide : true			},			#name : #defaultSpec,			#protocol : #specs,			#sourceCode : 'defaultSpec\r\t<spec: #default>\r\t| row1 row2 row3 |\r\t\r\trow1 := SpecLayout composed\r\t\tnewRow: [ :row |\r\t\t\trow add: #takeoffButton.\r\t\t\trow add: #landButton.\r\t\t]\r\t\tyourself.\r\t\r\trow2 := SpecLayout composed \r\t\tnewRow: [ :row |\r\t\t\trow add: #label.\r\t\t\trow add: #keyboardListener.\r\t\t] \r\t\tyourself.\r\t\r\trow3 := SpecLayout composed\r\t\tnewRow: [ :row |\r\t\t\trow add: #videoButton.\r\t\t\trow add: #changeVideoButton.\r\t\t] yourself.\r\t\r\t^ SpecLayout composed\r\t\tnewColumn: [ :col |\r\t\t\tcol add: row1 height: self toolbarHeight.\r\t\t\tcol add: row2.\r\t\t\tcol add: row3 height: self toolbarHeight.\r\t\t];yourself. ',			#stamp : 'CaroHernandez 7/22/2016 22:50',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '671' ],		#self : OmReference [ '672' ],		#time : DateAndTime [ '2017-09-20T17:08:59.933567-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #arDroneInstance,			#protocol : #accessing,			#sourceCode : 'arDroneInstance\r\t^arDroneInstance',			#stamp : 'CaroHernandez 5/2/2016 01:34',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '672' ],		#self : OmReference [ '673' ],		#time : DateAndTime [ '2017-09-20T17:08:59.935117-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #'arDroneInstance:',			#protocol : #accessing,			#sourceCode : 'arDroneInstance: anARDrone\r\tarDroneInstance := anARDrone.\r\tmorphKB arDrone: anARDrone.\r\r',			#stamp : 'CaroHernandez 5/5/2016 21:36',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '673' ],		#self : OmReference [ '674' ],		#time : DateAndTime [ '2017-09-20T17:08:59.936707-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #changeVideoButton,			#protocol : #accessing,			#sourceCode : 'changeVideoButton\r\r\t ^ changeVideoButton',			#stamp : 'CaroHernandez 5/16/2016 00:28',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '674' ],		#self : OmReference [ '675' ],		#time : DateAndTime [ '2017-09-20T17:08:59.938371-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #'changeVideoButton:',			#protocol : #accessing,			#sourceCode : 'changeVideoButton: anObject\r\r\t changeVideoButton := anObject ',			#stamp : 'CaroHernandez 5/16/2016 00:28',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '675' ],		#self : OmReference [ '676' ],		#time : DateAndTime [ '2017-09-20T17:08:59.939813-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #'enabled:',			#protocol : #accessing,			#sourceCode : 'enabled: aBoolean\r\ttakeoffButton enabled: aBoolean.\r\tlandButton enabled: aBoolean.\r\tkeyboardListener enabled: aBoolean.\r\tvideoButton ifNotNil: [ videoButton enabled: aBoolean] .\r\tchangeVideoButton ifNotNil: [ changeVideoButton enabled: aBoolean] .\t\r\t',			#stamp : 'CaroHernandez 5/16/2016 00:28',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '676' ],		#self : OmReference [ '677' ],		#time : DateAndTime [ '2017-09-20T17:08:59.941375-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #extent,			#protocol : #'as yet unclassified',			#sourceCode : 'extent\r\t^ 300@140',			#stamp : 'CaroHernandez 7/22/2016 22:48',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '677' ],		#self : OmReference [ '678' ],		#time : DateAndTime [ '2017-09-20T17:08:59.943601-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #initializeWidgets,			#protocol : #initialization,			#sourceCode : 'initializeWidgets\r\r\ttakeoffButton := self newButton.\r\tlandButton := self newButton.\r\tvideoButton := self newButton.\r\tchangeVideoButton := self newButton.\r\tlabel := self newLabel.\r\tmorphKB := (ARDUIKeyboard withARDrone: self arDroneInstance) .\r\tkeyboardListener :=  morphKB asSpecAdapter.\r\t\r\ttakeoffButton label: \'Take off\'.\r\tlandButton label: \'Land\'.\r\tvideoButton label: \'Show video\'.\r\tchangeVideoButton label: \'Change camera\'.\r\tlabel label: \'Keyboard control:\'.\r\t\r\ttakeoffButton \r\t\taction: [ arDroneInstance takeOff. keyboardListener takeKeyboardFocus].\r\tlandButton \r\t\taction: [ arDroneInstance land . keyboardListener takeKeyboardFocus].\r\tvideoButton\r\t\taction: [  self runVideoProcess . keyboardListener takeKeyboardFocus].\r\tchangeVideoButton \r\t\taction: [ arDroneInstance changeVideoChannel .keyboardListener takeKeyboardFocus].\r\tself enabled: false.',			#stamp : 'CaroHernandez 7/22/2016 22:27',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '678' ],		#self : OmReference [ '679' ],		#time : DateAndTime [ '2017-09-20T17:08:59.945512-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #keyboardListener,			#protocol : #accessing,			#sourceCode : 'keyboardListener\r\r\t ^ keyboardListener ',			#stamp : 'CaroHernandez 5/5/2016 18:44',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '679' ],		#self : OmReference [ '680' ],		#time : DateAndTime [ '2017-09-20T17:08:59.947754-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #'keyboardListener:',			#protocol : #accessing,			#sourceCode : 'keyboardListener: anObject\r\r\t keyboardListener := anObject ',			#stamp : 'CaroHernandez 5/5/2016 18:44',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '680' ],		#self : OmReference [ '681' ],		#time : DateAndTime [ '2017-09-20T17:08:59.949456-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #label,			#protocol : #accessing,			#sourceCode : 'label\r\t ^ label',			#stamp : 'CaroHernandez 5/2/2016 12:21',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '681' ],		#self : OmReference [ '682' ],		#time : DateAndTime [ '2017-09-20T17:08:59.950945-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #'label:',			#protocol : #accessing,			#sourceCode : 'label: anObject\r\t label := anObject',			#stamp : 'CaroHernandez 5/2/2016 12:21',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '682' ],		#self : OmReference [ '683' ],		#time : DateAndTime [ '2017-09-20T17:08:59.952811-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #landButton,			#protocol : #accessing,			#sourceCode : 'landButton\r\t^ landButton',			#stamp : 'CaroHernandez 5/2/2016 11:58',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '683' ],		#self : OmReference [ '684' ],		#time : DateAndTime [ '2017-09-20T17:08:59.954161-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #'landButton:',			#protocol : #accessing,			#sourceCode : 'landButton: anObject\r\tlandButton := anObject',			#stamp : 'CaroHernandez 5/2/2016 11:58',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '684' ],		#self : OmReference [ '685' ],		#time : DateAndTime [ '2017-09-20T17:08:59.95542-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #resumeVideoProcess,			#protocol : #'video processing',			#sourceCode : 'resumeVideoProcess\r\tvideoProcess ifNotNil: [ videoProcess exitStatus ifNil: [ self runVideoProcess ] ]',			#stamp : 'CaroHernandez 6/2/2016 22:53',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '685' ],		#self : OmReference [ '686' ],		#time : DateAndTime [ '2017-09-20T17:08:59.956647-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #runVideoProcess,			#protocol : #'video processing',			#sourceCode : 'runVideoProcess\r\tself terminateVideoProcess.\r\tvideoProcess := OSProcess command: (\'exec \', self videoProcessPath asString)',			#stamp : 'CaroHernandez 6/18/2016 23:12',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '686' ],		#self : OmReference [ '687' ],		#time : DateAndTime [ '2017-09-20T17:08:59.957965-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #'setARDroneInstance:',			#protocol : #accessing,			#sourceCode : 'setARDroneInstance: anARDrone\r\tself arDroneInstance: anARDrone.',			#stamp : 'CaroHernandez 5/5/2016 21:33',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '687' ],		#self : OmReference [ '688' ],		#time : DateAndTime [ '2017-09-20T17:08:59.959714-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #suspendVideoProcess,			#protocol : #'video processing',			#sourceCode : 'suspendVideoProcess\r\tvideoProcess ifNotNil: [ \r\t\tvideoProcess sigterm .\r\t] ',			#stamp : 'CaroHernandez 6/12/2016 00:15',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '688' ],		#self : OmReference [ '689' ],		#time : DateAndTime [ '2017-09-20T17:08:59.961493-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #takeoffButton,			#protocol : #accessing,			#sourceCode : 'takeoffButton\r\t ^ takeoffButton',			#stamp : 'CaroHernandez 5/2/2016 11:58',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '689' ],		#self : OmReference [ '690' ],		#time : DateAndTime [ '2017-09-20T17:08:59.962817-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #'takeoffButton:',			#protocol : #accessing,			#sourceCode : 'takeoffButton: anObject\r\ttakeoffButton := anObject.',			#stamp : 'CaroHernandez 5/2/2016 11:58',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '690' ],		#self : OmReference [ '691' ],		#time : DateAndTime [ '2017-09-20T17:08:59.964071-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #terminateVideoProcess,			#protocol : #'video processing',			#sourceCode : 'terminateVideoProcess\r\tvideoProcess ifNotNil: [ \r\t\tvideoProcess terminate.  \r\t] ',			#stamp : 'CaroHernandez 6/2/2016 20:17',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '691' ],		#self : OmReference [ '692' ],		#time : DateAndTime [ '2017-09-20T17:08:59.965284-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #videoButton,			#protocol : #accessing,			#sourceCode : 'videoButton\r\t^ videoButton',			#stamp : 'CaroHernandez 5/15/2016 22:56',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '692' ],		#self : OmReference [ '693' ],		#time : DateAndTime [ '2017-09-20T17:08:59.966492-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #'videoButton:',			#protocol : #accessing,			#sourceCode : 'videoButton: anObject\r\tvideoButton := anObject',			#stamp : 'CaroHernandez 5/15/2016 22:56',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '693' ],		#self : OmReference [ '694' ],		#time : DateAndTime [ '2017-09-20T17:08:59.968015-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #videoProcess,			#protocol : #accessing,			#sourceCode : 'videoProcess\r\r\t^ videoProcess',			#stamp : 'CaroHernandez 5/16/2016 00:10',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '694' ],		#self : OmReference [ '695' ],		#time : DateAndTime [ '2017-09-20T17:08:59.969382-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #'videoProcess:',			#protocol : #accessing,			#sourceCode : 'videoProcess: anObject\r\r\tvideoProcess := anObject ',			#stamp : 'CaroHernandez 5/16/2016 00:10',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '695' ],		#self : OmReference [ '696' ],		#time : DateAndTime [ '2017-09-20T17:08:59.970654-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneControlUI,				#isMetaSide : false			},			#name : #videoProcessPath,			#protocol : #accessing,			#sourceCode : 'videoProcessPath\r\r\t^ \'~/Documents/ARDrone_SDK_2_0_1/ARDrone_SDK_2_0_1/Examples/Linux/Build/Release/linux_video_demo\'.',			#stamp : 'CaroHernandez 6/18/2016 20:14',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '696' ],		#self : OmReference [ '697' ],		#time : DateAndTime [ '2017-09-20T17:08:59.972002-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LRPARDroneDisplayerUI class',				#isMetaSide : true			},			#name : #defaultSpec,			#protocol : #specs,			#sourceCode : 'defaultSpec\r\t<spec: #default>\r\t\r\t^ SpecLayout composed\r\t\tnewRow: [ :row |\r\t\t\trow add: #navdataButton.\r\t\t\trow add: #configButton.\r\t\t\trow add: #visionButton.\r\t\t];yourself. ',			#stamp : 'CaroHernandez 7/22/2016 23:10',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '697' ],		#self : OmReference [ '698' ],		#time : DateAndTime [ '2017-09-20T17:08:59.972873-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerUI,				#isMetaSide : false			},			#name : #arDroneInstance,			#protocol : #accessing,			#sourceCode : 'arDroneInstance\r\t^arDroneInstance',			#stamp : 'CaroHernandez 7/22/2016 16:27',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '698' ],		#self : OmReference [ '699' ],		#time : DateAndTime [ '2017-09-20T17:08:59.974108-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerUI,				#isMetaSide : false			},			#name : #'arDroneInstance:',			#protocol : #accessing,			#sourceCode : 'arDroneInstance: anARDrone\r\tarDroneInstance := anARDrone.\r\r\r',			#stamp : 'CaroHernandez 7/22/2016 16:27',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '699' ],		#self : OmReference [ '700' ],		#time : DateAndTime [ '2017-09-20T17:08:59.975454-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerUI,				#isMetaSide : false			},			#name : #closeAllWindows,			#protocol : #initialize-release,			#sourceCode : 'closeAllWindows\r\tnavdata close.\r\tconfig close.\r\tvision close.',			#stamp : 'CaroHernandez 7/22/2016 23:11',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '700' ],		#self : OmReference [ '701' ],		#time : DateAndTime [ '2017-09-20T17:08:59.976974-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerUI,				#isMetaSide : false			},			#name : #configButton,			#protocol : #accessing,			#sourceCode : 'configButton\r\t^ configButton',			#stamp : 'CaroHernandez 7/22/2016 16:27',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '701' ],		#self : OmReference [ '702' ],		#time : DateAndTime [ '2017-09-20T17:08:59.978325-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerUI,				#isMetaSide : false			},			#name : #'enabled:',			#protocol : #accessing,			#sourceCode : 'enabled: aBoolean\r\r\tnavdataButton enabled: aBoolean.\r\tvisionButton enabled: aBoolean.\r\tconfigButton enabled: aBoolean.',			#stamp : 'CaroHernandez 7/22/2016 23:11',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '702' ],		#self : OmReference [ '703' ],		#time : DateAndTime [ '2017-09-20T17:08:59.979973-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerUI,				#isMetaSide : false			},			#name : #initializeWidgets,			#protocol : #initialization,			#sourceCode : 'initializeWidgets\r\t\r\tconfig := LRPARDroneDisplayerForConfig new.\r\tnavdata := LRPARDroneDisplayerForNavdata new.\r\tvision := LRPARDroneDisplayerForVision new.\r\t \r\tnavdataButton := self newButton.\r\tconfigButton := self newButton.\r\tvisionButton := self newButton.\r\t\r\tnavdataButton label: \'Navdata\'.\r\tconfigButton label: \'Configuration\'.\r\tvisionButton label: \'Vision detection\'.\r\t\r\tnavdataButton action: [ navdata open. ].\r\tconfigButton action: [ config open ].\r\tvisionButton action: [ vision open ].\r\t',			#stamp : 'CaroHernandez 7/22/2016 23:11',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '703' ],		#self : OmReference [ '704' ],		#time : DateAndTime [ '2017-09-20T17:08:59.981574-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerUI,				#isMetaSide : false			},			#name : #navdataButton,			#protocol : #accessing,			#sourceCode : 'navdataButton\r\t^ navdataButton',			#stamp : 'CaroHernandez 7/22/2016 16:27',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '704' ],		#self : OmReference [ '705' ],		#time : DateAndTime [ '2017-09-20T17:08:59.983019-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerUI,				#isMetaSide : false			},			#name : #'setARDroneInstance:',			#protocol : #accessing,			#sourceCode : 'setARDroneInstance: anARDrone\r\tself arDroneInstance: anARDrone.\r\tnavdata setARDroneInstance: anARDrone.\r\tconfig setARDroneInstance: anARDrone .\r\tvision setARDroneInstance: anARDrone .\r',			#stamp : 'CaroHernandez 7/22/2016 23:11',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '705' ],		#self : OmReference [ '706' ],		#time : DateAndTime [ '2017-09-20T17:08:59.98434-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerUI,				#isMetaSide : false			},			#name : #visionButton,			#protocol : #accessing,			#sourceCode : 'visionButton\r\t^ visionButton',			#stamp : 'CaroHernandez 7/22/2016 16:27',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '706' ],		#self : OmReference [ '707' ],		#time : DateAndTime [ '2017-09-20T17:08:59.98573-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LRPARDroneStateBatteryUI class',				#isMetaSide : true			},			#name : #defaultSpec,			#protocol : #specs,			#sourceCode : 'defaultSpec\r\t<spec: #default>\r\t\r\t^ SpecLayout composed \r\t\t\tnewRow: [ :row |\r\t\t\t\trow add: #label.\r\t\t\t \trow add: #message.\r\t\t] height: self toolbarHeight; \r\t\tyourself.\r',			#stamp : 'CaroHernandez 5/5/2016 19:46',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '707' ],		#self : OmReference [ '708' ],		#time : DateAndTime [ '2017-09-20T17:08:59.987334-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LRPARDroneStateBatteryUI class',				#isMetaSide : true			},			#name : #lowBatteryThreshold,			#protocol : #specs,			#sourceCode : 'lowBatteryThreshold\r\t^ 30',			#stamp : 'CaroHernandez 5/5/2016 21:04',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '708' ],		#self : OmReference [ '709' ],		#time : DateAndTime [ '2017-09-20T17:08:59.988613-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateBatteryUI,				#isMetaSide : false			},			#name : #arDroneInstance,			#protocol : #accessing,			#sourceCode : 'arDroneInstance\r\t^ arDroneInstance',			#stamp : 'CaroHernandez 5/5/2016 19:41',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '709' ],		#self : OmReference [ '710' ],		#time : DateAndTime [ '2017-09-20T17:08:59.989781-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateBatteryUI,				#isMetaSide : false			},			#name : #'arDroneInstance:',			#protocol : #accessing,			#sourceCode : 'arDroneInstance: anARDrone\r\tarDroneInstance := anARDrone.\r\t',			#stamp : 'CaroHernandez 5/5/2016 19:41',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '710' ],		#self : OmReference [ '711' ],		#time : DateAndTime [ '2017-09-20T17:08:59.990899-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateBatteryUI,				#isMetaSide : false			},			#name : #initializeWidgets,			#protocol : #initialization,			#sourceCode : 'initializeWidgets\r\tlabel := self newLabel.\r\tmessage := self newLabel.\r\t\r\tlabel label: \'Battery\'.\r\tmessage label: \'\'.',			#stamp : 'CaroHernandez 5/5/2016 20:50',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '711' ],		#self : OmReference [ '712' ],		#time : DateAndTime [ '2017-09-20T17:08:59.992088-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateBatteryUI,				#isMetaSide : false			},			#name : #label,			#protocol : #accessing,			#sourceCode : 'label\r\t^ label',			#stamp : 'CaroHernandez 5/5/2016 19:40',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '712' ],		#self : OmReference [ '713' ],		#time : DateAndTime [ '2017-09-20T17:08:59.993421-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateBatteryUI,				#isMetaSide : false			},			#name : #'label:',			#protocol : #accessing,			#sourceCode : 'label: anObject\r\tlabel := anObject',			#stamp : 'CaroHernandez 5/5/2016 19:40',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '713' ],		#self : OmReference [ '714' ],		#time : DateAndTime [ '2017-09-20T17:08:59.994632-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateBatteryUI,				#isMetaSide : false			},			#name : #message,			#protocol : #accessing,			#sourceCode : 'message\r\t^ message',			#stamp : 'CaroHernandez 5/5/2016 19:44',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '714' ],		#self : OmReference [ '715' ],		#time : DateAndTime [ '2017-09-20T17:08:59.995855-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateBatteryUI,				#isMetaSide : false			},			#name : #'message:',			#protocol : #accessing,			#sourceCode : 'message: anObject\r\tmessage := anObject',			#stamp : 'CaroHernandez 5/5/2016 19:44',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '715' ],		#self : OmReference [ '716' ],		#time : DateAndTime [ '2017-09-20T17:08:59.997156-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateBatteryUI,				#isMetaSide : false			},			#name : #percentage,			#protocol : #update,			#sourceCode : 'percentage\r\t^ percentage',			#stamp : 'CaroHernandez 5/5/2016 20:48',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '716' ],		#self : OmReference [ '717' ],		#time : DateAndTime [ '2017-09-20T17:08:59.998306-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateBatteryUI,				#isMetaSide : false			},			#name : #'percentage:isLow:',			#protocol : #update,			#sourceCode : 'percentage: anInt isLow: aBoolean\r\tanInt isNil \r\tifTrue: [ \r\t\tlabel label: \'Battery level\'.\r\t\tmessage label: \'\' ]\r\tifFalse: [\r\t\tlabel label: anInt asString, \'%  Battery level\'.\r\t\taBoolean \r\t\tifTrue: [ message label: \'Low Battery\' . message color: Color red]\r\t\tifFalse: [ message label: \'\' .  ]\r\t].\r\tlabel changed: #getText.\r\tmessage changed: #getText.',			#stamp : 'CaroHernandez 6/3/2016 17:04',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '717' ],		#self : OmReference [ '718' ],		#time : DateAndTime [ '2017-09-20T17:08:59.999431-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateBatteryUI,				#isMetaSide : false			},			#name : #'setARDroneInstance:',			#protocol : #accessing,			#sourceCode : 'setARDroneInstance: anARDrone\r\tself arDroneInstance: anARDrone ',			#stamp : 'CaroHernandez 5/5/2016 19:53',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '718' ],		#self : OmReference [ '719' ],		#time : DateAndTime [ '2017-09-20T17:09:00.000683-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LRPARDroneStateConnectionUI class',				#isMetaSide : true			},			#name : #defaultSpec,			#protocol : #specs,			#sourceCode : 'defaultSpec\r\t<spec: #default>\r\t\r\t^ SpecLayout composed \r\t\t\tnewRow: [ :row |\r\t\t\t\trow add: #icon width: self iconDiameter.\r\t\t\t \trow add: #label\r\t\t] height: self toolbarHeight; \r\t\tyourself.\r\t',			#stamp : 'CaroHernandez 5/5/2016 20:01',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '719' ],		#self : OmReference [ '720' ],		#time : DateAndTime [ '2017-09-20T17:09:00.001831-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LRPARDroneStateConnectionUI class',				#isMetaSide : true			},			#name : #iconDiameter,			#protocol : #specs,			#sourceCode : 'iconDiameter\r\t^ 20',			#stamp : 'CaroHernandez 5/5/2016 20:01',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '720' ],		#self : OmReference [ '721' ],		#time : DateAndTime [ '2017-09-20T17:09:00.002967-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateConnectionUI,				#isMetaSide : false			},			#name : #arDroneInstance,			#protocol : #accessing,			#sourceCode : 'arDroneInstance\r\t^ arDroneInstance',			#stamp : 'CaroHernandez 5/5/2016 20:00',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '721' ],		#self : OmReference [ '722' ],		#time : DateAndTime [ '2017-09-20T17:09:00.004204-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateConnectionUI,				#isMetaSide : false			},			#name : #'arDroneInstance:',			#protocol : #accessing,			#sourceCode : 'arDroneInstance: anARDrone\r\tarDroneInstance := anARDrone.\r\t',			#stamp : 'CaroHernandez 5/5/2016 20:00',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '722' ],		#self : OmReference [ '723' ],		#time : DateAndTime [ '2017-09-20T17:09:00.005672-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateConnectionUI,				#isMetaSide : false			},			#name : #connectionState,			#protocol : #update,			#sourceCode : 'connectionState\r\t^ connectionState',			#stamp : 'CaroHernandez 5/19/2016 21:49',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '723' ],		#self : OmReference [ '724' ],		#time : DateAndTime [ '2017-09-20T17:09:00.006879-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateConnectionUI,				#isMetaSide : false			},			#name : #'connectionState:',			#protocol : #update,			#sourceCode : 'connectionState: anInt\r\t| color message |\r\t\r\tconnectionState := anInt.\r\tconnectionState = ARDConstant connection_CONNECTED\r\t\tifTrue: [ color := Color green. \r\t\t\t\t\t message := \'Connected\'. ].\r\t\t\t\t\t\r\tconnectionState = ARDConstant connection_DISCONNECTED\r\t\tifTrue: [ color := Color red.\r\t\t\t\t\t  message := \'Disconnected\'. ].\r\t\t\t\t\r\tconnectionState = ARDConstant connection_CONNECTING\r\t\tifTrue: [ color := Color yellow.  \r\t\t\t\t\t\tmessage := \'Connecting...\'.].\r\t\r\r\tself updateIconImage: color.\r\r\ticon changed: #getImage.\r\tlabel label: message.\r\t\r\t\r\t',			#stamp : 'CaroHernandez 5/19/2016 22:05',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '724' ],		#self : OmReference [ '725' ],		#time : DateAndTime [ '2017-09-20T17:09:00.008399-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateConnectionUI,				#isMetaSide : false			},			#name : #'errorMessage:',			#protocol : #accessing,			#sourceCode : 'errorMessage: aString\r\t\r\tlabel label: \'Disconected - Connection Lost: \', aString.\r\t',			#stamp : 'CaroHernandez 5/5/2016 20:00',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '725' ],		#self : OmReference [ '726' ],		#time : DateAndTime [ '2017-09-20T17:09:00.010678-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateConnectionUI,				#isMetaSide : false			},			#name : #icon,			#protocol : #accessing,			#sourceCode : 'icon\r\t^ icon',			#stamp : 'CaroHernandez 5/5/2016 20:00',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '726' ],		#self : OmReference [ '727' ],		#time : DateAndTime [ '2017-09-20T17:09:00.012188-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateConnectionUI,				#isMetaSide : false			},			#name : #'icon:',			#protocol : #accessing,			#sourceCode : 'icon: anObject\r\ticon := anObject ',			#stamp : 'CaroHernandez 5/5/2016 20:00',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '727' ],		#self : OmReference [ '728' ],		#time : DateAndTime [ '2017-09-20T17:09:00.014104-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateConnectionUI,				#isMetaSide : false			},			#name : #initializeWidgets,			#protocol : #accessing,			#sourceCode : 'initializeWidgets\r\t| blackdot |\r\tlabel := self newLabel.\r\ticon := self newImage.\t\r\t\r\tblackdot := ColorForm dotOfSize: self class iconDiameter.\r\ticon image: (ColorForm mappingWhiteToTransparentFrom: blackdot).\t\r\t\r\tself connectionState: ARDConstant connection_DISCONNECTED.',			#stamp : 'CaroHernandez 5/19/2016 21:52',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '728' ],		#self : OmReference [ '729' ],		#time : DateAndTime [ '2017-09-20T17:09:00.015567-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateConnectionUI,				#isMetaSide : false			},			#name : #label,			#protocol : #accessing,			#sourceCode : 'label\r\t^ label',			#stamp : 'CaroHernandez 5/5/2016 20:00',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '729' ],		#self : OmReference [ '730' ],		#time : DateAndTime [ '2017-09-20T17:09:00.017052-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateConnectionUI,				#isMetaSide : false			},			#name : #'label:',			#protocol : #accessing,			#sourceCode : 'label: anObject\r\tlabel := anObject',			#stamp : 'CaroHernandez 5/5/2016 20:00',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '730' ],		#self : OmReference [ '731' ],		#time : DateAndTime [ '2017-09-20T17:09:00.018312-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateConnectionUI,				#isMetaSide : false			},			#name : #'setARDroneInstance:',			#protocol : #accessing,			#sourceCode : 'setARDroneInstance: anARDrone\r\tself arDroneInstance: anARDrone.\r\t',			#stamp : 'CaroHernandez 5/5/2016 20:02',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '731' ],		#self : OmReference [ '732' ],		#time : DateAndTime [ '2017-09-20T17:09:00.019637-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateConnectionUI,				#isMetaSide : false			},			#name : #'updateIconImage:',			#protocol : #update,			#sourceCode : 'updateIconImage: aColor\r\t| r |\r\tr := self class iconDiameter/2.\t\r\ticon image replaceColorAt: r@r with: aColor.\r\t\r\t',			#stamp : 'CaroHernandez 5/5/2016 20:00',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '732' ],		#self : OmReference [ '733' ],		#time : DateAndTime [ '2017-09-20T17:09:00.020785-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LRPARDroneStateTagsUI class',				#isMetaSide : true			},			#name : #defaultSpec,			#protocol : #specs,			#sourceCode : 'defaultSpec\r\t<spec: #default>\r\t\r\t^ SpecLayout composed \r\t\t\tnewRow: [ :row |\r\t\t\t \trow add: #message.\r\t\t] height: self toolbarHeight * 8; \r\t\tyourself.\r',			#stamp : 'CaroHernandez 5/25/2016 21:25',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '733' ],		#self : OmReference [ '734' ],		#time : DateAndTime [ '2017-09-20T17:09:00.021711-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateTagsUI,				#isMetaSide : false			},			#name : #arDroneInstance,			#protocol : #accessing,			#sourceCode : 'arDroneInstance\r\t^ arDroneInstance',			#stamp : 'CaroHernandez 5/15/2016 23:45',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '734' ],		#self : OmReference [ '735' ],		#time : DateAndTime [ '2017-09-20T17:09:00.022806-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateTagsUI,				#isMetaSide : false			},			#name : #'arDroneInstance:',			#protocol : #accessing,			#sourceCode : 'arDroneInstance: anARDrone\r\tarDroneInstance := anARDrone.\r\t',			#stamp : 'CaroHernandez 5/15/2016 23:45',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '735' ],		#self : OmReference [ '736' ],		#time : DateAndTime [ '2017-09-20T17:09:00.023732-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateTagsUI,				#isMetaSide : false			},			#name : #initializeWidgets,			#protocol : #initialization,			#sourceCode : 'initializeWidgets\r\tmessage := self newText.\r\tmessage text: \'No Tags detected\'.\r\tmessage disable.',			#stamp : 'CaroHernandez 5/25/2016 20:45',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '736' ],		#self : OmReference [ '737' ],		#time : DateAndTime [ '2017-09-20T17:09:00.025079-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateTagsUI,				#isMetaSide : false			},			#name : #message,			#protocol : #accessing,			#sourceCode : 'message\r\t^ message',			#stamp : 'CaroHernandez 5/15/2016 23:45',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '737' ],		#self : OmReference [ '738' ],		#time : DateAndTime [ '2017-09-20T17:09:00.026209-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateTagsUI,				#isMetaSide : false			},			#name : #'message:',			#protocol : #accessing,			#sourceCode : 'message: aString\r\tmessage text: aString.\r\tmessage changed: #getText.',			#stamp : 'CaroHernandez 5/25/2016 20:50',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '738' ],		#self : OmReference [ '739' ],		#time : DateAndTime [ '2017-09-20T17:09:00.027344-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateTagsUI,				#isMetaSide : false			},			#name : #'setARDroneInstance:',			#protocol : #accessing,			#sourceCode : 'setARDroneInstance: anARDrone\r\tself arDroneInstance: anARDrone ',			#stamp : 'CaroHernandez 5/15/2016 23:46',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '739' ],		#self : OmReference [ '740' ],		#time : DateAndTime [ '2017-09-20T17:09:00.028339-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LRPARDroneStateUI class',				#isMetaSide : true			},			#name : #defaultSpec,			#protocol : #specs,			#sourceCode : 'defaultSpec\r\t<spec: #default>\r\t^ SpecLayout composed \r\t\t\tnewRow: [ :row |\r\t\t\t\trow add: #battery.\r\t\t\t \trow add: #connection.\r\t\t] height: self toolbarHeight;\r\tyourself.',			#stamp : 'CaroHernandez 6/18/2016 23:19',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '740' ],		#self : OmReference [ '741' ],		#time : DateAndTime [ '2017-09-20T17:09:00.029186-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateUI,				#isMetaSide : false			},			#name : #arDroneInstance,			#protocol : #accessing,			#sourceCode : 'arDroneInstance\r\t^ arDroneInstance',			#stamp : 'CaroHernandez 5/5/2016 19:59',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '741' ],		#self : OmReference [ '742' ],		#time : DateAndTime [ '2017-09-20T17:09:00.030131-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateUI,				#isMetaSide : false			},			#name : #'arDroneInstance:',			#protocol : #accessing,			#sourceCode : 'arDroneInstance: anARDrone\r\tarDroneInstance := anARDrone.\r\t',			#stamp : 'CaroHernandez 4/30/2016 19:59',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '742' ],		#self : OmReference [ '743' ],		#time : DateAndTime [ '2017-09-20T17:09:00.031049-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateUI,				#isMetaSide : false			},			#name : #battery,			#protocol : #accessing,			#sourceCode : 'battery\r\t^ battery',			#stamp : 'CaroHernandez 5/5/2016 19:51',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '743' ],		#self : OmReference [ '744' ],		#time : DateAndTime [ '2017-09-20T17:09:00.031932-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateUI,				#isMetaSide : false			},			#name : #'battery:',			#protocol : #accessing,			#sourceCode : 'battery: anObject\r\tbattery := anObject',			#stamp : 'CaroHernandez 5/5/2016 19:51',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '744' ],		#self : OmReference [ '745' ],		#time : DateAndTime [ '2017-09-20T17:09:00.033363-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateUI,				#isMetaSide : false			},			#name : #connection,			#protocol : #accessing,			#sourceCode : 'connection\r\t^ connection',			#stamp : 'CaroHernandez 5/5/2016 20:04',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '745' ],		#self : OmReference [ '746' ],		#time : DateAndTime [ '2017-09-20T17:09:00.034497-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateUI,				#isMetaSide : false			},			#name : #'connection:',			#protocol : #accessing,			#sourceCode : 'connection: anObject\r\tconnection := anObject',			#stamp : 'CaroHernandez 5/5/2016 20:04',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '746' ],		#self : OmReference [ '747' ],		#time : DateAndTime [ '2017-09-20T17:09:00.035439-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateUI,				#isMetaSide : false			},			#name : #initializeWidgets,			#protocol : #accessing,			#sourceCode : 'initializeWidgets\r\tbattery := LRPARDroneStateBatteryUI new.\r\tconnection := LRPARDroneStateConnectionUI new.\r\t"tags := LRPARDroneStateTagsUI new."',			#stamp : 'CaroHernandez 6/4/2016 04:10',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '747' ],		#self : OmReference [ '748' ],		#time : DateAndTime [ '2017-09-20T17:09:00.036337-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateUI,				#isMetaSide : false			},			#name : #'setARDroneInstance:',			#protocol : #accessing,			#sourceCode : 'setARDroneInstance: anARDrone\r\tself arDroneInstance: anARDrone.\r\tself connection setARDroneInstance: anARDrone.\r\tself battery setARDroneInstance: anARDrone.\r\t"self tags setARDroneInstance: anARDrone." \r\t',			#stamp : 'CaroHernandez 6/4/2016 04:11',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '748' ],		#self : OmReference [ '749' ],		#time : DateAndTime [ '2017-09-20T17:09:00.037351-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateUI,				#isMetaSide : false			},			#name : #tags,			#protocol : #accessing,			#sourceCode : 'tags\r\t^ tags',			#stamp : 'CaroHernandez 5/15/2016 23:54',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '749' ],		#self : OmReference [ '750' ],		#time : DateAndTime [ '2017-09-20T17:09:00.038427-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneStateUI,				#isMetaSide : false			},			#name : #'tags:',			#protocol : #accessing,			#sourceCode : 'tags: anObject\r\ttags := anObject',			#stamp : 'CaroHernandez 5/15/2016 23:54',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '750' ],		#self : OmReference [ '751' ],		#time : DateAndTime [ '2017-09-20T17:09:00.039532-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LRPARDroneUI class',				#isMetaSide : true			},			#name : #defaultSpec,			#protocol : #specs,			#sourceCode : 'defaultSpec\r\t<spec: #default>\r\t^ SpecLayout composed\r\t  newColumn: [ :mainColumn|\r\t\t\tmainColumn add: #connectButton height: self toolbarHeight.\r\t\t\tmainColumn add: #control height: (self toolbarHeight * 2.5 + 110).\r\t\t\tmainColumn add: #config height: self toolbarHeight * 2.\r\t\t\tmainColumn add: #display height: self toolbarHeight.\r\t\t\tmainColumn add: #state height: self toolbarHeight.\r\t];\r\tyourself. ',			#stamp : 'CaroHernandez 7/22/2016 22:48',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '751' ],		#self : OmReference [ '752' ],		#time : DateAndTime [ '2017-09-20T17:09:00.040991-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LRPARDroneUI class',				#isMetaSide : true			},			#name : #title,			#protocol : #specs,			#sourceCode : 'title\r\t^ \'AR.Drone\'',			#stamp : 'CaroHernandez 4/29/2016 00:26',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '752' ],		#self : OmReference [ '753' ],		#time : DateAndTime [ '2017-09-20T17:09:00.042716-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #arDroneInstance,			#protocol : #accessing,			#sourceCode : 'arDroneInstance\r\t^ arDroneInstance \r\t',			#stamp : 'CaroHernandez 4/29/2016 00:36',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '753' ],		#self : OmReference [ '754' ],		#time : DateAndTime [ '2017-09-20T17:09:00.045739-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #'arDroneInstance:',			#protocol : #accessing,			#sourceCode : 'arDroneInstance: anARDrone\r\tarDroneInstance := anARDrone \r\t',			#stamp : 'CaroHernandez 4/29/2016 00:37',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '754' ],		#self : OmReference [ '755' ],		#time : DateAndTime [ '2017-09-20T17:09:00.049095-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #config,			#protocol : #accessing,			#sourceCode : 'config \r\t^ config',			#stamp : 'CaroHernandez 5/25/2016 13:43',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '755' ],		#self : OmReference [ '756' ],		#time : DateAndTime [ '2017-09-20T17:09:00.051335-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #'config:',			#protocol : #accessing,			#sourceCode : 'config: anObject\r\tconfig := anObject',			#stamp : 'CaroHernandez 5/25/2016 13:43',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '756' ],		#self : OmReference [ '757' ],		#time : DateAndTime [ '2017-09-20T17:09:00.054753-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #connectButton,			#protocol : #accessing,			#sourceCode : 'connectButton\r\t^ connectButton\r\t',			#stamp : 'CaroHernandez 4/29/2016 00:36',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '757' ],		#self : OmReference [ '758' ],		#time : DateAndTime [ '2017-09-20T17:09:00.056621-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #connected,			#protocol : #accessing,			#sourceCode : 'connected\r\t^ self state connection connectionState = ARDConstant connection_CONNECTED  \r\t',			#stamp : 'CaroHernandez 5/19/2016 21:55',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '758' ],		#self : OmReference [ '759' ],		#time : DateAndTime [ '2017-09-20T17:09:00.058531-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #control,			#protocol : #accessing,			#sourceCode : 'control\r\t^ control\r\t',			#stamp : 'CaroHernandez 5/2/2016 01:39',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '759' ],		#self : OmReference [ '760' ],		#time : DateAndTime [ '2017-09-20T17:09:00.060552-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #'control:',			#protocol : #accessing,			#sourceCode : 'control: anObject\r\tcontrol := anObject\r\t',			#stamp : 'CaroHernandez 5/2/2016 01:39',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '760' ],		#self : OmReference [ '761' ],		#time : DateAndTime [ '2017-09-20T17:09:00.062251-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #defaultWindowModelClass,			#protocol : #accessing,			#sourceCode : 'defaultWindowModelClass\r\r\t^ TickingWindowModel ',			#stamp : 'CaroHernandez 5/5/2016 19:29',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '761' ],		#self : OmReference [ '762' ],		#time : DateAndTime [ '2017-09-20T17:09:00.063955-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #disableAll,			#protocol : #enable/disable,			#sourceCode : 'disableAll\r\tconnectButton enabled: false.\r\tconfig enabled: false.\r\tcontrol enabled: false.\r\tdisplay enabled: false.\r\t',			#stamp : 'CaroHernandez 7/22/2016 16:41',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '762' ],		#self : OmReference [ '763' ],		#time : DateAndTime [ '2017-09-20T17:09:00.066041-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #display,			#protocol : #accessing,			#sourceCode : 'display\r\t^ display\r\t',			#stamp : 'CaroHernandez 7/22/2016 16:36',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '763' ],		#self : OmReference [ '764' ],		#time : DateAndTime [ '2017-09-20T17:09:00.067607-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #enableAll,			#protocol : #enable/disable,			#sourceCode : 'enableAll\r\tconnectButton enabled: true.\r\tconfig enabled: true.\r\tcontrol enabled: true.\r\tdisplay enabled: true.\r\t',			#stamp : 'CaroHernandez 7/22/2016 16:40',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '764' ],		#self : OmReference [ '765' ],		#time : DateAndTime [ '2017-09-20T17:09:00.069183-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #extent,			#protocol : #api,			#sourceCode : 'extent\r\t^400@400',			#stamp : 'CaroHernandez 7/22/2016 22:48',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '765' ],		#self : OmReference [ '766' ],		#time : DateAndTime [ '2017-09-20T17:09:00.07084-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\r\t"on close unsubscribe"\r\tself whenWindowChanged: [  \r\t\tself window whenClosedDo: [\r\t\t\tself display closeAllWindows. \r\t\t\tself unsubscribe.\r\t\t\tself control terminateVideoProcess.\r\t\t].\r\t\t\r\t].\r\r\tself whenBuiltDo: [\r\t\tself connectButton enabled: true.\r\t\tself control enabled: false.\r\t\tself config enabled: false.\r\t\tself display enabled: false. ]',			#stamp : 'CaroHernandez 7/22/2016 16:45',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '766' ],		#self : OmReference [ '767' ],		#time : DateAndTime [ '2017-09-20T17:09:00.07281-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #initializeExceptionHandlers,			#protocol : #initialization,			#sourceCode : 'initializeExceptionHandlers\r\t\r\tself arDroneInstance addHandlerFor: DroneConnectionTimeout \r\t\tdo: [ :ex | Transcript show: \'Timeout\';cr].\r\t\r\tself arDroneInstance addHandlerFor: DroneConnectionInterrupted \r\t\tdo: [ :ex | Transcript show: \'Connection interrupted\';cr. ].\r\t\r',			#stamp : 'CaroHernandez 6/25/2016 21:18',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '767' ],		#self : OmReference [ '768' ],		#time : DateAndTime [ '2017-09-20T17:09:00.074983-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #initializeWidgets,			#protocol : #initialization,			#sourceCode : 'initializeWidgets\r\t\r\tstate := LRPARDroneStateUI new.\r\tcontrol := LRPARDroneControlUI new.\r\tconfig := LRPARDroneConfigUI new.\r\tdisplay := LRPARDroneDisplayerUI new.\r\t\r\tconnectButton := self newButton.\r\tconnectButton label: \'Connect\'.\r\tconnectButton action: [ arDroneInstance startSession ].\r',			#stamp : 'CaroHernandez 7/22/2016 16:34',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '768' ],		#self : OmReference [ '769' ],		#time : DateAndTime [ '2017-09-20T17:09:00.077456-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #'setARDroneInstance:',			#protocol : #initialization,			#sourceCode : 'setARDroneInstance: anARDrone\r\r\tself arDroneInstance: anARDrone.\r\tstate setARDroneInstance: anARDrone.\r\tcontrol setARDroneInstance: anARDrone.\r\tconfig setARDroneInstance: anARDrone.\r\tdisplay setARDroneInstance: anARDrone.\r\tself initializeExceptionHandlers.\r\tself subscribe.\r\t',			#stamp : 'CaroHernandez 7/22/2016 16:34',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '769' ],		#self : OmReference [ '770' ],		#time : DateAndTime [ '2017-09-20T17:09:00.080461-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #state,			#protocol : #accessing,			#sourceCode : 'state\r\t^ state\r\t',			#stamp : 'CaroHernandez 4/29/2016 18:02',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '770' ],		#self : OmReference [ '771' ],		#time : DateAndTime [ '2017-09-20T17:09:00.082604-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #'state:',			#protocol : #accessing,			#sourceCode : 'state: anObject\r\tstate := anObject\r\t',			#stamp : 'CaroHernandez 4/29/2016 18:02',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '771' ],		#self : OmReference [ '772' ],		#time : DateAndTime [ '2017-09-20T17:09:00.084473-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #step,			#protocol : #update,			#sourceCode : 'step\r\tself connected \r\t\tifTrue: [ \r\t\t\tself state battery \r\t\t\t\tpercentage: arDroneInstance batteryLevel \r\t\t\t\tisLow: arDroneInstance lowBattery.\r\t\t\t\t\r\t\t\t\t"Transcript show: (\'Roundel detected: \' , arDroneInstance tagsNumberDetected asString, \' oriented: \', arDroneInstance roundelTagIsOrientedAndCentered asString), \' HoverOnTop: \' , ((arDroneInstance configFlyingMode asInteger = (ARDConstant flyingMode_HOVER_ON_TOP_OF_ORIENTED_ROUNDEL )) asString) ;cr."\r\t\t\t\t"self state tags message: arDroneInstance tagsInformationAsString." ]\r\t\tifFalse: [ config enabled: false. ]. \r\t\t\r\r',			#stamp : 'CaroHernandez 7/21/2016 22:21',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '772' ],		#self : OmReference [ '773' ],		#time : DateAndTime [ '2017-09-20T17:09:00.086086-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #stepTime,			#protocol : #stepping,			#sourceCode : 'stepTime\r\r\t^100',			#stamp : 'CaroHernandez 7/21/2016 22:35',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '773' ],		#self : OmReference [ '774' ],		#time : DateAndTime [ '2017-09-20T17:09:00.087672-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #subscribe,			#protocol : #private,			#sourceCode : 'subscribe\r\tself arDroneInstance announcer \r\t\tsubscribe: DroneConnectionStart\r\t\tdo: [ self state connection connectionState: ARDConstant connection_CONNECTED .\r\t\t\t\tself enableAll.\r\t\t\t\t"enable all controls except:"\r\t\t\t\tself connectButton enabled: false. \r\t\t\t\tself config enabled: false.\r\t\t\t\tself display configButton enabled: false.\r\t\t\t\tself control suspendVideoProcess.\r\t\t\t].\r\t\t\r\tself arDroneInstance announcer  \r\t\tsubscribe: DroneConnectionStop\r\t\tdo: [ self state connection connectionState: ARDConstant connection_DISCONNECTED. \r\t\t\t\tself disableAll.\r\t\t\t\t"disable all except:"\r\t\t\t\tself connectButton enabled: true.\r\t\t\t].\t\r\t\r\tself arDroneInstance announcer  \r\t\tsubscribe: DroneConnecting \r\t\tdo: [ self state connection connectionState: ARDConstant connection_CONNECTING. \r\t\t\t\tself disableAll.\r\t\t\t\tself control suspendVideoProcess. ].\t\r\t\r\tself arDroneInstance announcer  \r\t\tsubscribe: DroneConfigurationFileReceivedForTheFirstTime \r\t\tdo: [ self config enabled: true. \r\t\t\t\tself display configButton enabled: true.\r\t\t\t\tself config updateStateFromDroneConfiguration. ].\r\t\r\r\t',			#stamp : 'CaroHernandez 8/21/2016 23:20',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '774' ],		#self : OmReference [ '775' ],		#time : DateAndTime [ '2017-09-20T17:09:00.089411-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneUI,				#isMetaSide : false			},			#name : #unsubscribe,			#protocol : #private,			#sourceCode : 'unsubscribe\r\t\r\tself arDroneInstance announcer unsubscribe: DroneConnectionStart.\r\tself arDroneInstance announcer unsubscribe: DroneConnectionStop.\r\tself arDroneInstance announcer unsubscribe: DroneConnecting.\r\tself arDroneInstance announcer unsubscribe: DroneConfigurationFileReceivedForTheFirstTime.\t\r\t',			#stamp : 'CaroHernandez 7/19/2016 19:55',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '775' ],		#self : OmReference [ '776' ],		#time : DateAndTime [ '2017-09-20T17:09:00.091089-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForConfig,				#isMetaSide : false			},			#name : #arDroneInstance,			#protocol : #accessing,			#sourceCode : 'arDroneInstance\r\t^arDroneInstance',			#stamp : 'CaroHernandez 7/22/2016 00:46',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '776' ],		#self : OmReference [ '777' ],		#time : DateAndTime [ '2017-09-20T17:09:00.093022-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForConfig,				#isMetaSide : false			},			#name : #'arDroneInstance:',			#protocol : #accessing,			#sourceCode : 'arDroneInstance: anARDrone\r\tarDroneInstance := anARDrone.\r\r',			#stamp : 'CaroHernandez 7/22/2016 00:47',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '777' ],		#self : OmReference [ '778' ],		#time : DateAndTime [ '2017-09-20T17:09:00.094939-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForConfig,				#isMetaSide : false			},			#name : #close,			#protocol : #initialize-release,			#sourceCode : 'close\r\t^ window close',			#stamp : 'CaroHernandez 7/22/2016 00:45',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '778' ],		#self : OmReference [ '779' ],		#time : DateAndTime [ '2017-09-20T17:09:00.096465-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForConfig,				#isMetaSide : false			},			#name : #configItems,			#protocol : #accessing,			#sourceCode : 'configItems\r\t| configFile searchedString regex blockFilter |\r\t(searchBox isNil |  arDroneInstance isNil )\r\t\tifTrue:  [ ^ #() ].\r\t\r\tconfigFile := arDroneInstance configurationManager configuration asString.\r\tsearchedString :=\tsearchBox contents asString.\t\t\t\r\t\r\tblockFilter := [ \r\t\tlastSearchedString := searchedString.\r\t\tregex := searchedString asRegex.\r\t\tconfigArrayFiltered := configArray reject: [ :line | (regex matchesIn: line) isEmpty ] ].\r\t\r\t(lastConfigFile = configFile) \r\tifTrue: [\r\t\t(lastSearchedString = searchedString)\r\t\tifFalse: [ \r\t\t\tblockFilter value ]\r\t\t]\r\tifFalse: [\r\t\tlastConfigFile := configFile.\r\t\tconfigArray := (Character lf asString) split: configFile.\r\t\tblockFilter value\r\t\t].\r\t^ configArrayFiltered.',			#stamp : 'CaroHernandez 9/15/2016 18:23',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '779' ],		#self : OmReference [ '780' ],		#time : DateAndTime [ '2017-09-20T17:09:00.098082-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForConfig,				#isMetaSide : false			},			#name : #configSelected,			#protocol : #accessing,			#sourceCode : 'configSelected\r\t^ configSelected',			#stamp : 'CaroHernandez 7/22/2016 00:26',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '780' ],		#self : OmReference [ '781' ],		#time : DateAndTime [ '2017-09-20T17:09:00.099559-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForConfig,				#isMetaSide : false			},			#name : #'configSelected:',			#protocol : #accessing,			#sourceCode : 'configSelected: anIndex\r\tconfigSelected := anIndex',			#stamp : 'CaroHernandez 7/22/2016 00:26',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '781' ],		#self : OmReference [ '782' ],		#time : DateAndTime [ '2017-09-20T17:09:00.101074-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForConfig,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\t| container configDisplay |\r\tsuper initialize.\r\r\twindow := StandardWindow labelled: \'Configuration\'.\r\twindow addMorph: (container := Morph new) frame: (0@0 corner: 1@1).\r\t\r\tcontainer layoutPolicy: TableLayout new; listDirection: #topToBottom.\r\tconfigDisplay := \r\t\t(LRPARDroneMultiColumnList  \r        \ton: self \r        \tlist: #configItems \r        \tselected: #configSelected \r        \tchangeSelected: #configSelected: \r        \tmenu: nil \r        \twrapSelector: #wrap:at:) \r\t\t  \thResizing: #spaceFill;\r\t\t\tvResizing: #spaceFill; \r\t\t\tstepTime: self updateTime.\r\t\r\tsearchBox := TextMorph  new\r\t\t\tmargins: (2@0 corner: 2@1);\r\t\t\tbackgroundColor: Color white;\r\t\t\tborderStyle: (BorderStyle simple width: 0);\r\t\t\thResizing: #spaceFill.\r\t\t\t\t\t\r\t\r\tcontainer addMorph: configDisplay.\r\tcontainer addMorph: searchBox.\r\t\r\tlastConfigFile := \'\'.\r\tlastSearchedString := \'   \'.\r\tconfigArray := #().\r\tconfigArrayFiltered := #().',			#stamp : 'CaroHernandez 9/15/2016 18:07',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '782' ],		#self : OmReference [ '783' ],		#time : DateAndTime [ '2017-09-20T17:09:00.103015-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForConfig,				#isMetaSide : false			},			#name : #open,			#protocol : #'instance creation',			#sourceCode : 'open\r\t^ window openInWorld: self currentWorld  extent: 600@600 ',			#stamp : 'CaroHernandez 7/22/2016 15:23',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '783' ],		#self : OmReference [ '784' ],		#time : DateAndTime [ '2017-09-20T17:09:00.10455-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForConfig,				#isMetaSide : false			},			#name : #searchBox,			#protocol : #accessing,			#sourceCode : 'searchBox\r\t^ searchBox',			#stamp : 'CaroHernandez 7/22/2016 17:14',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '784' ],		#self : OmReference [ '785' ],		#time : DateAndTime [ '2017-09-20T17:09:00.106059-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForConfig,				#isMetaSide : false			},			#name : #'setARDroneInstance:',			#protocol : #accessing,			#sourceCode : 'setARDroneInstance: anARDrone\r\tself arDroneInstance: anARDrone.',			#stamp : 'CaroHernandez 7/22/2016 00:46',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '785' ],		#self : OmReference [ '786' ],		#time : DateAndTime [ '2017-09-20T17:09:00.107427-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForConfig,				#isMetaSide : false			},			#name : #updateTime,			#protocol : #accessing,			#sourceCode : 'updateTime\r\t"milliseconds passed between data updates"\r\t^ 800',			#stamp : 'CaroHernandez 8/13/2016 21:09',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '786' ],		#self : OmReference [ '787' ],		#time : DateAndTime [ '2017-09-20T17:09:00.109819-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForConfig,				#isMetaSide : false			},			#name : #'wrap:at:',			#protocol : #list,			#sourceCode : 'wrap: item at: index\r\r\t| nameAndVal nameDetails |\r\t\r\t[ nameAndVal := (\'=\' split: item).\r\t((nameAndVal size) = 2)\r\t\tifTrue: [\r\t\t\tnameDetails := \':\' split: (nameAndVal at: 1).\r\t\t\tnameDetails size = 2\r\t\t\t\tifTrue: [ ^ { nameDetails at:1 . \r\t\t\t\t\t\t\t\t  nameDetails at:2 . \r\t\t\t\t\t\t\t\t  nameAndVal at:2 } asOrderedCollection  \r\t\t\t\t]\r\t\t].\r\t^ { \'\'. \'\' . \'\'} asOrderedCollection \r\t] on: Exception do: [ ^ { \'\'. \'\' . \'\'} asOrderedCollection  ]\r\t',			#stamp : 'CaroHernandez 7/22/2016 15:21',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '787' ],		#self : OmReference [ '788' ],		#time : DateAndTime [ '2017-09-20T17:09:00.112566-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForNavdata,				#isMetaSide : false			},			#name : #arDroneInstance,			#protocol : #accessing,			#sourceCode : 'arDroneInstance\r\t^ arDroneInstance',			#stamp : 'CaroHernandez 7/21/2016 23:42',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '788' ],		#self : OmReference [ '789' ],		#time : DateAndTime [ '2017-09-20T17:09:00.115082-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForNavdata,				#isMetaSide : false			},			#name : #'arDroneInstance:',			#protocol : #accessing,			#sourceCode : 'arDroneInstance: anARDrone\r\tarDroneInstance := anARDrone.\r\r',			#stamp : 'CaroHernandez 7/21/2016 23:42',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '789' ],		#self : OmReference [ '790' ],		#time : DateAndTime [ '2017-09-20T17:09:00.116891-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForNavdata,				#isMetaSide : false			},			#name : #close,			#protocol : #'as yet unclassified',			#sourceCode : 'close\r\t^ window close',			#stamp : 'CaroHernandez 7/22/2016 00:44',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '790' ],		#self : OmReference [ '791' ],		#time : DateAndTime [ '2017-09-20T17:09:00.118364-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForNavdata,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\t| container navdataDisplay stateDisplay |\r\tsuper initialize.\r\r\twindow := StandardWindow labelled: \'Navdata\'.\r\twindow addMorph: (container := Morph new) frame: (0@0 corner: 1@1).\r\r\tcontainer layoutPolicy: TableLayout new; listDirection: #rightToLeft.\r\r\tnavdataDisplay := \r\t\t(LRPARDroneMultiColumnList  \r        \ton: self \r        \tlist: #navdataItems \r        \tselected: #navdataSelected \r        \tchangeSelected: #navdataSelected: \r        \tmenu: nil \r        \twrapSelector: #wrap:at:) \r\t\t  \thResizing: #spaceFill;\r\t\t\tvResizing: #spaceFill.\r\t\t\t\r\tcontainer addMorph: navdataDisplay.\r\tstateDisplay := (LRPARDroneMultiColumnList  \r        \ton: self \r        \tlist: #stateItems \r        \tselected: #stateSelected \r        \tchangeSelected: #stateSelected: \r        \tmenu: nil \r        \twrapSelector: #wrap:at:) \r\t\t  \thResizing: #spaceFill;\r\t\t\tvResizing: #spaceFill.\r\tcontainer addMorph: stateDisplay',			#stamp : 'CaroHernandez 7/22/2016 00:35',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '791' ],		#self : OmReference [ '792' ],		#time : DateAndTime [ '2017-09-20T17:09:00.120224-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForNavdata,				#isMetaSide : false			},			#name : #navdataItems,			#protocol : #list,			#sourceCode : 'navdataItems\r\t| navdata |\r\tarDroneInstance ifNil: [ ^ { } ].\r\tnavdata := arDroneInstance lastNavdataPacketReceived.\r\t^ (Character cr) split: (navdata asString)\r\t',			#stamp : 'CaroHernandez 7/22/2016 00:32',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '792' ],		#self : OmReference [ '793' ],		#time : DateAndTime [ '2017-09-20T17:09:00.122622-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForNavdata,				#isMetaSide : false			},			#name : #navdataSelected,			#protocol : #list,			#sourceCode : 'navdataSelected\r\r\t^ navdataSelected ifNil: [ navdataSelected := 0 ]',			#stamp : 'CaroHernandez 7/22/2016 00:12',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '793' ],		#self : OmReference [ '794' ],		#time : DateAndTime [ '2017-09-20T17:09:00.124709-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForNavdata,				#isMetaSide : false			},			#name : #'navdataSelected:',			#protocol : #list,			#sourceCode : 'navdataSelected: anIndex\r\tnavdataSelected := anIndex',			#stamp : 'CaroHernandez 7/22/2016 00:12',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '794' ],		#self : OmReference [ '795' ],		#time : DateAndTime [ '2017-09-20T17:09:00.127546-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForNavdata,				#isMetaSide : false			},			#name : #open,			#protocol : #'as yet unclassified',			#sourceCode : 'open\r\t^ window openInWorld: self currentWorld  extent: 600@700 ',			#stamp : 'CaroHernandez 7/22/2016 15:29',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '795' ],		#self : OmReference [ '796' ],		#time : DateAndTime [ '2017-09-20T17:09:00.130035-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForNavdata,				#isMetaSide : false			},			#name : #'setARDroneInstance:',			#protocol : #accessing,			#sourceCode : 'setARDroneInstance: anARDrone\r\tself arDroneInstance: anARDrone.',			#stamp : 'CaroHernandez 7/21/2016 23:42',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '796' ],		#self : OmReference [ '797' ],		#time : DateAndTime [ '2017-09-20T17:09:00.131995-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForNavdata,				#isMetaSide : false			},			#name : #stateItems,			#protocol : #list,			#sourceCode : 'stateItems\r\t| state |\r\tarDroneInstance ifNil: [ ^ #() ].\r\tstate := arDroneInstance lastNavdataPacketReceived header stateVerbose.\r\t^ (Character cr) split: (state asString)\r\t\r\t',			#stamp : 'CaroHernandez 7/22/2016 00:31',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '797' ],		#self : OmReference [ '798' ],		#time : DateAndTime [ '2017-09-20T17:09:00.133672-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForNavdata,				#isMetaSide : false			},			#name : #stateSelected,			#protocol : #list,			#sourceCode : 'stateSelected\r\r\t^ stateSelected ifNil: [ stateSelected := 0 ]',			#stamp : 'CaroHernandez 7/22/2016 00:12',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '798' ],		#self : OmReference [ '799' ],		#time : DateAndTime [ '2017-09-20T17:09:00.135266-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForNavdata,				#isMetaSide : false			},			#name : #'stateSelected:',			#protocol : #list,			#sourceCode : 'stateSelected: anIndex\r\tstateSelected := anIndex',			#stamp : 'CaroHernandez 7/22/2016 00:13',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '799' ],		#self : OmReference [ '800' ],		#time : DateAndTime [ '2017-09-20T17:09:00.136803-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForNavdata,				#isMetaSide : false			},			#name : #'wrap:at:',			#protocol : #list,			#sourceCode : 'wrap: item at: index\r\r\t| rows |\r\t\r\t[rows := (\':\' split: item).\r\t\t((rows size) = 2)\r\t\tifTrue: [ ^ { rows at:2 . rows at:1 } asOrderedCollection ]\r\t\tifFalse: [ ^ { \'\'. \'\' } asOrderedCollection ]\r\t] on: Exception do: [Transcript show:\'Murio en lista interior\';cr ]',			#stamp : 'CaroHernandez 7/21/2016 23:56',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '800' ],		#self : OmReference [ '801' ],		#time : DateAndTime [ '2017-09-20T17:09:00.139298-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForVision,				#isMetaSide : false			},			#name : #arDroneInstance,			#protocol : #accessing,			#sourceCode : 'arDroneInstance\r\t^ arDroneInstance',			#stamp : 'CaroHernandez 7/22/2016 15:35',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '801' ],		#self : OmReference [ '802' ],		#time : DateAndTime [ '2017-09-20T17:09:00.140793-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForVision,				#isMetaSide : false			},			#name : #'arDroneInstance:',			#protocol : #accessing,			#sourceCode : 'arDroneInstance: anARDrone\r\tarDroneInstance := anARDrone.\r\r',			#stamp : 'CaroHernandez 7/22/2016 15:35',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '802' ],		#self : OmReference [ '803' ],		#time : DateAndTime [ '2017-09-20T17:09:00.143193-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForVision,				#isMetaSide : false			},			#name : #'backgroundColorFor:at:',			#protocol : #'widget API',			#sourceCode : 'backgroundColorFor: anItem at: index\r\r\t((anItem at:2) = \'true\') \r\t\tifTrue: [ ^ Color green ].\r\t^ Color white \r\t\t',			#stamp : 'CaroHernandez 7/29/2016 13:46',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '803' ],		#self : OmReference [ '804' ],		#time : DateAndTime [ '2017-09-20T17:09:00.14593-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForVision,				#isMetaSide : false			},			#name : #close,			#protocol : #initialize-release,			#sourceCode : 'close\r\t^ window close',			#stamp : 'CaroHernandez 7/22/2016 15:35',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '804' ],		#self : OmReference [ '805' ],		#time : DateAndTime [ '2017-09-20T17:09:00.14874-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForVision,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\t| container visionFrontDisplay visionBottomDisplay |\r\tsuper initialize.\r\r\twindow := StandardWindow labelled: \'Vision Detections\'.\r\r\twindow addMorph: (container := Morph new) frame: (0@0 corner: 1@1).\r\r\tcontainer layoutPolicy: TableLayout new; listDirection: #leftToRight.\r\t\r\tvisionFrontDisplay := \r\t\t(LRPARDroneMultiColumnList  \r        \ton: self \r        \tlist: #visionFrontItems \r        \tselected: #visionFrontSelected \r        \tchangeSelected: #visionFrontSelected: \r        \tmenu: nil \r        \twrapSelector: #wrap:at:) \r\t\t  \thResizing: #spaceFill;\r\t\t\tvResizing: #spaceFill;\r\t\t\tbackgroundColoringBlockOrSelector: #backgroundColorFor:at:.\r\t\r\tvisionBottomDisplay := \r\t\t(LRPARDroneMultiColumnList  \r        \ton: self \r        \tlist: #visionBottomItems \r        \tselected: #visionBottomSelected \r        \tchangeSelected: #visionBottomSelected: \r        \tmenu: nil \r        \twrapSelector: #wrap:at:) \r\t\t  \thResizing: #spaceFill;\r\t\t\tvResizing: #spaceFill;\r\t\t\tbackgroundColoringBlockOrSelector: #backgroundColorFor:at:..\r\t\t\t\r\tcontainer addMorph: visionFrontDisplay.\r\tcontainer addMorph: visionBottomDisplay.\r\t',			#stamp : 'CaroHernandez 7/29/2016 17:35',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '805' ],		#self : OmReference [ '806' ],		#time : DateAndTime [ '2017-09-20T17:09:00.150415-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForVision,				#isMetaSide : false			},			#name : #open,			#protocol : #'instance creation',			#sourceCode : 'open\r\t^ window openInWorld: self currentWorld  extent: 380@150 ',			#stamp : 'CaroHernandez 7/29/2016 17:39',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '806' ],		#self : OmReference [ '807' ],		#time : DateAndTime [ '2017-09-20T17:09:00.152282-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForVision,				#isMetaSide : false			},			#name : #'setARDroneInstance:',			#protocol : #accessing,			#sourceCode : 'setARDroneInstance: anARDrone\r\tself arDroneInstance: anARDrone.',			#stamp : 'CaroHernandez 7/22/2016 15:35',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '807' ],		#self : OmReference [ '808' ],		#time : DateAndTime [ '2017-09-20T17:09:00.153827-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForVision,				#isMetaSide : false			},			#name : #visionBottomItems,			#protocol : #'as yet unclassified',			#sourceCode : 'visionBottomItems\r\t| vd dt |\r\tarDroneInstance ifNil: [ ^ { } ].\r\tvd := arDroneInstance visionDetectAnalyst .\r\tdt := vd detectedTag: ARDConstant detectedTag_OR_IN_CV.\r\t \r\t^ { \'OR ROUNDEL:in BOTTOM Cam\'.\r\t\t(\'Detected:\', dt detected asString).\r\t\t\'X Centered:\', (dt isCenteredInXWithTolerance: 0.1) asString .\r\t\t\'Y Centered:\', (dt isCenteredInYWithTolerance: 0.1) asString .\r\t\t\'Oriented:\', (dt isOrientedIn: 0 tolerance: 0.1 ) asString}',			#stamp : 'CaroHernandez 7/29/2016 17:39',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '808' ],		#self : OmReference [ '809' ],		#time : DateAndTime [ '2017-09-20T17:09:00.15525-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForVision,				#isMetaSide : false			},			#name : #visionBottomSelected,			#protocol : #accessing,			#sourceCode : 'visionBottomSelected\r\t^ visionBottomSelected ',			#stamp : 'CaroHernandez 7/23/2016 15:39',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '809' ],		#self : OmReference [ '810' ],		#time : DateAndTime [ '2017-09-20T17:09:00.156375-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForVision,				#isMetaSide : false			},			#name : #'visionBottomSelected:',			#protocol : #accessing,			#sourceCode : 'visionBottomSelected: anIndex\r\tvisionBottomSelected := anIndex  ',			#stamp : 'CaroHernandez 7/23/2016 15:39',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '810' ],		#self : OmReference [ '811' ],		#time : DateAndTime [ '2017-09-20T17:09:00.157821-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForVision,				#isMetaSide : false			},			#name : #visionFrontItems,			#protocol : #'as yet unclassified',			#sourceCode : 'visionFrontItems\r\t| vd dt |\r\tarDroneInstance ifNil: [ ^ { } ].\r\tvd := arDroneInstance visionDetectAnalyst .\r\tdt := vd detectedTag: ARDConstant detectedTag_SH_IN_CH.\r\t \r\t^ { \'SHELL:in FRONT Cam\'.\r\t\t(\'Detected:\', dt detected asString).\r\t\t\'X Centered:\', (dt isCenteredInXWithTolerance: 0.1) asString .\r\t\t\'Y Centered:\', (dt isCenteredInYWithTolerance: 0.2) asString }\r\t\t',			#stamp : 'CaroHernandez 7/29/2016 17:39',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '811' ],		#self : OmReference [ '812' ],		#time : DateAndTime [ '2017-09-20T17:09:00.159755-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForVision,				#isMetaSide : false			},			#name : #visionFrontSelected,			#protocol : #accessing,			#sourceCode : 'visionFrontSelected\r\t^ visionFrontSelected ',			#stamp : 'CaroHernandez 7/23/2016 15:39',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '812' ],		#self : OmReference [ '813' ],		#time : DateAndTime [ '2017-09-20T17:09:00.161605-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForVision,				#isMetaSide : false			},			#name : #'visionFrontSelected:',			#protocol : #accessing,			#sourceCode : 'visionFrontSelected: anIndex\r\tvisionFrontSelected := anIndex  ',			#stamp : 'CaroHernandez 7/23/2016 15:39',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '813' ],		#self : OmReference [ '814' ],		#time : DateAndTime [ '2017-09-20T17:09:00.163251-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneDisplayerForVision,				#isMetaSide : false			},			#name : #'wrap:at:',			#protocol : #list,			#sourceCode : 'wrap: item at: index\r\r\t^ (\':\' split: item) asOrderedCollection. ',			#stamp : 'CaroHernandez 7/23/2016 15:16',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '814' ],		#self : OmReference [ '815' ],		#time : DateAndTime [ '2017-09-20T17:09:00.16483-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneMultiColumnList,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\tmyStepTime := 250',			#stamp : 'CaroHernandez 7/22/2016 17:53',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '815' ],		#self : OmReference [ '816' ],		#time : DateAndTime [ '2017-09-20T17:09:00.166056-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneMultiColumnList,				#isMetaSide : false			},			#name : #step,			#protocol : #'stepping and presenter',			#sourceCode : 'step\r\t| y |\r\ty := self scrollBar value.\r\tself updateList.\r\tself scrollBar setValue: y.',			#stamp : 'CaroHernandez 9/15/2016 17:48',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '816' ],		#self : OmReference [ '817' ],		#time : DateAndTime [ '2017-09-20T17:09:00.167231-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneMultiColumnList,				#isMetaSide : false			},			#name : #stepTime,			#protocol : #stepping,			#sourceCode : 'stepTime\r\t^ myStepTime ',			#stamp : 'CaroHernandez 7/22/2016 17:53',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '817' ],		#self : OmReference [ '818' ],		#time : DateAndTime [ '2017-09-20T17:09:00.168383-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneMultiColumnList,				#isMetaSide : false			},			#name : #'stepTime:',			#protocol : #stepping,			#sourceCode : 'stepTime: anInt\r\tmyStepTime := anInt',			#stamp : 'CaroHernandez 7/22/2016 17:53',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '818' ],		#self : OmReference [ '819' ],		#time : DateAndTime [ '2017-09-20T17:09:00.169596-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneMultiColumnList,				#isMetaSide : false			},			#name : #wantsSteps,			#protocol : #'stepping and presenter',			#sourceCode : 'wantsSteps\r\t^ true',			#stamp : 'CaroHernandez 7/21/2016 22:55',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '819' ],		#self : OmReference [ '820' ],		#time : DateAndTime [ '2017-09-20T17:09:00.170867-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge,				#isMetaSide : false			},			#name : #arDroneInstance,			#protocol : #accessing,			#sourceCode : 'arDroneInstance\r\t^arDroneInstance\r\r\t',			#stamp : 'CaroHernandez 4/18/2016 22:34',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '820' ],		#self : OmReference [ '821' ],		#time : DateAndTime [ '2017-09-20T17:09:00.172017-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge,				#isMetaSide : false			},			#name : #'arDroneInstance:',			#protocol : #accessing,			#sourceCode : 'arDroneInstance: anARDrone\r\tarDroneInstance := anARDrone\r\r\t',			#stamp : 'CaroHernandez 4/18/2016 22:33',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '821' ],		#self : OmReference [ '822' ],		#time : DateAndTime [ '2017-09-20T17:09:00.173126-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge,				#isMetaSide : false			},			#name : #cleanUp,			#protocol : #cleanup,			#sourceCode : 'cleanUp\r\t(self arDroneInstance isNotNil)\r\t\tifTrue: [self arDroneInstance terminateSession].\r\tsuper cleanUp.\r\t',			#stamp : 'CaroHernandez 4/29/2016 00:19',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '822' ],		#self : OmReference [ '823' ],		#time : DateAndTime [ '2017-09-20T17:09:00.174797-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge,				#isMetaSide : false			},			#name : #generateConfigurationMethods,			#protocol : #generating,			#sourceCode : 'generateConfigurationMethods\r\tself \r\t\taddMethod: \'setConfigurationFor: aParameter value: aVal\'\r\t\tsource: (\'^__lrpBridge arDroneInstance droneSetConfigurationFor: aParameter value: aVal\').\r\tself \r\t\taddMethod: (\'changeVideoChannel\')\r\t\tsource: (\'^__lrpBridge arDroneInstance changeVideoChannel\').\r\tself \r\t\taddMethod: (\'modeHoverOnTopOfOrientedRoundel\')\r\t\tsource: (\'^__lrpBridge arDroneInstance configFlyingModeHoverOnTopOfOrientedRoundel\').\r\tself \r\t\taddMethod: (\'modeFreeFlight\')\r\t\tsource: (\'^__lrpBridge arDroneInstance configFlyingModeFreeFlight\').',			#stamp : 'CaroHernandez 9/20/2016 20:39',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '823' ],		#self : OmReference [ '824' ],		#time : DateAndTime [ '2017-09-20T17:09:00.176286-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge,				#isMetaSide : false			},			#name : #generateFlightMethods,			#protocol : #generating,			#sourceCode : 'generateFlightMethods\r\t\r\tself \r\t\taddMethod: (\'animateFlight: aFlightAnimationNumber duration: aDuration\')\r\t\tsource: (\'^__lrpBridge arDroneInstance animateFlight: aFlightAnimationNumber duration: aDuration\').',			#stamp : 'CaroHernandez 5/15/2016 19:55',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '824' ],		#self : OmReference [ '825' ],		#time : DateAndTime [ '2017-09-20T17:09:00.178042-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge,				#isMetaSide : false			},			#name : #generateLEDMethods,			#protocol : #generating,			#sourceCode : 'generateLEDMethods\r\t\r\tself \r\t\taddMethod: (\'animateLEDs: aLEDAnimationNumber frequency: aFrequency duration: aDuration\')\r\t\tsource: (\'^__lrpBridge arDroneInstance animateLEDs: aLEDAnimationNumber frequency: aFrequency duration: aDuration\').\r\tself \r\t\taddMethod: (\'ledsFireForever\')\r\t\tsource: (\'^__lrpBridge arDroneInstance animateLEDs: \', \r\t\t\t\t\tARDConstant ledAnimation_FIRE asString,\r\t\t\t\t\t\' frequency: 5 duration: 60\').\r\tself \r\t\taddMethod: (\'ledsBlinkRedForever\')\r\t\tsource: (\'^__lrpBridge arDroneInstance animateLEDs: \', \r\t\t\t\t\tARDConstant ledAnimation_BLINK_RED asString,\r\t\t\t\t\t\' frequency: 8 duration: 60\').\r\t\r\tself \r\t\taddMethod: (\'ledsBlinkGreenForever\')\r\t\tsource: (\'^__lrpBridge arDroneInstance animateLEDs: \', \r\t\t\t\t\tARDConstant ledAnimation_BLINK_GREEN asString,\r\t\t\t\t\t\' frequency: 8 duration: 60\').\r\tself \r\t\taddMethod: (\'ledsStandard\')\r\t\tsource: (\'^__lrpBridge arDroneInstance animateLEDs: \', \r\t\t\t\t\tARDConstant ledAnimation_GREEN asString,\r\t\t\t\t\t\' frequency: 8 duration: 60\').',			#stamp : 'CaroHernandez 6/3/2016 19:49',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '825' ],		#self : OmReference [ '826' ],		#time : DateAndTime [ '2017-09-20T17:09:00.180254-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge,				#isMetaSide : false			},			#name : #generateMethods,			#protocol : #generating,			#sourceCode : 'generateMethods\r\t\r\tself generateNavdataMethods.\r\tself generateMovementMethods.\r\tself generateStateMethods.  \r\tself generateLEDMethods.\r\tself generateFlightMethods. \r\tself generateConfigurationMethods.\r\tself generateTagDetectionMethods. ',			#stamp : 'CaroHernandez 5/23/2016 18:09',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '826' ],		#self : OmReference [ '827' ],		#time : DateAndTime [ '2017-09-20T17:09:00.182104-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge,				#isMetaSide : false			},			#name : #generateMovementMethods,			#protocol : #generating,			#sourceCode : 'generateMovementMethods\r\t\r\tself \r\t\taddMethod: (\'takeOff\')\r\t\tsource: (\'^__lrpBridge arDroneInstance takeOff\').\r\tself \r\t\taddMethod: (\'land\')\r\t\tsource: (\'^__lrpBridge arDroneInstance land\').\r\tself \r\t\taddMethod: (\'roll: aFloat\')\r\t\tsource: (\'^__lrpBridge arDroneInstance roll: aFloat\').\r\tself \r\t\taddMethod: (\'pitch: aFloat\')\r\t\tsource: (\'^__lrpBridge arDroneInstance pitch: aFloat\').\r\tself \r\t\taddMethod: (\'yaw: aFloat\')\r\t\tsource: (\'^__lrpBridge arDroneInstance yaw: aFloat\').\r\tself \r\t\taddMethod: (\'elevate: aFloat\')\r\t\tsource: (\'^__lrpBridge arDroneInstance elevate: aFloat\').\r\tself \r\t\taddMethod: (\'stabilize\')\r\t\tsource: (\'^__lrpBridge arDroneInstance stabilize\').\r\tself \r\t\taddMethod: (\'moveByLeftRightTilt: leftRightTilt frontBackTilt: frontBackTilt angularSpeed: angularSpeed verticalSpeed: verticalSpeed\')\r\t\tsource: (\'^__lrpBridge arDroneInstance moveByLeftRightTilt: leftRightTilt frontBackTilt: frontBackTilt angularSpeed: angularSpeed verticalSpeed: verticalSpeed\').\r\t',			#stamp : 'CaroHernandez 8/22/2016 19:52',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '827' ],		#self : OmReference [ '828' ],		#time : DateAndTime [ '2017-09-20T17:09:00.183746-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge,				#isMetaSide : false			},			#name : #generateNavdataMethods,			#protocol : #generating,			#sourceCode : 'generateNavdataMethods\r\t\r\tself \r\t\taddMethod: (\'receiverProcessCallback: aBlock\')\r\t\tsource: (\'^__lrpBridge arDroneInstance receiverProcessCallback: aBlock\').',			#stamp : 'CaroHernandez 5/22/2016 19:48',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '828' ],		#self : OmReference [ '829' ],		#time : DateAndTime [ '2017-09-20T17:09:00.185315-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge,				#isMetaSide : false			},			#name : #generateStateMethods,			#protocol : #generating,			#sourceCode : 'generateStateMethods\r\t\r\tself \r\t\taddMethod: (\'isFlying\')\r\t\tsource: (\'^__lrpBridge arDroneInstance isFlying\').\r\tself \r\t\taddMethod: (\'roll\')\r\t\tsource: (\'^__lrpBridge arDroneInstance roll\').\r\tself \r\t\taddMethod: (\'altitude\')\r\t\tsource: (\'^__lrpBridge arDroneInstance altitude\').\r\t',			#stamp : 'CaroHernandez 5/23/2016 20:38',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '829' ],		#self : OmReference [ '830' ],		#time : DateAndTime [ '2017-09-20T17:09:00.186677-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge,				#isMetaSide : false			},			#name : #generateTagDetectionMethods,			#protocol : #generating,			#sourceCode : 'generateTagDetectionMethods\r\t\t\r\tself \r\t\taddMethod: (\'tagsTotalDetected\')\r\t\tsource: (\'^__lrpBridge arDroneInstance tagsTotalDetected\').\r\tself \r\t\taddMethod: (\'tagDetected: aDetectedTagType\')\r\t\tsource: (\'^__lrpBridge arDroneInstance tagDetected: aDetectedTagType\').',			#stamp : 'CaroHernandez 8/22/2016 18:30',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '830' ],		#self : OmReference [ '831' ],		#time : DateAndTime [ '2017-09-20T17:09:00.18794-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge,				#isMetaSide : false			},			#name : #'openUIFor:',			#protocol : #ui,			#sourceCode : 'openUIFor: anInterpreter\r\tself setupARDrone. \r\tself generateMethods.\r\t^ LRPARDroneUI new setARDroneInstance: (self arDroneInstance); openWithSpec.',			#stamp : 'CaroHernandez 7/19/2016 19:13',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#prior : OmReference [ '831' ],		#self : OmReference [ '832' ],		#time : DateAndTime [ '2017-09-20T17:09:00.18927-03:00' ],		#trigger : OmReference [ '638' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge,				#isMetaSide : false			},			#name : #setupARDrone,			#protocol : #setup,			#sourceCode : 'setupARDrone\r\r\tself arDroneInstance: ARDrone newUniqueInstance\r\r\t',			#stamp : 'CaroHernandez 6/20/2016 04:02',			#package : #LiveRobotics-Bridge-ARDrone		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:14.68757-03:00' ],		#prior : OmReference [ '832' ],		#self : OmReference [ '833' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'LiveRobotics-Bridge-ARDrone-CaroHernandez.37'		]	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:39.826423-03:00' ],		#prior : OmReference [ '833' ],		#self : OmReference [ '834' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'LiveRobotics-Bridge-ARDrone-CaroHernandez.37',		#repositoryDescription : '/home/rodrigo/Downloads/pharo6.1/shared/ArDrone/pharo-local/package-cache'	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:52.932344-03:00' ],		#prior : OmReference [ '834' ],		#self : OmReference [ '835' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LRPARDroneBridge_GeneratedVars\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-InterpreterGenerated\''			},			#name : #LRPARDroneBridge_GeneratedVars,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneBridge_GeneratedVars class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneBridge_GeneratedVars class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneBridge_GeneratedVars,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-InterpreterGenerated,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LRPARDroneBridge_GeneratedVars\r\tinstanceVariableNames: \'__lrpBridge\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-InterpreterGenerated\''			},			#name : #LRPARDroneBridge_GeneratedVars,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneBridge_GeneratedVars,						#isMetaSide : false					},					#name : #__lrpBridge,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneBridge_GeneratedVars class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneBridge_GeneratedVars class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneBridge_GeneratedVars,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-InterpreterGenerated,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.16428-03:00' ],		#prior : OmReference [ '835' ],		#self : OmReference [ '836' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #__lrpBridge,			#protocol : #accessing,			#sourceCode : '__lrpBridge\r\t^ __lrpBridge',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.169547-03:00' ],		#prior : OmReference [ '836' ],		#self : OmReference [ '837' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'__lrpBridge:',			#protocol : #accessing,			#sourceCode : '__lrpBridge: anObject\r\t__lrpBridge := anObject',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.299007-03:00' ],		#prior : OmReference [ '837' ],		#self : OmReference [ '838' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'receiverProcessCallback:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'receiverProcessCallback: aBlock\r^__lrpBridge arDroneInstance receiverProcessCallback: aBlock',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.30254-03:00' ],		#prior : OmReference [ '838' ],		#self : OmReference [ '839' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #takeOff,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'takeOff\r^__lrpBridge arDroneInstance takeOff',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.305426-03:00' ],		#prior : OmReference [ '839' ],		#self : OmReference [ '840' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #land,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'land\r^__lrpBridge arDroneInstance land',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.308626-03:00' ],		#prior : OmReference [ '840' ],		#self : OmReference [ '841' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'roll:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'roll: aFloat\r^__lrpBridge arDroneInstance roll: aFloat',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.313204-03:00' ],		#prior : OmReference [ '841' ],		#self : OmReference [ '842' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'pitch:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'pitch: aFloat\r^__lrpBridge arDroneInstance pitch: aFloat',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.316119-03:00' ],		#prior : OmReference [ '842' ],		#self : OmReference [ '843' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'yaw:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'yaw: aFloat\r^__lrpBridge arDroneInstance yaw: aFloat',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.319678-03:00' ],		#prior : OmReference [ '843' ],		#self : OmReference [ '844' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'elevate:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'elevate: aFloat\r^__lrpBridge arDroneInstance elevate: aFloat',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.321871-03:00' ],		#prior : OmReference [ '844' ],		#self : OmReference [ '845' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #stabilize,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'stabilize\r^__lrpBridge arDroneInstance stabilize',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.324874-03:00' ],		#prior : OmReference [ '845' ],		#self : OmReference [ '846' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'moveByLeftRightTilt:frontBackTilt:angularSpeed:verticalSpeed:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'moveByLeftRightTilt: leftRightTilt frontBackTilt: frontBackTilt angularSpeed: angularSpeed verticalSpeed: verticalSpeed\r^__lrpBridge arDroneInstance moveByLeftRightTilt: leftRightTilt frontBackTilt: frontBackTilt angularSpeed: angularSpeed verticalSpeed: verticalSpeed',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.326914-03:00' ],		#prior : OmReference [ '846' ],		#self : OmReference [ '847' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #isFlying,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'isFlying\r^__lrpBridge arDroneInstance isFlying',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.32889-03:00' ],		#prior : OmReference [ '847' ],		#self : OmReference [ '848' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #roll,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'roll\r^__lrpBridge arDroneInstance roll',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.330518-03:00' ],		#prior : OmReference [ '848' ],		#self : OmReference [ '849' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #altitude,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'altitude\r^__lrpBridge arDroneInstance altitude',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.332314-03:00' ],		#prior : OmReference [ '849' ],		#self : OmReference [ '850' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'animateLEDs:frequency:duration:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'animateLEDs: aLEDAnimationNumber frequency: aFrequency duration: aDuration\r^__lrpBridge arDroneInstance animateLEDs: aLEDAnimationNumber frequency: aFrequency duration: aDuration',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.334762-03:00' ],		#prior : OmReference [ '850' ],		#self : OmReference [ '851' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #ledsFireForever,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'ledsFireForever\r^__lrpBridge arDroneInstance animateLEDs: 5 frequency: 5 duration: 60',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.33668-03:00' ],		#prior : OmReference [ '851' ],		#self : OmReference [ '852' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #ledsBlinkRedForever,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'ledsBlinkRedForever\r^__lrpBridge arDroneInstance animateLEDs: 2 frequency: 8 duration: 60',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.338555-03:00' ],		#prior : OmReference [ '852' ],		#self : OmReference [ '853' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #ledsBlinkGreenForever,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'ledsBlinkGreenForever\r^__lrpBridge arDroneInstance animateLEDs: 1 frequency: 8 duration: 60',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.343518-03:00' ],		#prior : OmReference [ '853' ],		#self : OmReference [ '854' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #ledsStandard,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'ledsStandard\r^__lrpBridge arDroneInstance animateLEDs: 8 frequency: 8 duration: 60',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.345769-03:00' ],		#prior : OmReference [ '854' ],		#self : OmReference [ '855' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'animateFlight:duration:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'animateFlight: aFlightAnimationNumber duration: aDuration\r^__lrpBridge arDroneInstance animateFlight: aFlightAnimationNumber duration: aDuration',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.347857-03:00' ],		#prior : OmReference [ '855' ],		#self : OmReference [ '856' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'setConfigurationFor:value:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'setConfigurationFor: aParameter value: aVal\r^__lrpBridge arDroneInstance droneSetConfigurationFor: aParameter value: aVal',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.349393-03:00' ],		#prior : OmReference [ '856' ],		#self : OmReference [ '857' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #changeVideoChannel,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'changeVideoChannel\r^__lrpBridge arDroneInstance changeVideoChannel',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.351006-03:00' ],		#prior : OmReference [ '857' ],		#self : OmReference [ '858' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #modeHoverOnTopOfOrientedRoundel,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'modeHoverOnTopOfOrientedRoundel\r^__lrpBridge arDroneInstance configFlyingModeHoverOnTopOfOrientedRoundel',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.35254-03:00' ],		#prior : OmReference [ '858' ],		#self : OmReference [ '859' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #modeFreeFlight,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'modeFreeFlight\r^__lrpBridge arDroneInstance configFlyingModeFreeFlight',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.355401-03:00' ],		#prior : OmReference [ '859' ],		#self : OmReference [ '860' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #tagsTotalDetected,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'tagsTotalDetected\r^__lrpBridge arDroneInstance tagsTotalDetected',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:53.357346-03:00' ],		#prior : OmReference [ '860' ],		#self : OmReference [ '861' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'tagDetected:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'tagDetected: aDetectedTagType\r^__lrpBridge arDroneInstance tagDetected: aDetectedTagType',			#stamp : 'RodrigoDelgado 9/20/2017 17:09',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:09:55.28673-03:00' ],		#prior : OmReference [ '861' ],		#self : OmReference [ '862' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LRPARDroneBridge_GeneratedVars\r\tinstanceVariableNames: \'__lrpBridge\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'LiveRobotics-InterpreterGenerated\''			},			#name : #LRPARDroneBridge_GeneratedVars,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteLRPARDroneBridge_GeneratedVars,						#isMetaSide : false					},					#name : #__lrpBridge,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneBridge_GeneratedVars class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteLRPARDroneBridge_GeneratedVars class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteLRPARDroneBridge_GeneratedVars,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-InterpreterGenerated,			#package : #_UnpackagedPackage,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.292611-03:00' ],		#prior : OmReference [ '862' ],		#self : OmReference [ '863' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LRPARDroneBridge_GeneratedVars\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-InterpreterGenerated\''			},			#name : #LRPARDroneBridge_GeneratedVars,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneBridge_GeneratedVars class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneBridge_GeneratedVars class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneBridge_GeneratedVars,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-InterpreterGenerated,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LRPARDroneBridge_GeneratedVars\r\tinstanceVariableNames: \'__lrpBridge\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LiveRobotics-InterpreterGenerated\''			},			#name : #LRPARDroneBridge_GeneratedVars,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LRPARDroneBridge_GeneratedVars,						#isMetaSide : false					},					#name : #__lrpBridge,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LRPARDroneBridge_GeneratedVars class\r\tinstanceVariableNames: \'\''				},				#name : #'LRPARDroneBridge_GeneratedVars class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LRPARDroneBridge_GeneratedVars,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LiveRobotics-InterpreterGenerated,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.523355-03:00' ],		#prior : OmReference [ '863' ],		#self : OmReference [ '864' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #__lrpBridge,			#protocol : #accessing,			#sourceCode : '__lrpBridge\r\t^ __lrpBridge',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.527795-03:00' ],		#prior : OmReference [ '864' ],		#self : OmReference [ '865' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'__lrpBridge:',			#protocol : #accessing,			#sourceCode : '__lrpBridge: anObject\r\t__lrpBridge := anObject',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.646092-03:00' ],		#prior : OmReference [ '865' ],		#self : OmReference [ '866' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'receiverProcessCallback:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'receiverProcessCallback: aBlock\r^__lrpBridge arDroneInstance receiverProcessCallback: aBlock',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.650103-03:00' ],		#prior : OmReference [ '866' ],		#self : OmReference [ '867' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #takeOff,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'takeOff\r^__lrpBridge arDroneInstance takeOff',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.653067-03:00' ],		#prior : OmReference [ '867' ],		#self : OmReference [ '868' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #land,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'land\r^__lrpBridge arDroneInstance land',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.657517-03:00' ],		#prior : OmReference [ '868' ],		#self : OmReference [ '869' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'roll:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'roll: aFloat\r^__lrpBridge arDroneInstance roll: aFloat',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.662117-03:00' ],		#prior : OmReference [ '869' ],		#self : OmReference [ '870' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'pitch:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'pitch: aFloat\r^__lrpBridge arDroneInstance pitch: aFloat',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.666064-03:00' ],		#prior : OmReference [ '870' ],		#self : OmReference [ '871' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'yaw:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'yaw: aFloat\r^__lrpBridge arDroneInstance yaw: aFloat',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.66943-03:00' ],		#prior : OmReference [ '871' ],		#self : OmReference [ '872' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'elevate:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'elevate: aFloat\r^__lrpBridge arDroneInstance elevate: aFloat',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.671948-03:00' ],		#prior : OmReference [ '872' ],		#self : OmReference [ '873' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #stabilize,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'stabilize\r^__lrpBridge arDroneInstance stabilize',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.674513-03:00' ],		#prior : OmReference [ '873' ],		#self : OmReference [ '874' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'moveByLeftRightTilt:frontBackTilt:angularSpeed:verticalSpeed:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'moveByLeftRightTilt: leftRightTilt frontBackTilt: frontBackTilt angularSpeed: angularSpeed verticalSpeed: verticalSpeed\r^__lrpBridge arDroneInstance moveByLeftRightTilt: leftRightTilt frontBackTilt: frontBackTilt angularSpeed: angularSpeed verticalSpeed: verticalSpeed',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.677041-03:00' ],		#prior : OmReference [ '874' ],		#self : OmReference [ '875' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #isFlying,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'isFlying\r^__lrpBridge arDroneInstance isFlying',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.679668-03:00' ],		#prior : OmReference [ '875' ],		#self : OmReference [ '876' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #roll,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'roll\r^__lrpBridge arDroneInstance roll',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.682043-03:00' ],		#prior : OmReference [ '876' ],		#self : OmReference [ '877' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #altitude,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'altitude\r^__lrpBridge arDroneInstance altitude',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.685092-03:00' ],		#prior : OmReference [ '877' ],		#self : OmReference [ '878' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'animateLEDs:frequency:duration:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'animateLEDs: aLEDAnimationNumber frequency: aFrequency duration: aDuration\r^__lrpBridge arDroneInstance animateLEDs: aLEDAnimationNumber frequency: aFrequency duration: aDuration',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.688261-03:00' ],		#prior : OmReference [ '878' ],		#self : OmReference [ '879' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #ledsFireForever,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'ledsFireForever\r^__lrpBridge arDroneInstance animateLEDs: 5 frequency: 5 duration: 60',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.690782-03:00' ],		#prior : OmReference [ '879' ],		#self : OmReference [ '880' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #ledsBlinkRedForever,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'ledsBlinkRedForever\r^__lrpBridge arDroneInstance animateLEDs: 2 frequency: 8 duration: 60',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.694214-03:00' ],		#prior : OmReference [ '880' ],		#self : OmReference [ '881' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #ledsBlinkGreenForever,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'ledsBlinkGreenForever\r^__lrpBridge arDroneInstance animateLEDs: 1 frequency: 8 duration: 60',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.699015-03:00' ],		#prior : OmReference [ '881' ],		#self : OmReference [ '882' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #ledsStandard,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'ledsStandard\r^__lrpBridge arDroneInstance animateLEDs: 8 frequency: 8 duration: 60',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.702148-03:00' ],		#prior : OmReference [ '882' ],		#self : OmReference [ '883' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'animateFlight:duration:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'animateFlight: aFlightAnimationNumber duration: aDuration\r^__lrpBridge arDroneInstance animateFlight: aFlightAnimationNumber duration: aDuration',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.70483-03:00' ],		#prior : OmReference [ '883' ],		#self : OmReference [ '884' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'setConfigurationFor:value:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'setConfigurationFor: aParameter value: aVal\r^__lrpBridge arDroneInstance droneSetConfigurationFor: aParameter value: aVal',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.707539-03:00' ],		#prior : OmReference [ '884' ],		#self : OmReference [ '885' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #changeVideoChannel,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'changeVideoChannel\r^__lrpBridge arDroneInstance changeVideoChannel',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.710992-03:00' ],		#prior : OmReference [ '885' ],		#self : OmReference [ '886' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #modeHoverOnTopOfOrientedRoundel,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'modeHoverOnTopOfOrientedRoundel\r^__lrpBridge arDroneInstance configFlyingModeHoverOnTopOfOrientedRoundel',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.713783-03:00' ],		#prior : OmReference [ '886' ],		#self : OmReference [ '887' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #modeFreeFlight,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'modeFreeFlight\r^__lrpBridge arDroneInstance configFlyingModeFreeFlight',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.718213-03:00' ],		#prior : OmReference [ '887' ],		#self : OmReference [ '888' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #tagsTotalDetected,			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'tagsTotalDetected\r^__lrpBridge arDroneInstance tagsTotalDetected',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}OmEntry {	#tags : {		#author : 'RodrigoDelgado',		#time : DateAndTime [ '2017-09-20T17:19:12.721233-03:00' ],		#prior : OmReference [ '888' ],		#self : OmReference [ '889' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LRPARDroneBridge_GeneratedVars,				#isMetaSide : false			},			#name : #'tagDetected:',			#protocol : #'generated - LRPARDroneBridge',			#sourceCode : 'tagDetected: aDetectedTagType\r^__lrpBridge arDroneInstance tagDetected: aDetectedTagType',			#stamp : 'RodrigoDelgado 9/20/2017 17:19',			#package : #_UnpackagedPackage		}	}}